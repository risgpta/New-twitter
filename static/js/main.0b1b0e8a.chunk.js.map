{"version":3,"sources":["actions/types.js","reducers/postReducer.js","reducers/incrementReducer.js","reducers/allTweetsListReducer.js","reducers/myTweetsListReducer.js","reducers/loginReducer.js","reducers/signupReducer.js","reducers/miscActionReducer.js","reducers/profileReducer.js","reducers/tweetReducer.js","reducers/likeReducer.js","reducers/commentReducer.js","reducers/index.js","store.js","actions/baseurl.js","actions/miscAction.js","components/loader.js","containers/signup.js","actions/signupAction.js","containers/login.js","actions/loginAction.js","components/snackbar.js","containers/header.js","contexts/utils.js","actions/commentAction.js","components/reply.js","components/comment.js","components/tweet.js","actions/tweetAction.js","actions/likeAction.js","containers/mytweetList.js","actions/myTweetsListAction.js","containers/alltweetsList.js","actions/allTweetsListAction.js","containers/sidebar.js","firebase.js","components/rightSidebar.js","contexts/snackbar.js","components/profilePic.js","containers/tweetbox.js","containers/profilePage.js","actions/profileAction.js","containers/mainLayout.js","containers/home.js","newtwitter.js","App.js","serviceWorker.js","index.js","assets/twitter.svg","assets/person.svg","assets/target.svg","assets/heart.svg","assets/unlikeheart.svg","assets/comment.svg","assets/screen-player.svg","assets/delete.svg","assets/email.svg"],"names":["SNACK_BAR","initialState","items","item","count","isLoading","tweets","users","data","done","flag","profile","userData","load","open","usernameData","combineReducers","posts","state","action","type","console","log","payload","counter","allTweetsReducer","loginReducer","signupReducer","myTweetsReducer","miscActionReducer","profileReducer","tweetReducer","likeReducer","commentReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","BASE","goToProfile","dispatch","openSnackbar","Loader","id","connect","Loading","success","signup","request","method","headers","body","JSON","stringify","fetch","then","response","json","status","msg","message","catch","err","props","useState","signupIsOpen","setSignupOpen","signupdata","setSignupdata","closeSignup","useEffect","className","onClick","isOpen","onRequestClose","ariaHideApp","src","logo","alt","style","height","width","display","margin","marginTop","name","e","preventDefault","inputs","document","getElementById","querySelectorAll","userinfo","value","username","length","email","password","test","handleSignupSubmit","login","token","localStorage","setItem","user_info","_id","profilePic","loginIsOpen","setLoginOpen","logindata","setLogindata","closeLogin","handleLoginSubmit","Alert","elevation","variant","useStyles","makeStyles","theme","root","spacing","openData","classes","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","logout","getItem","UtilsContext","createContext","UtilsContextProvider","chat","setChat","mytweet","setMytweet","editTweet","setEditTweet","editTweetContent","setEditTweetContent","editTweetLikes","setEditTweetLikes","loader","setLoader","loader2","setLoader2","Provider","children","createComment","url","parentid","threadlevel","updateComment","commentid","error","deleteComment","reply","setReply","edit","setEdit","commentId","color","textDecoration","onChange","target","placeholder","putdata","text","tweetId","postReply","map","item2","marginLeft","marginBottom","commentorid","delComment","editComment","LoadingComments","comment","setComment","Comments","Users","postComment","Likelist","update","deleteTweet","tweet_id","updateTweet","likeTweet","fetchLikeList","readComment","inputRef","useRef","deleteTweetid","setDeleteTweetid","setData","editTweetid","setEditTweetid","showComment","setShowComment","imgV","setImgV","showopt","setshowopt","comments","setComments","setUsers","commentDoc","userDoc","comment_types","Map","user_ids","DoneComments","content","current","focus","time","upd","date","split","Update_date","Date","Update_time","image_item","time_show","post_day","toLocaleDateString","toLocaleTimeString","distance","getTime","days","Math","floor","hours","minutes","push","parseInt","img","i","vid_item","vid","controls","Options","userid","pimg","user","ref","key","class","like_flag","likePost","like","unlike","cursor","likes","cmnt","comm","myTweets","fetchMyTweets","setTweets","tweet","author","likescount","createdAt","commentscount","videolinks","imagelinks","doneLike","fetchAllTweets","getUserData","getUsernameData","usersname","page","setPage","user_data","username_data","changeTweetPage","removeItem","goTomytweets","gotoProfile","window","innerWidth","documentElement","clientWidth","show","setShow","undefined","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","imessage","setImessage","wc","setWC","omessage","setOmessage","setUsername","chatid","setChatId","fire","database","on","snapshot","m","val","timestamp","tem","includes","sort","a","b","off","textAlign","my_id","another_id","alert","mix_id","set","chatbox","authorId","send","SnackbarContext","SnackbarContextProvider","options","position","backgroundColor","border","fontSize","borderRadius","closeStyle","optionsError","useSnackbar","closeSnackbar","openErrSnackbar","closeErrSnackbar","ProfilePic","image","LoginLoading","LoginData","createTweet","multi","setMulti","change","fontFamily","rows","cols","URL","createObjectURL","top","left","cut","files","multiple","pointerEvents","opacity","htmlFor","addPicture","addVideo","form_data","FormData","append","postTweet","fetchProfile","updateProfile","setProfile","bio","verticalAlign","following","followers","d","saveProfile","loadData","onScroll","scrollHeight","scrollTop","clientHeight","handleScroll","padding","Home","Newtwitter","App","CookiesProvider","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0b1b0e8a.chunk.js","sourcesContent":["export const FETCH_POSTS = 'FETCH_POSTS';\nexport const NEW_POST = 'NEW_POST';\nexport const INCREMENT = 'INCREMENT';\n\n/*Get all Tweets*/\nexport const ALL_TWEETS_LOAD = 'ALL_TWEETS_LOAD';\nexport const ALL_TWEETS_SUCCESS = 'ALL_TWEETS_SUCCESS';\nexport const ALL_TWEETS_FAIL = 'ALL_TWEETS_FAIL';\n\n/*Get my Tweets*/\nexport const MY_TWEETS_LOAD = 'MY_TWEETS_LOAD';\nexport const MY_TWEETS_SUCCESS = 'MY_TWEETS_SUCCESS';\nexport const MY_TWEETS_FAIL = 'MY_TWEETS_FAIL';\n\n/*Login*/\nexport const LOGIN_LOAD = 'LOGIN_LOAD';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\n/*Signup*/\nexport const SIGNUP_LOAD = 'SIGNUP_LOAD';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\n\n/*Switch tweets/my-tweets*/\nexport const CHANGE_TWEET_PAGE = 'CHANGE_TWEET_PAGE';\n/*profile*/\nexport const GO_TO_PROFILE = 'GO_TO_PROFILE';\n/*user data*/\nexport const USER_DATA = 'USER_DATA';\nexport const USERNAME_DATA = 'USERNAME_DATA';\n\n/*profile*/\nexport const GET_PROFILE_LOAD = 'GET_PROFILE_LOAD';\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\nexport const GET_PROFILE_FAIL = 'GET_PROFILE_FAIL';\n\nexport const UPD_PROFILE_LOAD = 'UPD_PROFILE_LOAD';\nexport const UPD_PROFILE_SUCCESS = 'UPD_PROFILE_SUCCESS';\nexport const UPD_PROFILE_FAIL = 'UPD_PROFILE_FAIL';\n\n\n/*Tweet*/\nexport const CREATE_TWEET_LOAD = 'CREATE_TWEET_LOAD';\nexport const CREATE_TWEET_SUCCESS = 'CREATE_TWEET_SUCCESS';\nexport const CREATE_TWEET_FAIL = 'CREATE_TWEET_FAIL';\n\nexport const UPD_TWEET_LOAD = 'UPD_TWEET_LOAD';\nexport const UPD_TWEET_SUCCESS = 'UPD_TWEET_SUCCESS';\nexport const UPD_TWEET_FAIL = 'UPD_TWEET_FAIL';\n\nexport const DEL_TWEET_LOAD = 'DEL_TWEET_LOAD';\nexport const DEL_TWEET_SUCCESS = 'DEL_TWEET_SUCCESS';\nexport const DEL_TWEET_FAIL = 'DEL_TWEET_FAIL';\n\n/*like*/\nexport const LIKE_TWEET = 'LIKE_TWEET';\n\n/*get like list*/\nexport const GET_LIKE_LIST_LOAD = 'GET_LIKE_LIST_LOAD';\nexport const GET_LIKE_LIST_SUCCESS = 'GET_LIKE_LIST_SUCCESS';\nexport const GET_LIKE_LIST_FAIL = 'GET_LIKE_LIST_FAIL';\n\n/*progressive load*/\nexport const LOAD_DATA = 'LOAD_DATA';\n\n/*snackbar*/\nexport const SNACK_BAR = 'SNACK_BAR';\n\n/*Comment*/\nexport const CREATE_COMMENT_LOAD = 'CREATE_COMMENT_LOAD';\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\nexport const CREATE_COMMENT_FAIL = 'CREATE_COMMENT_FAIL';\n\nexport const READ_COMMENT_LOAD = 'READ_COMMENT_LOAD';\nexport const READ_COMMENT_SUCCESS = 'READ_COMMENT_SUCCESS';\nexport const READ_COMMENT_FAIL = 'READ_COMMENT_FAIL';\n\nexport const UPD_COMMENT_LOAD = 'UPD_COMMENT_LOAD';\nexport const UPD_COMMENT_SUCCESS = 'UPD_COMMENT_SUCCESS';\nexport const UPD_COMMENT_FAIL = 'UPD_COMMENT_FAIL';\n\nexport const DEL_COMMENT_LOAD = 'DEL_COMMENT_LOAD';\nexport const DEL_COMMENT_SUCCESS = 'DEL_COMMENT_SUCCESS';\nexport const DEL_COMMENT_FAIL = 'DEL_TWEET_FAIL';","import {FETCH_POSTS,NEW_POST} from '../actions/types';\n\nconst initialState = {\n    items : [],\n    item : {}\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case FETCH_POSTS:\n            console.log('reducer..');\n            return{\n                ...state,\n                items : action.payload\n            }\n        default : \n        return state;\n    }\n}","import {INCREMENT} from '../actions/types';\n\nconst initialState = {\n    count : 1\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case INCREMENT:\n                console.log('reducer..');\n                return{\n                    ...state,\n                    count : action.payload\n                }\n        default : \n        return state;\n    }\n}","import {ALL_TWEETS_LOAD,ALL_TWEETS_SUCCESS,ALL_TWEETS_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    tweets : [],\n    users : [],\n    data : null, \n}\n\nexport default function(state = initialState,action){\n\n    switch(action.type){\n        case ALL_TWEETS_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case ALL_TWEETS_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    tweets : [...initialState.tweets,...action.tweets],\n                    users : [...initialState.users,...action.users],\n                }\n        case ALL_TWEETS_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        default : \n        return state;\n    }\n}","import {MY_TWEETS_LOAD,MY_TWEETS_SUCCESS,MY_TWEETS_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case MY_TWEETS_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case MY_TWEETS_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case MY_TWEETS_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        default : \n        return state;\n    }\n}","import {LOGIN_LOAD,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n    done : 0,\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case LOGIN_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case LOGIN_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case LOGIN_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case LOGOUT:\n            return{\n                ...state,\n                isLoading : false,\n                data : action.payload,\n                done : -1,\n            }\n        default : \n        return state;\n    }\n}","import {SIGNUP_LOAD,SIGNUP_SUCCESS,SIGNUP_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n    done : 0,\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case SIGNUP_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case SIGNUP_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case SIGNUP_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        default : \n        return state;\n    }\n}","import {CHANGE_TWEET_PAGE,GO_TO_PROFILE,USER_DATA,USERNAME_DATA,LOAD_DATA,SNACK_BAR} from '../actions/types';\n\nconst initialState = {\n    flag : true,\n    profile : false,\n    userData : {},\n    load : false,\n    open : {},\n    usernameData : {}\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case CHANGE_TWEET_PAGE:\n                return{\n                    ...state,\n                   flag : action.payload\n                }\n        case GO_TO_PROFILE:\n            return{\n                ...state,\n                profile : action.payload\n            }\n        case USER_DATA:\n            return{\n                ...state,\n                userData : action.payload \n            }\n        case USERNAME_DATA:\n                return{\n                    ...state,\n                    usernameData : action.payload \n                }\n        case LOAD_DATA:\n            return{\n                    ...state,\n                    load : action.payload \n            }\n        case SNACK_BAR:\n            return{\n                    ...state,\n                    open : action.payload \n            }\n        default : \n        return state;\n    }\n}","import {GET_PROFILE_LOAD,GET_PROFILE_SUCCESS,GET_PROFILE_FAIL,UPD_PROFILE_LOAD,UPD_PROFILE_SUCCESS,UPD_PROFILE_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case GET_PROFILE_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case GET_PROFILE_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case GET_PROFILE_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case UPD_PROFILE_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                    }\n        case UPD_PROFILE_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        case UPD_PROFILE_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        default : \n        return state;\n    }\n}","import {CREATE_TWEET_LOAD,CREATE_TWEET_SUCCESS,CREATE_TWEET_FAIL,UPD_TWEET_LOAD,UPD_TWEET_SUCCESS,UPD_TWEET_FAIL,DEL_TWEET_LOAD,DEL_TWEET_SUCCESS,DEL_TWEET_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null, \n    done: -1, \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case CREATE_TWEET_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case CREATE_TWEET_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case CREATE_TWEET_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case UPD_TWEET_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                        done:action.done,\n                    }\n        case UPD_TWEET_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        case UPD_TWEET_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        case DEL_TWEET_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                    }\n        case DEL_TWEET_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        case DEL_TWEET_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        default : \n        return state;\n    }\n}","import {GET_LIKE_LIST_LOAD,GET_LIKE_LIST_SUCCESS,GET_LIKE_LIST_FAIL,LIKE_TWEET} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n    flag: null,\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case GET_LIKE_LIST_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case GET_LIKE_LIST_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case GET_LIKE_LIST_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case LIKE_TWEET:\n                return{\n                    ...state,\n                    isLoading : false,\n                    flag:action.payload,\n                }\n        default : \n        return state;\n    }\n}","import {CREATE_COMMENT_LOAD,CREATE_COMMENT_SUCCESS,CREATE_COMMENT_FAIL,READ_COMMENT_LOAD,READ_COMMENT_SUCCESS,READ_COMMENT_FAIL,UPD_COMMENT_LOAD,UPD_COMMENT_SUCCESS,UPD_COMMENT_FAIL,DEL_COMMENT_LOAD,DEL_COMMENT_SUCCESS,DEL_COMMENT_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null, \n    done: -1, \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case CREATE_COMMENT_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case CREATE_COMMENT_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case CREATE_COMMENT_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case READ_COMMENT_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case READ_COMMENT_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case READ_COMMENT_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case UPD_COMMENT_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                        done:action.done,\n                    }\n        case UPD_COMMENT_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        case UPD_COMMENT_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        case DEL_COMMENT_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                    }\n        case DEL_COMMENT_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        case DEL_COMMENT_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        default : \n        return state;\n    }\n}","import {combineReducers} from 'redux';\nimport postReducer from './postReducer';\nimport incrementReducer from './incrementReducer';\nimport allTweetsReducer from './allTweetsListReducer';\nimport myTweetsReducer from './myTweetsListReducer';\nimport loginReducer from './loginReducer';\nimport signupReducer from './signupReducer';\nimport miscActionReducer from './miscActionReducer';\nimport profileReducer from './profileReducer'; \nimport tweetReducer from './tweetReducer';\nimport likeReducer from './likeReducer';\nimport commentReducer from './commentReducer';\n\nexport default combineReducers({\n   posts: postReducer, \n   counter : incrementReducer,\n   allTweetsReducer,\n   loginReducer,\n   signupReducer,\n   myTweetsReducer,\n   miscActionReducer,\n   profileReducer,\n   tweetReducer,\n   likeReducer,\n   commentReducer,\n});","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer,initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","//export const BASE = 'http://ec2-65-0-45-103.ap-south-1.compute.amazonaws.com:5000';\nexport const BASE = 'https://www.twitterbackend.tk';","import {CHANGE_TWEET_PAGE,GO_TO_PROFILE,USER_DATA,USERNAME_DATA,LOAD_DATA,SNACK_BAR} from './types';\nexport const  changeTweetPage = (flag) => dispatch => {\n     dispatch({\n            type:CHANGE_TWEET_PAGE,\n            payload : !flag,\n        });\n}\n\nexport const  goToProfile = (profile) => dispatch => {\n    dispatch({\n           type:GO_TO_PROFILE,\n           payload : !profile,\n       });\n}\n\nexport const  getUserData = (data) => dispatch => {\n    dispatch({\n           type:USER_DATA,\n           payload : data,\n       });\n}\n\nexport const  getUsernameData = (data) => dispatch => {\n    dispatch({\n           type:USERNAME_DATA,\n           payload : data,\n       });\n}\n\nexport const  loadData = (load) => dispatch => {\n    dispatch({\n           type:LOAD_DATA,\n           payload : !load,\n       });\n}\n\nexport const  openSnackbar = (data) => dispatch => {\n    dispatch({\n           type:SNACK_BAR,\n           payload : data,\n       });\n}","import React from 'react';\n\nconst Loader = () =>{\n    return (\n        <div id=\"loader\"></div>\n    );\n}\n\nexport default Loader;","import React,{useState,useEffect} from 'react';\nimport Modal from 'react-modal';\nimport {signup} from '../actions/signupAction';\nimport {openSnackbar} from '../actions/miscAction';\nimport '../App.css';\nimport { connect } from 'react-redux';\nimport logo from '../assets/twitter.svg'; \nimport Loader from '../components/loader';\n\nfunction Signup(props) {\n\n  const [signupIsOpen,setSignupOpen] = useState(false);\n  const [signupdata,setSignupdata] = useState(null);\n\n  function openSignup (){\n    setSignupOpen(true);\n  }\n\n  function closeSignup(){\n    setSignupOpen(false);\n }\n\n  useEffect(() => {\n    if(signupdata != null)\n    {\n      props.signup(signupdata);\n      if(props.success === 1)\n      {\n        console.log('success');\n      }\n      else\n      {\n        console.log('Profile creation unsuccessful');  \n      }\n    }\n  },[signupdata])\n\n  function handleSignupSubmit(e){\n    e.preventDefault();\n    let values = document.getElementById('signup');\n    let inputs = values.querySelectorAll(\"input\");\n    let userinfo = {};\n    for(let data of inputs)\n    {\n      userinfo[data.name] = data.value;\n    }\n    console.log(userinfo);\n    var regName = /^[a-zA-Z ]*$/;\n    var regNum = /[6789][0-9]{9}/;\n    var regEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(userinfo.username.length === 0)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Username cannot be empty',\n      })\n      return false;\n    }\n    if(userinfo.name.length === 0)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Name cannot be empty',\n      })\n      return false;\n    }\n    if(userinfo.email.length === 0)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Email cannot be empty',\n      })\n      return false;\n    }\n    if(userinfo.password.length < 8 || userinfo.password.length > 32)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Password must have length between 8 and 32',\n      })\n      return false;\n    }\n\n    if(regName.test(userinfo.name) === false)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Invalid Name',\n      })\n      return false;\n    }\n    if(regEmail.test(userinfo.email) === false)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Invalid Email',\n      })\n      return false;\n    }\n    setSignupdata(userinfo);\n    closeSignup();\n  }\n\n  return (\n      <div className=\"App\">\n      <button onClick={openSignup} className=\"signup\">\n        Sign Up\n      </button>\n      <Modal\n          isOpen={signupIsOpen}\n          onRequestClose={closeSignup}\n          className=\"modalStyle\"\n          ariaHideApp={false}\n        >\n          {props.Loading ? <Loader/> : \n          <div className=\"basediv\">\n           <img src={logo} alt=\"logo\" style={{height:'30px', width:'30px', display:'block', margin:'auto',marginTop:'20px'}}/>\n          <form id=\"signup\" className=\"formStyle\" >\n            <label>Name</label>\n            <input name=\"name\" type=\"text\" />\n            <label>Username</label>\n            <input name=\"username\" type=\"text\" />\n            <label>Email</label>\n            <input name=\"email\" type=\"email\" />\n            <label>Password</label>\n            <input name=\"password\" type=\"password\" />\n            <button onClick={e => handleSignupSubmit(e)} className=\"smallbtn\">\n              submit\n            </button>\n          </form>\n          </div> }\n        </Modal>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => ({\n  data : state.signupReducer.data,\n  Loading : state.signupReducer.isLoading,\n  success : state.signupReducer.done,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: (payload) => dispatch(signup(payload)),\n    openSnackbar : (payload) => dispatch(openSnackbar(payload))\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup);","import {SIGNUP_LOAD,SIGNUP_SUCCESS,SIGNUP_FAIL,SNACK_BAR} from './types';\nimport {BASE} from './baseurl';\nexport const  signup = (payload) => dispatch => {\n    const request = {\n        method: 'POST',\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         },\n        body: JSON.stringify(payload)\n      };\n    \n       dispatch({\n        type:SIGNUP_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/auth/register/`,request)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data); \n      if(data.status === 200)\n      {\n        dispatch({\n            type:SIGNUP_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        }) \n        dispatch({\n          type:SNACK_BAR,\n          payload : {\n            type:1,\n            msg:\"registered!\",\n          }\n        })        \n      }\n      else\n      {\n          dispatch({\n            type:SIGNUP_FAIL,\n            isLoading:false,\n            payload : data,\n            done : -1,\n          })\n          dispatch({\n            type:SNACK_BAR,\n            payload : {\n              type:0,\n              msg:data.message,\n            }\n          }) \n      }\n    })   \n    .catch(err => {\n          console.log(err);\n          dispatch({\n            type:SIGNUP_FAIL,\n            isLoading:false,\n            payload : err,\n            done : 0,\n          })\n          dispatch({\n            type:SNACK_BAR,\n            payload : {\n              type:0,\n              msg:err.message,\n            }\n          }) \n    });\n}\n","import React,{useState,useEffect} from 'react';\nimport Modal from 'react-modal';\nimport {Link} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport {login,gotInfo} from '../actions/loginAction';\nimport {openSnackbar} from '../actions/miscAction';\n\nimport '../App.css';\nimport logo from '../assets/twitter.svg'; \nimport Loader from '../components/loader';\n\n\nfunction Login(props) {\n  const [loginIsOpen,setLoginOpen] = useState(false);\n  const [logindata,setLogindata] = useState(null);\n\n  function openLogin() {\n    setLoginOpen(true);\n  }\n\n  function closeLogin(){\n    setLoginOpen(false);\n  }\n\n  useEffect(() => {\n    if(logindata != null)\n    {\n      props.login(logindata);\n      closeLogin();\n    }\n  },[logindata])\n\n  useEffect(() => {\n    if(props.data)\n    {\n      if(props.success === -1)\n      {\n        console.log('something went wrong...');\n      }\n      else\n      {\n        console.log('storing info...')\n      }\n    }\n  },[props.Loading]);\n\n  function handleLoginSubmit(e){\n    e.preventDefault();\n    let values = document.getElementById('login');\n    let inputs = values.querySelectorAll(\"input\");\n    let userinfo = {};\n    for(let data of inputs)\n    {\n      userinfo[data.name] = data.value;\n    }\n    console.log(userinfo);\n\n    if(userinfo.username.length === 0)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Username cannot be empty',\n      })\n      return false;\n    }\n\n    setLogindata(userinfo);\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={openLogin} className=\"login\">\n        Login\n      </button>\n        <Modal\n          isOpen={loginIsOpen}\n          onRequestClose={closeLogin}\n          className=\"modalStyle\"\n          ariaHideApp={false}\n        >\n          {props.Loading ? <Loader/> :\n          <div className=\"basediv\">\n           <img src={logo} alt=\"logo\" style={{height:'30px', width:'30px', display:'block', margin:'auto',marginTop:'20px'}}/>\n          <form id=\"login\" className=\"formStyle\" method=\"POST\">\n            <label>Username</label>\n            <input name=\"username\" type=\"text\" />\n            <label>Password</label>\n            <input name=\"password\" type=\"password\" />\n            <button onClick={e => handleLoginSubmit(e)} className=\"smallbtn\">\n              login\n            </button>\n          </form>\n          </div>\n          }\n        </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  data : state.loginReducer.data,\n  Loading : state.loginReducer.isLoading,  \n  success : state.loginReducer.done,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (payload) => dispatch(login(payload)),\n    openSnackbar : (payload) => dispatch(openSnackbar(payload))\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import {LOGIN_LOAD,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT, SNACK_BAR} from './types';\nimport {BASE} from './baseurl';\nexport const  login = (payload) => dispatch => {\n    const request = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      };\n    \n       dispatch({\n        type:LOGIN_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/auth/login`,request)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      if(data.token)\n      { \n        localStorage.setItem('twitter-token',data.token);\n        localStorage.setItem('userid',data.user_info._id);\n        localStorage.setItem('name',data.user_info.name);\n        localStorage.setItem('username',data.user_info.username);\n        localStorage.setItem('email',data.user_info.email);\n        localStorage.setItem('userPic',data.user_info.profile.profilePic);\n        dispatch({\n            type:LOGIN_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        }) \n        dispatch({\n          type:SNACK_BAR,\n          payload : {\n            type:1,\n            msg:\"logged in!\"\n          }\n        }) \n      } \n      else\n      {\n        dispatch({\n          type:LOGIN_FAIL,\n          isLoading:false,\n          payload : data,\n          done : -1,\n        })\n        dispatch({\n          type:SNACK_BAR,\n          payload : {\n            type:0,\n            msg:data.message,\n          }\n        }) \n      }    \n    })   \n    .catch(err => {\n          console.log(err);\n          dispatch({\n            type:LOGIN_FAIL,\n            isLoading:false,\n            payload : err,\n            done : -1,\n          })\n          dispatch({\n            type:SNACK_BAR,\n            payload : {\n              type:0,\n              msg:err.message,\n            }\n          }) \n    });\n}\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type:LOGOUT,\n    isLoading:false,\n    payload:null,\n});\n}\n","import React,{useState,useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport {openSnackbar} from '../actions/miscAction';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '0%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction CustomizedSnackbars(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    console.log(props.openData);\n    if(props.openData.msg)\n    {\n      setOpen(true);\n    }\n  }, [props.openData])\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={2500} onClose={handleClose}>\n        {\n          props.openData.type === 0 ?\n          <Alert onClose={handleClose} severity=\"error\">\n          {props.openData.msg}\n          </Alert>\n          :\n          props.openData.type === 1 ?\n          <Alert onClose={handleClose} severity=\"success\">\n          {props.openData.msg}\n          </Alert>\n          :\n          props.openData.type === 2 ?\n          <Alert onClose={handleClose} severity=\"warning\">\n          {props.openData.msg}\n          </Alert>\n          :\n          props.openData.type === 3 ?\n          <Alert onClose={handleClose} severity=\"info\">\n          {props.openData.msg}\n          </Alert>\n          :\n          <Alert onClose={handleClose} severity=\"info\">\n          {'Loading...'}\n          </Alert>\n        }\n      </Snackbar>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  success : state.loginReducer.done, \n  openData : state.miscActionReducer.open,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      openSnackbar: (payload) => dispatch(openSnackbar(payload)),\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CustomizedSnackbars);","import React,{useState,useEffect} from 'react';\nimport logo from '../assets/twitter.svg'; \nimport { connect } from 'react-redux';\nimport '../App.css';\nimport Signup from './signup';\nimport Login from './login';\nimport CustomizedSnackbars from '../components/snackbar';\nimport { openSnackbar } from '../actions/miscAction';\n\nfunction Header(props){\n\n    console.log(localStorage.getItem('twitter-token'))\n    return ( \n            <div className=\"header\">\n            <img src={logo} alt=\"logo\" style={{height:'48px', width:'48px'}}/>\n            {\n                !localStorage.getItem('username')  ? <div className=\"headerContent\"></div>:<div className=\"headerContent\">Hey Welcome {localStorage.getItem('username')}! \n                </div>\n            }\n            {\n                !localStorage.getItem('username')  ?  <Signup/> : ''\n            }\n            {\n                !localStorage.getItem('username')  ? <Login/> : ''\n            }\n            <CustomizedSnackbars/>\n            </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.loginReducer.data,\n    logout : state.loginReducer.done, \n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        \n    };\n  };\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(Header);\n","import React, { createContext, useState, useEffect } from 'react';\n\nexport const UtilsContext = createContext();\n\nconst UtilsContextProvider = props => {\n  \n    const [chat,setChat] = useState(false);\n    const [mytweet,setMytweet] = useState(false);\n    const [editTweet,setEditTweet] = useState(null);\n    const [editTweetContent,setEditTweetContent] = useState(null);\n    const [editTweetLikes,setEditTweetLikes] = useState(null);\n    const [loader,setLoader] = useState(false);\n    const [loader2,setLoader2] = useState(false);\n\n  return (\n    <UtilsContext.Provider\n      value={{\n          chat,\n          setChat,\n          mytweet,\n          setMytweet,\n          editTweet,\n          setEditTweet,\n          editTweetContent,\n          setEditTweetContent,\n          editTweetLikes,\n          setEditTweetLikes,\n          loader,\n          setLoader,\n          loader2,\n          setLoader2\n      }}\n    >\n        {props.children}                                                                                                                                                                                                        \n    </UtilsContext.Provider>\n  )\n}\n\nexport default UtilsContextProvider;","import {CREATE_COMMENT_LOAD,CREATE_COMMENT_SUCCESS,CREATE_COMMENT_FAIL,READ_COMMENT_LOAD,READ_COMMENT_SUCCESS,READ_COMMENT_FAIL,UPD_COMMENT_LOAD,UPD_COMMENT_SUCCESS,UPD_COMMENT_FAIL,DEL_COMMENT_LOAD,DEL_COMMENT_SUCCESS,DEL_COMMENT_FAIL,SNACK_BAR} from './types';\nimport {BASE} from './baseurl';\nexport const  createComment= (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json',\n        'Authorization' : 'token '+localStorage.getItem('twitter-token'),\n      },\n        body: payload.data,\n    };\n    \n    dispatch({\n        type:CREATE_COMMENT_LOAD,\n        isLoading:true,\n    });\n\n    let url = `${BASE}/tweet/addcomment?_id=${payload._id}&parentid=${payload.parentid}&threadlevel=${payload.threadlevel}`;\n\n    if(payload.threadlevel === 0)\n    url = `${BASE}/tweet/addcomment?_id=${payload._id}&threadlevel=${payload.threadlevel}`;\n\n    fetch(url,request)\n    .then(response => response.json()).then(data => {\n      console.log(data); \n        dispatch({\n            type:CREATE_COMMENT_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 2,\n        })\n        dispatch({\n          type:SNACK_BAR,\n          payload : {\n            type:1,\n            msg:\"Posted!\"\n          }\n        })     \n    })   \n    .catch(err => {\n        console.log(err);\n        dispatch({\n            type:SNACK_BAR,\n            payload : {\n              type:0,\n              msg:\"Post unsuccessful!\"\n            }\n          }) \n          dispatch({\n            type:CREATE_COMMENT_FAIL,\n            isLoading:false,\n            payload : err,\n            done : 0,\n          })\n    })\n}\n\n\nexport const  readComment = (id) => dispatch => {\n    \n    let request = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json',\n      },\n    };\n\n    dispatch({\n        type:READ_COMMENT_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/getcomment?_id=${id}`,request)\n    .then(response => {\n      response.json().then(data => {\n        console.log(data);\n      if(response.status === 200)\n      {\n          dispatch({\n              type:READ_COMMENT_SUCCESS,\n              isLoading:false,\n              payload : data,\n              done : 1,\n          })\n      }\n      else\n      {\n          dispatch({\n            type:READ_COMMENT_FAIL,\n            isLoading:false,\n            payload : data,\n            done : 0,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n        console.log(error);\n          dispatch({\n            type:READ_COMMENT_FAIL,\n            isLoading:false,\n            payload : error,\n            done : 0,\n          })\n    });\n}\n\n\nexport const  updateComment = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'PUT',\n        headers : {'Authorization':'Token '+payload.token,'Content-Type': 'application/json'},\n        body: payload.data,\n    };\n    \n    dispatch({\n        type:UPD_COMMENT_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/editcomment?_id=${payload._id}&commentid=${payload.commentid}`,request)\n    .then(response => {\n      console.log(response);\n      const responseJson = response.json().then(data => {\n      console.log(data); \n        dispatch({\n            type:UPD_COMMENT_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })        \n    })   \n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          dispatch({\n            type:UPD_COMMENT_FAIL,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n        })\n    });\n}\n\nexport const  deleteComment = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'DELETE',\n        headers : {'Authorization':'Token '+payload.token,},\n    };\n    \n    dispatch({\n        type:DEL_COMMENT_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/deletecomment?_id=${payload._id}&commentid=${payload.commentid}&threadlevel=${payload.threadlevel}&parentid=${payload.parentid}`,request)\n    .then(response => {\n      console.log(response);\n        dispatch({\n            type:DEL_COMMENT_SUCCESS,\n            isLoading:false,\n            payload : response,\n            done : 1,\n        })        \n    })\n    .catch(error => {\n      console.log(error);\n          dispatch({\n            type:DEL_COMMENT_FAIL,\n            isLoading:false,\n            payload : error,\n            done : 0,\n          })\n    });\n}\n\n\n","import React,{useEffect,useState} from 'react';\nimport { connect } from 'react-redux';\nimport {createComment,updateComment,deleteComment} from '../actions/commentAction';\n\nconst Replies = (props) =>{\n\n    const [reply,setReply] = useState(false);\n    const [edit,setEdit] = useState(null);\n\n    useEffect(() => {\n        console.log(props.commentId);\n    });\n\n    const postReply = () => {\n\n        let putdata = {\n            data : JSON.stringify({\n                text : reply,\n            }),\n            token : localStorage.getItem('twitter-token'),\n            threadlevel : 1,\n            _id : props.tweetId,\n            parentid : props.commentId,\n        }\n        props.createComment(putdata);\n    }\n\n    const editComment = (id) => {\n        let putdata = {\n            data : JSON.stringify({\n                text : reply,\n            }),\n            token : localStorage.getItem('twitter-token'),\n            _id : props.tweetId,\n            commentid : id,\n        }\n        props.updateComment(putdata);\n        setEdit(null);\n    }\n\n    const delComment = (id) => {\n        let putdata = {\n            data : JSON.stringify({\n                text : reply,\n            }),\n            token : localStorage.getItem('twitter-token'),\n            _id : props.tweetId,\n            commentid : id,\n            threadlevel : 1,\n            parentid: props.commentId\n        }\n        props.deleteComment(putdata);\n    }\n\n    return (\n    <div>\n    <div style={{color:'black',textDecoration:'underline'}} onClick={() => setReply(!reply)}>reply</div>\n    {reply && <span><input onChange={(e) => setReply(e.target.value)} className=\"replybox\" placeholder=\"reply...\" />\n    <span onClick={() => postReply()}className=\"commentbtn\">reply</span></span>\n    }\n        {reply && props.reply&& props.reply.map(\n        (item2) => \n        <div>\n        {edit === item2._id? <input onChange={(e) => setReply(e.target.value)} style={{marginLeft: '40px',marginBottom: '14px'}} className=\"commentbox\" placeholder=\"Say something...\" /> :\n        <div className=\"reply\">{item2.text}</div>}\n        {\n                            localStorage.getItem('userid') === item2.commentorid? \n                            <span className=\"commentLabel\"><div onClick={() => delComment(item2._id)} className=\"deletebtn\">delete</div> <div onClick={edit === item2._id ? () => editComment(item2._id) : () => {setEdit(item2._id)}} className=\"deletebtn\">{edit === item2._id ? 'save' : 'edit'}</div></span> \n                            : \n                            <div className=\"deletebtn\">report</div>\n        }\n        </div>\n        )}\n     </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createComment: (payload) => dispatch(createComment(payload)),\n        updateComment: (payload) => dispatch(updateComment(payload)),\n        deleteComment: (payload) => dispatch(deleteComment(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Replies);\n\n\n\n\n","import React,{useEffect,useState} from 'react';\nimport Replies from './reply';\nimport {createComment,updateComment,deleteComment} from '../actions/commentAction';\nimport { connect } from 'react-redux';\n\n\nconst Comments = (props) =>{\n\n    const [comment,setComment] = useState(null);\n    const [edit,setEdit] = useState(null);\n\n    useEffect(() => {\n        console.log(props.tweetId);\n        console.log(props.Comments);\n        console.log(props.Users);\n    });\n\n    const postComment = () => {\n\n        let putdata = {\n            data : JSON.stringify({\n                text : comment,\n            }),\n            token : localStorage.getItem('twitter-token'),\n            threadlevel : 0,\n            _id : props.tweetId,\n            parentid : props.tweetId,\n        }\n        props.createComment(putdata);\n    }\n\n    const editComment = (id) => {\n        let putdata = {\n            data : JSON.stringify({\n                text : comment,\n            }),\n            token : localStorage.getItem('twitter-token'),\n            _id : props.tweetId,\n            commentid : id,\n        }\n        props.updateComment(putdata);\n        setEdit(null);\n    }\n\n    const delComment = (id) => {\n        let putdata = {\n            data : JSON.stringify({\n                text : comment,\n            }),\n            token : localStorage.getItem('twitter-token'),\n            _id : props.tweetId,\n            commentid : id,\n            threadlevel : 0,\n        }\n        props.deleteComment(putdata);\n    }\n\n    return (\n        <div>\n           <input onChange={(e) => setComment(e.target.value)} className=\"commentbox\" placeholder=\"Say something...\" />\n           <span onClick={() => postComment()}className=\"commentbtn\">comment</span>\n            <div>\n                {\n                    props.Comments && props.Comments['main'] && props.Comments['main'].map( \n                    (item) => \n                    <div>\n                        {edit === item._id? <input onChange={(e) => setComment(e.target.value)} className=\"commentbox\" placeholder=\"Say something...\" /> :\n                        <div className=\"comment\">{item.text}</div>}\n                        <div>\n                        {\n                            localStorage.getItem('userid') === item.commentorid? \n                            <span className=\"commentLabel\"><div onClick={() => delComment(item._id)} className=\"deletebtn\">delete</div> <div onClick={edit === item._id ? () => editComment(item._id) : () => {setEdit(item._id)}} className=\"deletebtn\">{edit === item._id ? 'save' : 'edit'}</div></span> \n                            : \n                            <div className=\"deletebtn\">report</div>\n                        }\n                        <Replies reply={null || props.Comments[item._id]} commentId={item._id} tweetId={props.tweetId}/>\n                        </div>\n                    </div>\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    LoadingComments : state.commentReducer.isLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createComment: (payload) => dispatch(createComment(payload)),\n        updateComment: (payload) => dispatch(updateComment(payload)),\n        deleteComment: (payload) => dispatch(deleteComment(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Comments);\n\n\n\n\n","import React,{useEffect,useState,useRef} from 'react';\n\nimport like from '../assets/heart.svg'; \nimport profile from '../assets/person.svg'; \nimport unlike from '../assets/unlikeheart.svg'\nimport cmnt from '../assets/comment.svg'\n\nimport { connect } from 'react-redux';\nimport {deleteTweet,updateTweet} from '../actions/tweetAction';\nimport {likeTweet,fetchLikeList} from '../actions/likeAction';\n\nimport '../App.css';\nimport { readComment } from '../actions/commentAction';\nimport Comments from './comment';\n\nconst Tweet = (props) => {\n    \n    \n\n    const inputRef = useRef(null);\n\n    const [deleteTweetid,setDeleteTweetid] = useState(null);\n\n    const [data,setData] = useState(null);\n    const [editTweetid,setEditTweetid] = useState(null);\n    const [edit,setEdit] = useState(false);\n\n    const [showComment,setShowComment] = useState(false);\n\n    const [imgV,setImgV] = useState(0);\n\n    const [showopt,setshowopt] = useState(false);\n\n    const [comments,setComments] = useState(null);\n\n    const [users,setUsers] = useState(null);\n\n\n    function deletePost(id){\n        setDeleteTweetid(id);\n    }\n\n    function editPost(id)\n    {\n        setEditTweetid(id);\n    }\n\n    function likePost(id)\n    {\n        let putdata = {\n            id:id,\n            body : JSON.stringify({\n                flag: props.like_flag ? -1 : 1,\n                _id : id,\n            }),\n        }\n        props.likeTweet(putdata);\n    }\n\n    const getComment = (id) => {\n        setShowComment(true);\n        //console.log(id);\n        props.readComment(id);\n        //props.commentTweet(id); ... need to build it....\n    }\n\n    useEffect(()=> {\n        //console.log(props.Comments);\n        if(props.Comments && props.Comments.commentDoc && props.Comments.userDoc)\n        {\n            let comment_types = new Map();\n            let user_ids = new Map();\n            for(let item of props.Comments.commentDoc)\n            {\n                if(item._id === null)\n                {\n                    comment_types['main']  = item.comments;\n                } \n                else\n                {\n                    comment_types[item._id ]  = item.comments;\n                }\n            }\n            setComments(comment_types);\n            for(let item of props.Comments.userDoc)\n            {\n                user_ids[item._id ]  = item;\n            }\n            setUsers(user_ids);\n            //console.log(comment_types);\n            //console.log(user_ids);\n        }\n    },[props.Comments,props.DoneComments]);\n\n    useEffect(()=>{\n        setData({\n            message : props.content,\n        })\n    },[]);\n\n    const change = (key,value) => {\n        setData({\n            ...data,\n            [key] : value,\n        })\n    }\n\n    useEffect(()=>{\n        if(edit === true)\n        {\n            inputRef.current.focus();\n        }\n    },[edit]);\n    \n    useEffect(() => {\n        if(deleteTweetid !== null)\n        {\n            let data = {\n                token : localStorage.getItem('twitter-token'),\n                tweet_id:deleteTweetid,\n            }\n            props.deleteTweet(data);   \n            setDeleteTweetid(null);\n        }\n    },[deleteTweetid]);\n\n    useEffect(() => {\n\n    },[data]);\n\n    useEffect(() => {\n        if(editTweetid !== null)\n        {\n            let putdata = {\n                token : localStorage.getItem('twitter-token'),\n                tweet_id:editTweetid,\n                body : JSON.stringify(data),\n            }\n            props.updateTweet(putdata);   \n            setEditTweetid(null);\n            setEdit(false);\n        }\n    },[editTweetid]);\n\n    useEffect(() => {\n        if(props.Likelist === null && localStorage.getItem('username'))\n        {\n            let data = {\n                tweet_id:props.id,\n            }\n            props.fetchLikeList(data);\n        }\n    },[props.Likelist])\n\n    useEffect(() => {\n        //props.readComment(props.id);\n        console.log(props.update);\n        console.log('working...');\n    }, [props.update]);\n\n    let time = props.upd || '';   \n    let date = time.split('T');\n    const Update_date = new Date(date[0]);\n    let Update_time = new Date(time);\n\n    let image_item = [];\n\n    const time_show = [];\n\n    if(props.upd)\n    {\n        //console.log(Update_time.toLocaleTimeString());\n        //console.log(Update_date.toLocaleDateString('en-US'));\n        \n        let post_day = new Date(Update_date.toLocaleDateString('en-US')+' '+Update_time.toLocaleTimeString());\n        //console.log(post_day);\n\n        let today = new Date();\n\n        let distance = today.getTime() - post_day.getTime();\n\n        //console.log(distance);\n\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n        var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n        if(days > 0)\n        {\n            if(days > 365)\n            time_show.push(`About ${parseInt(days/365)} year ago`);\n            else if(days > 30)\n            time_show.push(`About ${parseInt(days/30)} month ago`);\n            else\n            time_show.push(`${days} days ago`);\n        }\n        else if(hours > 0)\n        {\n            time_show.push(`${hours}h ago`)\n        }\n        else if(minutes > 0)\n        {\n            time_show.push(`${minutes}m ago`)\n        }\n        else\n        {\n            time_show.push(`a few seconds ago`)\n        }\n        \n    }\n\n    if(props.img && props.img.length)\n    {\n        for(let i=0; i<props.img.length; i++)\n        {\n            image_item.push(\n                imgV === i ?\n                <img  src={props.img[i]} alt=\"image\" className=\"tweetPostImage\"/> \n                :\n                ''\n            );\n        }\n    }\n\n    let vid_item = [];\n\n    if(props.vid)\n    {\n        vid_item.push(<video className=\"videoDiv\"controls>\n        <source src={props.vid} />\n        </video>)\n    }\n\n    const Options = () => {\n        return (\n            <div>\n                <div className=\"dropdown\">\n                <button onClick={() => setshowopt(!showopt)} className=\"dropbtn\">...</button>\n                <div className=\"dropdown-content\">\n                {\n                    showopt === true ?\n                    <div>\n                    {\n                        localStorage.getItem('userid') === props.userid? \n                        <span><div onClick={() => deletePost(props.id)} className=\"deletebtn\">delete</div> <div onClick={edit === true ? () => editPost(props.id) : () => {setEdit(true)}} className=\"deletebtn\">{edit === true ? 'save' : 'edit'}</div></span> \n                        : \n                        <div className=\"deletebtn\">report</div>\n                    }\n                    </div>\n                    :\n                    ''\n                }\n                </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"tweet\">\n          <div className=\"aboveTweet\">\n            <div className=\"user\" ><img  src={props.pimg === null ? profile : props.pimg} alt=\"profile\" className=\"usertweetpic\" />{props.user}</div>\n            <div className=\"tweetTime\">{time_show}</div>\n            <Options/>\n            </div>\n            <div className=\"mainTweet\">\n            {\n                edit === true ?\n                <input ref={inputRef} onChange={(e) => change(\"message\",e.target.value)} className=\"mainTweet editTweetcontent\" value={data.message}/>\n                :\n                <div className=\"tweetContent\">{props.content}</div>\n            }\n            {\n                image_item.length > 1?\n                <span className=\"imgtag\">{imgV+1}/{image_item.length}</span>\n                :\n                ''\n            \n            }\n            {\n                image_item\n            }\n            {\n                image_item.length > 1 ?\n                <span className=\"slideImage\">\n                {\n                    imgV === 1 || imgV === 2 ?\n                    <a onClick={() => setImgV(imgV-1)} class=\"prev\" >&#10094;</a>\n                    :\n                    ''\n                }\n                {\n                    imgV === 0 || imgV === 1 && image_item.length > 2 ?\n                    <a onClick={() => setImgV(imgV+1)} class=\"next\" >&#10095;</a>\n                    :\n                    ''\n                }\n                </span>\n                :\n                ''\n            }\n            {\n                vid_item\n            }\n            </div>\n            <div className=\"likes\"><img  onClick={() => likePost(props.id)}  src={ props.like_flag === true ? like : unlike} alt=\"like\" style={{height:'30px', width:'30px', display:'inline', margin:'auto',cursor:'pointer'}}/>\n            {props.likes}\n            <img  onClick={() => getComment(props.id)}  src={cmnt} alt=\"like\" style={{height:'30px', width:'30px', display:'inline', margin:'auto',cursor:'pointer'}}/>\n            {props.comm}\n            </div>\n            {\n                showComment && \n                <div className=\"commentSection\">\n                <Comments tweetId={props.id} Users={users} Comments={null || comments}/>\n                </div>\n            }\n        </div>\n    );\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    Loading : state.tweetReducer.isLoading,\n    Likelist : state.likeReducer.data,\n    Comments : state.commentReducer.data,\n    update : state.commentReducer.done,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      deleteTweet: (payload) => dispatch(deleteTweet(payload)),\n      updateTweet: (payload) => dispatch(updateTweet(payload)),\n      likeTweet: (payload) => dispatch(likeTweet(payload)),\n      fetchLikeList: (payload) => dispatch(fetchLikeList(payload)),\n      readComment: (payload) => dispatch(readComment(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Tweet);","import {CREATE_TWEET_LOAD,CREATE_TWEET_SUCCESS,CREATE_TWEET_FAIL,UPD_TWEET_LOAD,UPD_TWEET_SUCCESS,UPD_TWEET_FAIL,DEL_TWEET_LOAD,DEL_TWEET_SUCCESS,DEL_TWEET_FAIL,SNACK_BAR} from './types';\nimport {BASE} from './baseurl';\nexport const  createTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'POST',\n        headers : {'Authorization':'Token '+payload.token},\n        body: payload.data,\n    };\n    \n    dispatch({\n        type:CREATE_TWEET_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet`,request)\n    .then(response => response.json()).then(data => {\n      console.log(data); \n      if(data.status === 200)\n      {\n        dispatch({\n            type:CREATE_TWEET_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })\n        dispatch({\n          type:SNACK_BAR,\n          payload : {\n            type:1,\n            msg:\"Posted!\"\n          }\n        })         \n      }\n      else\n      {\n          dispatch({\n            type:CREATE_TWEET_FAIL,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n          dispatch({\n            type:SNACK_BAR,\n            payload : {\n              type:0,\n              msg:\"Post unsuccessful!\"\n            }\n          }) \n      }\n    })   \n    .catch(err => {\n          dispatch({\n            type:CREATE_TWEET_FAIL,\n            isLoading:false,\n            payload : err,\n            done : 0,\n          })\n    })\n}\n\nexport const  updateTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'PUT',\n        headers : {'Authorization':'Token '+payload.token,'Content-Type': 'application/json'},\n        body: payload.body,\n    };\n    \n    dispatch({\n        type:UPD_TWEET_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet?tweet_id=${payload.tweet_id}`,request)\n    .then(response => {\n      console.log(response);\n      const responseJson = response.json().then(data => {\n      console.log(data); \n      if(response.status === 200)\n      {\n        dispatch({\n            type:UPD_TWEET_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })        \n      }\n      else\n      {\n          dispatch({\n            type:UPD_TWEET_FAIL,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n      }\n    })   \n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          dispatch({\n            type:UPD_TWEET_FAIL,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n        })\n    });\n}\n\nexport const  deleteTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'DELETE',\n        headers : {'Authorization':'Token '+payload.token,},\n    };\n    \n    dispatch({\n        type:DEL_TWEET_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet?tweet_id=${payload.tweet_id}`,request)\n    .then(response => {\n      console.log(response);\n      if(response.status === 204)\n      {\n        dispatch({\n            type:DEL_TWEET_SUCCESS,\n            isLoading:false,\n            payload : response,\n            done : 1,\n        })        \n      }\n      else\n      {\n          dispatch({\n            type:DEL_TWEET_FAIL,\n            isLoading:false,\n            payload : response,\n            done : 0,\n          })\n      }\n    })\n    .catch(error => {\n      console.log(error);\n          dispatch({\n            type:DEL_TWEET_FAIL,\n            isLoading:false,\n            payload : error,\n            done : 0,\n          })\n    });\n}\n\n\n","import {GET_LIKE_LIST_LOAD,GET_LIKE_LIST_SUCCESS,GET_LIKE_LIST_FAIL,LIKE_TWEET} from './types';\nimport {BASE} from './baseurl';\n\nexport const  fetchLikeList = (payload) => dispatch => {\n\n  let request = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json',\n  },\n};\n\n    dispatch({\n        type:GET_LIKE_LIST_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/tweet-like?_id=${payload.tweet_id}`,request)\n    .then(response => {\n      response.json().then(data => {\n          //console.log(payload.tweet_id);\n          //console.log(data);\n      if(response.status === 200)\n      {\n          dispatch({\n              type:GET_LIKE_LIST_SUCCESS,\n              isLoading:false,\n              payload : data,\n          })\n      }\n      else\n      {\n          dispatch({\n            type:GET_LIKE_LIST_FAIL,\n            isLoading:false,\n            payload : data,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(error=> {\n          dispatch({\n            type:GET_LIKE_LIST_FAIL,\n            isLoading:false,\n            payload : error,\n          })\n        })\n    });\n}\n\nexport const  likeTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json',\n        'Authorization' : 'token '+localStorage.getItem('twitter-token'),\n      },\n        body: payload.body,\n    };\n    \n    dispatch({\n        type:LIKE_TWEET,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/tweet-like`,request)\n    .then(response => {\n      console.log(response);\n      const responseJson = response.json().then(data => {\n      console.log(data); \n      if(response.status === 200)\n      {\n        dispatch({\n            type:LIKE_TWEET,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })        \n      }\n      else\n      {\n          dispatch({\n            type:LIKE_TWEET,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n      }\n    })   \n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          dispatch({\n            type:LIKE_TWEET,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n        })\n    });\n}\n","import React,{useEffect,useState} from 'react';\nimport {fetchMyTweets} from '../actions/myTweetsListAction';\nimport { connect } from 'react-redux'\n\nimport '../App.css';\n\nimport Tweet from '../components/tweet';\nimport Loader from '../components/loader';\n\n\nconst MyTweetList = (props) => {\n   \n    const [tweets,setTweets] = useState(null);\n    \n\n    useEffect(() => {\n        if(props.myTweets){\n            setTweets(props.myTweets.message)\n            console.log(props.myTweets.message)\n        }\n        else{\n            props.fetchMyTweets();\n        }\n    },[props.myTweets]);\n\n    useEffect(() => {\n        props.fetchMyTweets();\n    },[props.update]);\n\n\n    return(\n        <div style={{marginBottom : '100px'}}>\n        {props.Loading === true ? <Loader/> : tweets ? tweets.map(tweet => {\n       return <Tweet key={tweet._id} id={tweet._id} userid={tweet.author} content={tweet.message} likes={tweet.likescount} like_flag={tweet.like_flag}  upd={tweet.createdAt} pimg={props.Users[tweet.author].profilePic} user={props.Users[tweet.author].name} comm={tweet.commentscount} vid={tweet.videolinks} img={tweet.imagelinks}/>;\n     }) : ''} \n   </div>\n    );\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    myTweets : state.myTweetsReducer.data,\n    Loading : state.myTweetsReducer.isLoading,\n    Users : state.miscActionReducer.userData,\n    update : state.tweetReducer.isLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchMyTweets: () => dispatch(fetchMyTweets()),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MyTweetList);\n","\nimport {MY_TWEETS_LOAD,MY_TWEETS_SUCCESS,MY_TWEETS_FAIL} from './types';\nimport {BASE} from './baseurl';\n\nexport const  fetchMyTweets = () => dispatch => {\n    \n    console.log('token-',localStorage.getItem('twitter-token'));\n    console.log('userid-',localStorage.getItem('userid'));\n    const request = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json',\n        'Authorization' : 'token '+localStorage.getItem('twitter-token'),\n        },\n    };\n\n    dispatch({\n        type:MY_TWEETS_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/?page=1&userid=${localStorage.getItem('userid')}`,request)\n    .then(response => {\n      response.json().then(data => {\n        console.log(data);\n      if(response.status === 200)\n      {\n          dispatch({\n              type:MY_TWEETS_SUCCESS,\n              isLoading:false,\n              payload : data,\n          })\n      }\n      else\n      {\n          dispatch({\n            type:MY_TWEETS_FAIL,\n            isLoading:false,\n            payload : data,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(error => {\n          dispatch({\n            type:MY_TWEETS_FAIL,\n            isLoading:false,\n            payload : error,\n          })\n        })\n    });\n}\n","import React,{useEffect,useState,useRef} from 'react';\nimport {fetchAllTweets} from '../actions/allTweetsListAction';\nimport { connect } from 'react-redux'\nimport {getUserData,getUsernameData} from '../actions/miscAction'\nimport '../App.css';\n\nimport Tweet from '../components/tweet';\nimport Loader from '../components/loader';\n\nconst AllTweetList = (props) => {\n   \n    const [tweets,setTweets] = useState([]);\n    const [atweets,setaTweets] = useState([]);\n\n    const [users,setUsers] = useState({});\n    const [usersname,setUsersname] = useState({});\n\n    const [page,setPage] = useState(1);\n\n    useEffect(() => {\n        if(props.tweets){\n                    console.log(props.tweets.length);\n                setTweets([...tweets,...props.tweets]);\n                console.log([...tweets,...props.tweets]);\n                //taking data from users\n                let userData = props.users || [];\n                let user_data = {...users};\n                let username_data = {...usersname};\n                for(let item of userData)\n                {\n                    user_data[item._id] = {\n                        \"name\" : item.name,\n                        \"username\" : item.username,\n                        \"profilePic\" : item.profile.profilePic,\n                    }\n\n                    username_data[item.username] = item._id;\n\n                }\n                console.log(user_data);\n                setUsers(user_data);\n                props.getUserData(user_data);\n                props.getUsernameData(username_data);\n        }\n    \n    },[props.tweets]);\n\n    useEffect(() => {\n        //console.log(props.success)\n            if(props.success === 1)\n            props.fetchAllTweets(1);\n    },[props.success]);\n\n    useEffect(() => {\n        setTweets([]);\n        props.fetchAllTweets(1);\n        console.log('upadting...')\n        console.log(props.update)\n    },[props.update,props.doneLike]);\n\n    useEffect(() => {\n        if(props.load === true)\n        {\n            setPage(page+1);\n            props.fetchAllTweets(page+1);\n            \n        }\n    },[props.load]);\n\n\n    return(\n         <div style={{marginBottom : '100px'}} >\n         { tweets ? tweets.map(tweet => {\n        return <div key={tweet._id}> \n        <Tweet key={tweet._id} id={tweet._id} userid={tweet.author} content={tweet.message} like_flag={tweet.like_flag} likes={tweet.likescount} upd={tweet.createdAt} pimg={users[tweet.author] ? users[tweet.author].profilePic : ''} user={users[tweet.author] ? users[tweet.author].name : ''} comm={tweet.commentscount} vid={tweet.videolinks} img={tweet.imagelinks}/>\n        </div>;\n        }) : <Loader/>}\n        {props.Loading  && <Loader/>} \n        </div>\n    );\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    tweets : state.allTweetsReducer.tweets,\n    users : state.allTweetsReducer.users,\n    Loading : state.allTweetsReducer.isLoading,\n    success : state.loginReducer.done, \n    update : state.tweetReducer.done,\n    //load : state.miscActionReducer.load,\n    doneLike : state.likeReducer.flag,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchAllTweets: (payload) => dispatch(fetchAllTweets(payload)),\n      getUserData: (payload) => dispatch(getUserData(payload)),\n      getUsernameData: (payload) => dispatch(getUsernameData(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AllTweetList);\n","import {ALL_TWEETS_LOAD,ALL_TWEETS_SUCCESS,ALL_TWEETS_FAIL} from './types';\nimport {BASE} from './baseurl';\nimport { connect } from 'react-redux';\n\nexport const  fetchAllTweets = (payload) => dispatch => {\n\n  let request = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json',\n  },\n};\n\n    if(localStorage.getItem('twitter-token'))\n    {\n        request = {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json',\n          'Authorization' : 'token '+localStorage.getItem('twitter-token'),\n        },\n      };\n    }\n\n    console.log('id',localStorage.getItem('twitter-token'));\n    console.log(request);\n\n    dispatch({\n        type:ALL_TWEETS_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/alltweets?page=${payload}`,request)\n    .then(response => {\n      response.json().then(data => {\n        console.log(payload);\n        console.log(data);\n      if(response.status === 200)\n      {\n          dispatch({\n              type:ALL_TWEETS_SUCCESS,\n              isLoading:false,\n              tweets : data.message.tweets,\n              users : data.message.users,\n          })\n      }\n      else\n      {\n          dispatch({\n            type:ALL_TWEETS_FAIL,\n            isLoading:false,\n            payload : data,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(error=> {\n          dispatch({\n            type:ALL_TWEETS_FAIL,\n            isLoading:false,\n            payload : error,\n          })\n        })\n    });\n}\n\n\n","import React,{useEffect,useState} from 'react';\nimport {logout} from '../actions/loginAction';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { changeTweetPage, goToProfile } from '../actions/miscAction';\n\n\nconst Sidebar = (props) => {\n\n\n    function logout(){\n        localStorage.removeItem('twitter-token');\n        localStorage.removeItem('userid');\n        localStorage.removeItem('name');\n        localStorage.removeItem('username');\n        localStorage.removeItem('email');\n        localStorage.removeItem('userPic');\n        props.logout();\n    }\n\n    function goTomytweets(){\n        props.changeTweetPage(props.flag);\n    }\n\n    function gotoProfile(){\n        props.goToProfile(props.profile);\n    }\n\n    function message(){\n       console.log('wip');\n    }\n\n    let width = window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth;\n\n    const [show,setShow] = useState(width > 996 ? true : false);\n    const Show = () => {\n        setShow(!show);\n        console.log('sow');\n    }\n\n    return(\n        width < 996 ?\n        <div className=\"sidebarMobile\" onClick={() => Show()}>\n            . . .\n            {\n                show ? \n                <div className=\"sidebarDiv\">\n                <div className=\"sidebarOptions\">#Explore</div>\n                {\n                    localStorage.getItem('username') === null || localStorage.getItem('username') === undefined ?  '' \n                    :\n                    <div className=\"mobileSec\">\n                    <div className=\"sidebarOptions\" onClick={() => message()}>Messages</div>\n                    {\n                        props.profile === false ?\n                        <div onClick={goTomytweets}  className=\"sidebarOptions\">{props.flag ? 'My tweets' : 'All tweets'}</div>\n                        :\n                        <div onClick={gotoProfile}  className=\"sidebarOptions\">Home</div>\n                    }\n                    <div onClick={logout} className=\"sidebarOptions\">log out</div>\n                    </div>\n                }\n                </div>\n            :\n            ''\n            }\n        </div>\n        :\n        <div className=\"sidebar\">\n            <div className=\"sidebarDiv\">\n            <div className=\"sidebarOptions\">#Explore</div>\n            {\n                localStorage.getItem('username') === null || localStorage.getItem('username') === undefined ?  '' \n                :\n                <div className=\"mobileSec\">\n                <div className=\"sidebarOptions\" onClick={() => message()}>Messages</div>\n                {\n                    props.profile === false ?\n                    <div onClick={goTomytweets}  className=\"sidebarOptions\">{props.flag ? 'My tweets' : 'All tweets'}</div>\n                    :\n                    <div onClick={gotoProfile}  className=\"sidebarOptions\">Home</div>\n                }\n                <div onClick={logout} className=\"sidebarOptions\">log out</div>\n                </div>\n            }\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    flag : state.miscActionReducer.flag,\n    profile : state.miscActionReducer.profile,\n    success : state.loginReducer.done, \n    data: state.loginReducer.data, \n    logout : state.loginReducer.done,\n  })\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      logout: () => dispatch(logout()),\n      changeTweetPage: (payload) => dispatch(changeTweetPage(payload)),\n      goToProfile: (payload) => dispatch(goToProfile(payload)),\n    };\n  };\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(Sidebar);","import firebase from 'firebase/app';\nimport 'firebase/database'; \n\nconst config = {\n    apiKey: \"AIzaSyA_Q8j3cYRSgSWO8PvU4OSJ4Kd9n5nqg24\",\n    authDomain: \"testing-speakup.firebaseapp.com\",\n    projectId: \"testing-speakup\",\n    storageBucket: \"testing-speakup.appspot.com\",\n    messagingSenderId: \"630260348505\",\n    appId: \"1:630260348505:web:772c7527762ada2791a348\"\n};\n\nconst app= firebase.initializeApp(config);\n\nexport default app;\n","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux'\nimport '../App.css';\nimport app from '../firebase';\n\nconst RightSidebar = (props) => {\n    const [chat,setChat] = useState(false);\n\n    const [imessage,setImessage] = useState([]);\n    const [wc,setWC] = useState([]);\n    const [omessage,setOmessage] = useState('');\n\n    const [username,setUsername] = useState(null);\n\n    const [chatid,setChatId] = useState(null);\n\n    const bottomRef = useRef(null);\n\n    useEffect(() => {\n\n        console.log(chatid);\n        if(chatid)\n        {\n        const ref = chatid;\n        const fire = app.database().ref(ref);\n        console.log('listening...')\n        let  item = [];\n        fire.on(\"child_added\",function(snapshot){\n            //console.log(wc);\n            const m =snapshot;\n            console.log(m.key+' '+m.val().message);\n            item.push(<div key={m.val().timestamp}><span style={{color:'white'}}>{m.val().author}:  </span>{m.val().message}</div>)\n            let tem = [];\n            if(!wc.includes(m.key))\n            {\n                tem.push(...wc,m.key);\n                setWC(tem);\n                console.log(tem);\n                item.sort(function(a,b){\n                    return a.key - b.key;\n                })\n                console.log(item);\n                setImessage(item);\n                //bottomRef.current.scrollIntoView({ block:'start' })\n                //<div ref={bottomRef} style={{height:'20px'}}></div>\n            }\n        });\n            return () => fire.off(\"child_added\");\n    }\n    },[imessage,chatid]);\n \n    const change = (msg) => {\n        setOmessage(msg);\n    }\n\n    const userchange = (msg) => {\n        setUsername(msg);\n    }\n\n    const send = () => {\n        let chatbox = app.database().ref(chatid);\n        let time = new Date().getTime();\n        console.log(omessage);\n        chatbox.push().set({\n            authorId : localStorage.getItem('userid'),\n            author : localStorage.getItem('username'),\n            message : omessage,\n            timestamp : time\n        })\n        setOmessage('');\n    }\n\n    const set = () => {\n        const my_id = localStorage.getItem('userid');\n        const another_id = props.user[username];\n        if(!props.user[username])\n        {\n            alert('invalid username');\n            return false;\n        }\n        const mix_id = my_id < another_id ? my_id+another_id : another_id+my_id;\n        console.log(my_id);\n        console.log(another_id);\n        console.log(mix_id);\n        setChatId(mix_id);\n        setChat(true);\n    }\n\n    return(\n        localStorage.getItem('twitter-token') && <div style={{textAlign:'center'}} className=\"rightSidebar\">\n            {\n            !chat && <div>\n           <div>Chat Box</div>\n            <input className=\"usernameChat\"onChange={(e) => userchange(e.target.value)} placeholder=\"username\"/>\n                {username && <div className=\"searchTweet\" onClick={()=>set()}>Open Chat for {username}</div>}\n            </div>\n            }\n            {chat && \n            <div>\n                <div>Chat box</div>\n                <div className=\"chatspace\">\n                {imessage}\n                </div>\n                <input className=\"msg\" placeholder=\"message\" value={omessage} onChange={(e) => change(e.target.value)}/>\n                <div className=\"smallbtn\" onClick={() => send()}>send</div>\n            </div>\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    user : state.miscActionReducer.usernameData,\n    logout : state.loginReducer.done,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(RightSidebar);\n\n","import React, { createContext } from 'react';\nimport { useSnackbar } from 'react-simple-snackbar';\n\nexport const SnackbarContext = createContext();\n\nconst SnackbarContextProvider = props => {\n  \n    const options = {\n        position: 'bottom-right',\n        style: {\n          backgroundColor: '#336600',\n          border: '2px solid #408000',\n          color: 'white',\n          fontSize: '20px',\n          textAlign: 'center',\n          borderRadius: '5px',\n        },\n        closeStyle: {\n          color: 'white',\n          fontSize: '16px',\n        },\n      }\n      \n      const optionsError = {\n          position: 'bottom-right',\n          style: {\n            backgroundColor: '#cc3300',\n            border: '2px solid #e63900',\n            color: 'white',\n            fontSize: '20px',\n            textAlign: 'center',\n            borderRadius: '5px',\n          },\n          closeStyle: {\n            color: 'white',\n            fontSize: '16px',\n          },\n        }\n      \n        const [openSnackbar, closeSnackbar] = useSnackbar(options);\n        const [openErrSnackbar, closeErrSnackbar] = useSnackbar(optionsError);\n    \n\n  return (\n    <SnackbarContext.Provider\n      value={{\n          options,\n          optionsError,\n          openSnackbar,\n          openErrSnackbar,\n          closeSnackbar,\n          closeErrSnackbar,\n      }}\n    >\n        {props.children}                                                                                                                                                                                                        \n    </SnackbarContext.Provider>\n  )\n}\n\nexport default SnackbarContextProvider;\n","import React from 'react';\n\nimport profile from '../assets/person.svg'; \n\nconst ProfilePic = (props) =>{\n    return (\n        <div>\n            {\n                props.image ? \n                <img className=\"profilePic\" src={props.image}/>\n                :\n                <img className=\"profilePic\" src={profile}/>\n            }\n        </div>\n    );\n}\n\nexport default ProfilePic;","import React,{useState,useEffect} from 'react';\nimport ProfilePic from '../components/profilePic'\nimport addPicture from '../assets/target.svg'\nimport addVideo from '../assets/screen-player.svg'\nimport cut from '../assets/delete.svg'\nimport { connect } from 'react-redux'\nimport Loader from '../components/loader';\nimport {goToProfile} from '../actions/miscAction'\nimport '../App.css';\n\nimport {createTweet} from '../actions/tweetAction';\nimport {fetchProfile} from '../actions/profileAction';\n\nconst TweetBox = (props) => {\n\n    const [data,setData] = useState(null);\n\n    const [multi,setMulti] = useState(null);\n\n    const [rtdb,setRtdb] = useState(null);\n\n    const postTweet = (e) => {\n        e.preventDefault();\n        let form_data = new FormData();\n\n        form_data.append('message', data['message']);\n\n        if(multi === 'img')\n        {\n            console.log(data['imagelinks'])\n            for(let i=0;i< data['imagelinks'].length;i++)\n            {\n                console.log(data['imagelinks'][i])\n                form_data.append('imagelinks',data['imagelinks'][i]);\n            }\n        }\n        else if(multi === 'vid')\n        {\n            form_data.append('videolinks', data['videolinks']);\n        }\n        \n        console.log(form_data);\n        let putdata = {\n            data : form_data,\n            token : localStorage.getItem('twitter-token'),\n        }\n        props.createTweet(putdata);\n    }\n\n    const change = (key,value) => {\n        console.log(key);\n        console.log(value);\n        setData({\n            ...data,\n            [key] : value,\n        })\n    }\n\n    const gotoprofile = () => {\n        props.goToProfile(props.profile);\n    }\n\n    console.log(data);\n\n    return(\n        <div className=\"tweetbox\">\n            {props.Loading === true ? \n            <Loader/>\n            :\n            localStorage.getItem('username') === null || localStorage.getItem('username') === undefined  ? \n            <h3 style={{fontFamily: 'Avenir-Medium',margin: 'auto',color: '#073f63'}}>Login to start tweeting!</h3>\n            :\n            <div>\n            <div style={{display:'flex'}}>\n             <div style={{cursor:'pointer'}} onClick={() => gotoprofile()}>\n            <ProfilePic image={localStorage.getItem('userPic')}/>\n            </div>\n            <form class=\"tweetboxform\">\n            <textarea id=\"tweetContent\" onChange={(e) => change(\"message\",e.target.value)} name=\"content\" rows=\"5\" cols=\"30\" placeholder=\"What's happening?\" className=\"textArea\"></textarea>\n            </form>\n            </div>\n            {\n                data && data.imagelinks && data.imagelinks.length > 0 && multi === 'img'?\n                <img className=\"tweetPostImage\" src={URL.createObjectURL(data.imagelinks[0])} />\n                :\n                ''\n            }\n            {\n                data && data.imagelinks && data.imagelinks.length > 1 && multi === 'img'?\n                <img className=\"tweetPostImage\" src={URL.createObjectURL(data.imagelinks[1])} />\n                :\n                ''\n            }\n            {\n                data && data.imagelinks && data.imagelinks.length > 2 && multi === 'img'?\n                <img className=\"tweetPostImage\" src={URL.createObjectURL(data.imagelinks[2])} />\n                :\n                ''\n            }\n            {\n                data && data.videolinks &&  multi === 'vid'?\n                <video className=\"videoDiv\"controls>\n                <source src={URL.createObjectURL(data.videolinks)} />\n                </video>\n                :\n                ''\n            }\n            <div>\n                <div onClick={() => setMulti(null)} style={{position:'relative',top:'60px',left:'400px'}}>\n                {\n                    multi ?\n                    <img src={cut} className=\"multibtn\"/>\n                    :\n                    ''\n                }\n                </div>\n            <input type=\"file\"\n                   id=\"postImage\"\n                   className = \"imageUpload\"\n                   onChange ={(e) => change(\"imagelinks\",e.target.files)}\n                   multiple\n                    />\n            <label onClick={() => setMulti('img')} style={multi === 'vid' ? {pointerEvents: 'none',opacity: '0.35'} : {}} className=\"uploadImage\" htmlFor=\"postImage\"><img src={addPicture} className=\"multibtn\"/></label>\n            <input type=\"file\"\n                   id=\"postVideo\"\n                   className = \"imageUpload\"\n                   onChange ={(e) => change(\"videolinks\",e.target.files[0])}\n                    />\n            <label onClick={() => setMulti('vid')}  style={multi === 'img' ? {pointerEvents: 'none',opacity: '0.35'} : {}}  className=\"uploadImage\" htmlFor=\"postVideo\"><img src={addVideo}  className=\"multibtn\"/></label>\n            <input className=\"smallbtn2\" onClick={e => postTweet(e)}  type=\"submit\" value={'Tweet'}/>\n            </div>\n            </div>\n             }\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    Loading : state.tweetReducer.isLoading,\n    LoginLoading : state.loginReducer.isLoading,\n    success : state.loginReducer.done,\n    LoginData : state.loginReducer.data, \n    profile : state.miscActionReducer.profile,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      createTweet: (payload) => dispatch(createTweet(payload)),\n      goToProfile: (payload) => dispatch(goToProfile(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TweetBox);\n","\nimport React,{useEffect,useState} from 'react';\nimport {fetchProfile,updateProfile} from '../actions/profileAction';\nimport '../App.css';\n\nimport email from '../assets/email.svg'\nimport { connect } from 'react-redux'\nimport Loader from '../components/loader';\nimport MyTweetList from './mytweetList';\n\nimport addPicture from '../assets/target.svg'\n\n\nconst ProfilePage = (props) => {\n   \n    const [profile,setProfile] = useState(null);\n    const [edit,setEdit] = useState(false);\n    const [data,setData] = useState(null);\n    \n\n    useEffect(() => {\n        if(props.profile){\n            setProfile(props.profile.profile)\n            setData({\n                ...data,\n                bio : props.profile.profile? props.profile.profile.bio : '',\n            });\n            console.log(props.profile);\n        }\n        else{\n            const data = {\n              username : localStorage.getItem('username'),\n            }\n            props.fetchProfile(data);\n        }\n    },[props.profile]);\n\n    useEffect(()=>{\n\n    },[edit,data]);\n\n    const editProfile = () => {\n        setEdit(true);\n    }\n\n    const saveProfile = () => {\n        let form_data = new FormData();\n        for(let key in data)\n        {\n            form_data.append(key, data[key]);\n        }\n        console.log(form_data);\n        let putdata = {\n            data : form_data,\n            token : localStorage.getItem('twitter-token'),\n            username : localStorage.getItem('username'),\n        }\n        props.updateProfile(putdata);\n        setEdit(false);\n        const d = {\n            username : localStorage.getItem('username'),\n          }\n          props.fetchProfile(d);\n    }\n\n    const change = (key,value) => {\n        setData({\n            ...data,\n            [key] : value,\n        })\n    }\n\n    return(\n         <div>\n         {\n         props.Loading === true ? <Loader/> :  profile === null ? '' : \n           \n            <div className=\"profileDiv\">\n            {\n                edit == false ?\n                <img className=\"profilePicProfile\" src={profile ? profile.profilePic : ''}/>\n                :\n                <div>\n                <img className=\"profilePicProfile\" src={profile ? profile.profilePic : ''}/>\n                <input type=\"file\"\n                       id=\"postImage\"\n                       className = \"imageUpload\"\n                       onChange ={(e) => change(\"profilePic\",e.target.files[0])}\n                        />\n                <label className=\"uploadImageProfile\" htmlFor=\"postImage\"><img src={addPicture} style={{height:'30px', width:'30px', display:'inline', margin:'auto'}}/></label>\n                </div>\n            }\n            <div>\n            <div className=\"profileName\">{localStorage.getItem('name')}</div>\n            <div className=\"profileUsername\">@{localStorage.getItem('username')}</div>\n            <div className=\"profileEmail\"> <img src={email} style={{height:'20px', width:'20px', display:'inline', margin:'auto',verticalAlign:'middle'}} />  {localStorage.getItem('email')}</div>\n            {\n                edit === false ?\n                <div>{profile === null ? <div className=\"bio\"> Tell us about yourself</div> : <div className=\"bio\" >{profile.bio}</div>}</div>\n                :\n                <div><input className=\"bioInput\" onChange={(e) => change(\"bio\",e.target.value)} value={data === null ? '' : data.bio} type=\"text\" placeholder=\"Tell us about yourself...\"/></div>\n            }\n            <div className=\"follow\">\n                <div><span>{profile.following}</span>Following</div>\n                <div><span>{profile.followers}</span>Followers </div>\n            </div>\n        <div className=\"editbtn\" onClick={() => {edit === false ? editProfile() : saveProfile() }}>{ edit === false ? 'edit' : 'save'}</div>\n            </div>\n            </div>\n         }\n         <MyTweetList/>\n        </div>\n    );\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    profile : state.profileReducer.data,\n    Loading : state.profileReducer.isLoading\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchProfile: (payload) => dispatch(fetchProfile(payload)),\n      updateProfile: (payload) => dispatch(updateProfile(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ProfilePage);\n","import {GET_PROFILE_LOAD,GET_PROFILE_SUCCESS,GET_PROFILE_FAIL,UPD_PROFILE_LOAD,UPD_PROFILE_SUCCESS,UPD_PROFILE_FAIL} from './types';\nimport {BASE} from './baseurl';\n\nexport const  fetchProfile = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json'},\n    };\n    \n    dispatch({\n        type:GET_PROFILE_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/profile?username=${payload.username}`,request)\n    .then(response => {\n      response.json().then(data => {\n      if(response.status === 200)\n      {\n          console.log(data);\n          dispatch({\n              type:GET_PROFILE_SUCCESS,\n              isLoading:false,\n              payload : data,\n          })\n      }\n      else\n      {\n          dispatch({\n            type:GET_PROFILE_FAIL,\n            isLoading:false,\n            payload : data,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(data => {\n          dispatch({\n            type:GET_PROFILE_FAIL,\n            isLoading:false,\n            payload : data,\n          })\n        })\n    });\n}\n\nexport const  updateProfile = (payload) => dispatch => {\n\n  console.log(payload);\n  const request = {\n      method: 'PUT',\n      headers : {'Authorization':'Token '+payload.token},\n      body: payload.data,\n  };\n  \n  dispatch({\n      type:UPD_PROFILE_LOAD,\n      isLoading:true,\n  });\n\n  fetch(`${BASE}/profile/update?username=${payload.username}`,request)\n  .then(response => {\n    response.json().then(data => {\n    if(response.status === 200)\n    {\n        console.log(data);\n        dispatch({\n            type:UPD_PROFILE_SUCCESS,\n            isLoading:false,\n        })\n    }\n    else\n    {\n        dispatch({\n          type:UPD_PROFILE_FAIL,\n          isLoading:false,\n      })\n    }\n  })   \n  })\n  .catch(error => {\n        error.json().then(data => {\n        dispatch({\n          type:UPD_PROFILE_FAIL,\n          isLoading:false,\n        })\n      })\n  });\n}\n","import React from 'react';\nimport '../App.css';\nimport TweetBox from './tweetbox';\nimport AllTweetList from './alltweetsList';\nimport { connect } from 'react-redux';\nimport MyTweetList from './mytweetList';\nimport ProfilePage from './profilePage';\nimport Loader from '../components/loader';\nimport { loadData } from '../actions/miscAction';\n\nconst MainLayout = (props) => {\n\n  const handleScroll = (e) => {\n    if(e.target.scrollHeight - e.target.scrollTop <= e.target.clientHeight && props.tweets.length > 0)\n    {\n      console.log('end');\n      props.loadData(props.load);\n    }\n}\n\n  return(\n\n        <div className=\"mainArea\" onScroll={(e) => handleScroll(e)}>\n          {\n             props.Loading === true ?\n             <Loader/> \n             :\n            props.profile === false ?\n            <div>\n            <TweetBox/>\n            {props.flag ?\n            <AllTweetList/>\n            :\n            <MyTweetList/>\n            }\n            <div style={{padding:'50px'}}></div>\n            </div>\n            :\n            <ProfilePage/>\n          }\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    flag : state.miscActionReducer.flag,\n    profile : state.miscActionReducer.profile,\n    //Loading : state.tweetReducer.isLoading, \n    success : state.loginReducer.done, \n    //load : state.miscActionReducer.load,\n    //tweets : state.allTweetsReducer.tweets,\n    //update : state.tweetReducer.done, \n    data: state.loginReducer.data, \n});\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadData: (payload) => dispatch(loadData(payload)),\n    };\n  };\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(MainLayout);","import React from 'react';\nimport SnackbarProvider from 'react-simple-snackbar';\n\nimport Header from './header';\nimport MainArea from '../components/mainArea';\nimport AllTweetList from './alltweetsList';\nimport Sidebar from './sidebar';\nimport RightSidebar from '../components/rightSidebar';\nimport UtilsContextProvider from '../contexts/utils';\nimport SnackbarContextProvider from '../contexts/snackbar';\n\nimport '../App.css'; \nimport MainLayout from './mainLayout';\n\nfunction Home(){\n    return (\n        <div>\n            <SnackbarProvider>\n            <SnackbarContextProvider>\n            <UtilsContextProvider>\n            <Header/>\n            <SnackbarProvider>\n            <div className=\"dashboard\">\n            <Sidebar/>\n            <MainLayout/>\n            <RightSidebar/>\n            </div>\n            </SnackbarProvider>\n            </UtilsContextProvider>\n            </SnackbarContextProvider>\n            </SnackbarProvider>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport SnackbarProvider from 'react-simple-snackbar';\n\nimport './App.css';\nimport logo from './assets/twitter.svg'; \n\nimport Signup from './containers/signup';\nimport Login from './containers/login';\n\nfunction Newtwitter() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"AppInfo\">\n        <div className=\"Info\"> New Twitter</div>\n      </div>\n      <div className=\"Sign\">\n        <img src={logo} alt=\"logo\" style={{height:'180px', width:'180px'}}/>\n      Join New Twitter today!\n      <SnackbarProvider>\n      <Signup/>\n      <Login/>\n      </SnackbarProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default Newtwitter;","import React from 'react';\nimport { HashRouter as Router,Switch, Route } from \"react-router-dom\";\nimport { CookiesProvider } from 'react-cookie';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport Home from './containers/home';\nimport Newtwitter from './newtwitter';\n\nfunction App() {\n\n  return (\n    <div>\n      <Provider store={store}>\n      <CookiesProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/entry\" exact component={Newtwitter}/>\n          <Route path=\"/\" exact component={Home}/>\n        </Switch>\n      </Router>\n      </CookiesProvider>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/twitter.33f06ef7.svg\";","module.exports = __webpack_public_path__ + \"static/media/person.6c017a1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/target.48d54fde.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.8aa66e9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlikeheart.5211ae2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment.8e2c1615.svg\";","module.exports = __webpack_public_path__ + \"static/media/screen-player.66a2810f.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.99cfb475.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.f2103d04.svg\";"],"sourceRoot":""}