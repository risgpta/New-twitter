{"version":3,"sources":["assets/twitter.svg","assets/person.svg","assets/add.svg","assets/heart.svg","assets/unlikeheart.svg","assets/email.svg","reducers/postReducer.js","reducers/incrementReducer.js","reducers/allTweetsListReducer.js","reducers/myTweetsListReducer.js","reducers/loginReducer.js","reducers/signupReducer.js","reducers/miscActionReducer.js","reducers/profileReducer.js","reducers/tweetReducer.js","reducers/index.js","actions/types.js","store.js","contexts/utils.js","components/loader.js","containers/signup.js","actions/signupAction.js","containers/login.js","actions/loginAction.js","containers/header.js","contexts/snackbar.js","components/tweet.js","actions/tweetAction.js","containers/mytweetList.js","actions/myTweetsListAction.js","actions/allTweetsListAction.js","containers/alltweetsList.js","actions/miscAction.js","containers/sidebar.js","components/rightSidebar.js","components/profilePic.js","containers/tweetbox.js","containers/profilePage.js","actions/profileAction.js","containers/mainLayout.js","containers/home.js","newtwitter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","items","item","count","isLoading","data","done","flag","profile","combineReducers","posts","state","action","type","console","log","payload","counter","allTweetsReducer","loginReducer","signupReducer","myTweetsReducer","miscActionReducer","profileReducer","tweetReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","UtilsContext","createContext","UtilsContextProvider","props","useState","chat","setChat","mytweet","setMytweet","editTweet","setEditTweet","editTweetContent","setEditTweetContent","editTweetLikes","setEditTweetLikes","loader","setLoader","loader2","setLoader2","Provider","value","children","Loader","id","connect","Loading","success","dispatch","signup","request","method","headers","body","JSON","stringify","fetch","then","response","json","status","res","key","catch","error","signupIsOpen","setSignupOpen","signupdata","setSignupdata","closeSignup","useEffect","className","onClick","isOpen","onRequestClose","ariaHideApp","src","logo","alt","style","height","width","display","margin","marginTop","name","e","preventDefault","inputs","document","getElementById","querySelectorAll","userinfo","handleSignupSubmit","login","useCookies","setCookie","loginIsOpen","setLoginOpen","logindata","setLogindata","closeLogin","token","path","username","alert","handleLoginSubmit","Header","cookies","Username","undefined","SnackbarContext","SnackbarContextProvider","options","position","backgroundColor","border","color","fontSize","textAlign","borderRadius","closeStyle","optionsError","useSnackbar","openSnackbar","closeSnackbar","openErrSnackbar","closeErrSnackbar","deleteTweet","updateTweet","inputRef","useRef","deleteTweetid","setDeleteTweetid","setData","editTweetid","setEditTweetid","edit","setEdit","content","likes","current","focus","Token","putdata","time","upd","date","split","Update_date","Date","Update_time","image","verticalAlign","user","toLocaleTimeString","hour","minute","hour12","toDateString","ref","onChange","target","post_image","likePost","like","unlike","myTweets","update","fetchMyTweets","tweets","setTweets","slice","reverse","map","tweet","updation_date","profile_image","allTweets","fetchAllTweets","goToProfile","logout","changeTweetPage","useContext","removeCookie","RightSidebar","placeholder","rows","ProfilePic","createTweet","change","cursor","class","cols","files","htmlFor","addPicture","form_data","FormData","append","postTweet","fetchProfile","updateProfile","setProfile","bio","first_name","last_name","email","following","followers","saveProfile","setUpdate","padding","Home","Newtwitter","App","CookiesProvider","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,8NCErCC,EAAe,CACjBC,MAAQ,GACRC,KAAO,ICFLF,EAAe,CACjBG,MAAQ,GCDNH,EAAe,CACjBI,WAAY,EACZC,KAAO,MCFLL,EAAe,CACjBI,WAAY,EACZC,KAAO,MCFLL,EAAe,CACjBI,WAAY,EACZC,KAAO,KACPC,MAAQ,GCHNN,EAAe,CACjBI,WAAY,EACZC,KAAO,KACPC,MAAQ,GCHNN,EAAe,CACjBO,MAAO,EACPC,SAAU,GCFRR,EAAe,CACjBI,WAAY,EACZC,KAAO,MCFLL,EAAe,CACjBI,WAAY,EACZC,KAAO,MCOII,4BAAgB,CAC5BC,MTLY,WAAsC,IAA7BC,EAA4B,uDAApBX,EAAaY,EAAO,uCAChD,OAAOA,EAAOC,MACV,IUTmB,cVWf,OADAC,QAAQC,IAAI,aACZ,2BACOJ,GADP,IAEIV,MAAQW,EAAOI,UAEvB,QACA,OAAOL,ISHZM,QRPY,WAAsC,IAA7BN,EAA4B,uDAApBX,EAAaY,EAAO,uCAChD,OAAOA,EAAOC,MACV,ISNiB,YTQT,OADAC,QAAQC,IAAI,aACZ,2BACOJ,GADP,IAEIR,MAAQS,EAAOI,UAE3B,QACA,OAAOL,IQDZO,iBPPY,WAAsC,IAA7BP,EAA4B,uDAApBX,EAAaY,EAAO,uCAChD,OAAOA,EAAOC,MACV,IQJuB,kBRKf,kCACOF,GADP,IAEIP,WAAY,IAExB,IQR0B,qBRc1B,IQbuB,kBRcf,kCACOO,GADP,IAEIP,WAAY,EACZC,KAAKO,EAAOI,UAExB,QACA,OAAOL,IOZZQ,aLPY,WAAsC,IAA7BR,EAA4B,uDAApBX,EAAaY,EAAO,uCAChD,OAAOA,EAAOC,MACV,IMKkB,aNJV,kCACOF,GADP,IAEIP,WAAY,IAExB,IMCqB,gBNMrB,IMLkB,aNMV,kCACOO,GADP,IAEIP,WAAY,EACZC,KAAKO,EAAOI,QACZV,KAAKM,EAAON,OAExB,IMVc,SNWV,kCACOK,GADP,IAEIP,WAAY,EACZC,KAAO,KACPC,MAAQ,IAEhB,QACA,OAAOK,IKrBZS,cJRY,WAAsC,IAA7BT,EAA4B,uDAApBX,EAAaY,EAAO,uCAChD,OAAOA,EAAOC,MACV,IKYmB,cLXX,kCACOF,GADP,IAEIP,WAAY,IAExB,IKQsB,iBLDtB,IKEmB,cLDX,kCACOO,GADP,IAEIP,WAAY,EACZC,KAAKO,EAAOI,QACZV,KAAKM,EAAON,OAExB,QACA,OAAOK,IIbZU,gBNVY,WAAsC,IAA7BV,EAA4B,uDAApBX,EAAaY,EAAO,uCAChD,OAAOA,EAAOC,MACV,IOCsB,iBPAd,kCACOF,GADP,IAEIP,WAAY,IAExB,IOHyB,oBPSzB,IORsB,iBPSd,kCACOO,GADP,IAEIP,WAAY,EACZC,KAAKO,EAAOI,UAExB,QACA,OAAOL,IMTZW,kBHXY,WAAsC,IAA7BX,EAA4B,uDAApBX,EAAaY,EAAO,uCAChD,OAAOA,EAAOC,MACV,IIkByB,oBJjBjB,kCACOF,GADP,IAEGJ,KAAOK,EAAOI,UAEzB,IIeqB,gBJdjB,kCACOL,GADP,IAEIH,QAAUI,EAAOI,UAEzB,QACA,OAAOL,IGDZY,eFZY,WAAsC,IAA7BZ,EAA4B,uDAApBX,EAAaY,EAAO,uCAChD,OAAOA,EAAOC,MACV,IGuBwB,mBHtBhB,kCACOF,GADP,IAEIP,WAAY,IAExB,IGmB2B,sBHb3B,IGcwB,mBHbhB,kCACOO,GADP,IAEIP,WAAY,EACZC,KAAKO,EAAOI,UAExB,IGUwB,mBHTZ,kCACOL,GADP,IAEIP,WAAY,IAE5B,IGM2B,sBHA3B,IGCwB,mBHAZ,kCACOO,GADP,IAEIP,WAAY,EACZC,KAAKO,EAAOI,UAE5B,QACA,OAAOL,IExBZa,aDbY,WAAsC,IAA7Bb,EAA4B,uDAApBX,EAAaY,EAAO,uCAChD,OAAOA,EAAOC,MACV,IEiCyB,oBFhCjB,kCACOF,GADP,IAEIP,WAAY,IAExB,IE6B4B,uBFvB5B,IEwByB,oBFvBjB,kCACOO,GADP,IAEIP,WAAY,EACZC,KAAKO,EAAOI,UAExB,IEoBsB,iBFnBV,kCACOL,GADP,IAEIP,WAAY,IAE5B,IEgByB,oBFVzB,IEWsB,iBFVV,kCACOO,GADP,IAEIP,WAAY,EACZC,KAAKO,EAAOI,UAE5B,IEOsB,iBFNV,kCACOL,GADP,IAEIP,WAAY,IAE5B,IEGyB,oBFGzB,IEFsB,iBFGV,kCACOO,GADP,IAEIP,WAAY,EACZC,KAAKO,EAAOI,UAE5B,QACA,OAAOL,MGtDTc,EAAa,CAACC,KAILC,EAFDC,sBAAYC,EAJL,GAI+BC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,gECP9EO,EAAeC,0BAoCbC,EAlCc,SAAAC,GAAU,IAAD,EAEXC,oBAAS,GAFE,mBAE3BC,EAF2B,KAEtBC,EAFsB,OAGLF,oBAAS,GAHJ,mBAG3BG,EAH2B,KAGnBC,EAHmB,OAIDJ,mBAAS,MAJR,mBAI3BK,EAJ2B,KAIjBC,EAJiB,OAKaN,mBAAS,MALtB,mBAK3BO,EAL2B,KAKVC,EALU,OAMSR,mBAAS,MANlB,mBAM3BS,EAN2B,KAMZC,EANY,OAOPV,oBAAS,GAPF,mBAO3BW,EAP2B,KAOpBC,EAPoB,OAQLZ,oBAAS,GARJ,mBAQ3Ba,EAR2B,KAQnBC,EARmB,KAUpC,OACE,kBAAClB,EAAamB,SAAd,CACEC,MAAO,CACHf,OACAC,UACAC,UACAC,aACAC,YACAC,eACAC,mBACAC,sBACAC,iBACAC,oBACAC,SACAC,YACAC,UACAC,eAGDf,EAAMkB,WCxBAC,EANA,WACX,OACI,yBAAKC,GAAG,YCqFhB,IAYeC,eAZS,SAAC7C,GAAD,MAAY,CAClCN,KAAOM,EAAMS,cAAcf,KAC3BoD,QAAU9C,EAAMS,cAAchB,UAC9BsD,QAAU/C,EAAMS,cAAcsC,YAGL,SAACC,GAC1B,MAAO,CACLC,OAAQ,SAAC5C,GAAD,OAAa2C,ECjGF,SAAC3C,GAAD,OAAa,SAAA2C,GAEhC7C,QAAQC,IAAIC,GACZ,IAAM6C,EAAU,CACZC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUlD,IAGtB2C,EAAS,CACR9C,KLWmB,cKVnBT,WAAU,IAGd+D,MAAM,4DAA4DN,GACjEO,MAAK,SAAAC,GACJvD,QAAQC,IAAIsD,GACSA,EAASC,OAAOF,MAAK,SAAA/D,GAE1C,GADAS,QAAQC,IAAIV,GACW,MAApBgE,EAASE,OAEVZ,EAAS,CACL9C,KLAkB,iBKClBT,WAAU,EACVY,QAAUX,EACVC,KAAO,QAIb,CACI,IAAIkE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAIyD,GACZb,EAAS,CACP9C,KLde,cKefT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,WAKdoE,OAAM,SAAAC,GACgBA,EAAML,OAAOF,MAAK,SAAA/D,GACnCS,QAAQC,IAAIV,GACZ,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAI,QAAQyD,GACpBb,EAAS,CACP9C,KLhCe,cKiCfT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,WDuCesD,CAAO5C,QAI1BwC,EA9Ff,SAAgBrB,GAAQ,IAAD,EAEgBC,oBAAS,GAFzB,mBAEdwC,EAFc,KAEDC,EAFC,OAGczC,mBAAS,MAHvB,mBAGd0C,EAHc,KAGHC,EAHG,KASrB,SAASC,IACPH,GAAc,GAoChB,OAjCAI,qBAAU,WACS,MAAdH,IAEDhE,QAAQC,IAAI+D,GACZ3C,EAAMyB,OAAOkB,MAEf,CAACA,IAEHG,qBAAU,WACa,IAAlB9C,EAAMuB,QAEP5C,QAAQC,IAAI,WAIZD,QAAQC,IAAI,mCAEd,CAACoB,EAAM9B,OAiBL,yBAAK6E,UAAU,OACf,4BAAQC,QA3CZ,WACEN,GAAc,IA0CiBK,UAAU,UAAvC,WAGA,kBAAC,IAAD,CACIE,OAAQR,EACRS,eAAgBL,EAChBE,UAAU,aACVI,aAAa,GAEZnD,EAAMsB,QAAU,kBAAC,EAAD,MACjB,6BACC,yBAAK8B,IAAKC,IAAMC,IAAI,OAAOC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,QAAQ,QAASC,OAAO,OAAOC,UAAU,UAC1G,0BAAMxC,GAAG,SAAS2B,UAAU,aAC1B,6CACA,2BAAOc,KAAK,aAAanF,KAAK,SAC9B,4CACA,2BAAOmF,KAAK,YAAYnF,KAAK,SAC7B,2CACA,2BAAOmF,KAAK,WAAWnF,KAAK,SAC5B,wCACA,2BAAOmF,KAAK,QAAQnF,KAAK,UACzB,2CACA,2BAAOmF,KAAK,WAAWnF,KAAK,aAC5B,4BAAQsE,QAAS,SAAAc,GAAC,OAvC5B,SAA4BA,GAC1BA,EAAEC,iBACF,IAF4B,EAGxBC,EADSC,SAASC,eAAe,UACjBC,iBAAiB,SACjCC,EAAW,GAJa,cAKZJ,GALY,IAK5B,IAAI,EAAJ,qBACA,CAAC,IADO9F,EACR,QACEkG,EAASlG,EAAK2F,MAAQ3F,EAAK+C,OAPD,8BAS5BtC,QAAQC,IAAIwF,GACZxB,EAAcwB,GACdvB,IA4B8BwB,CAAmBP,IAAIf,UAAU,YAAvD,iB,QEiBZ,IAYe1B,eAZS,SAAC7C,GAAD,MAAY,CAClCN,KAAOM,EAAMQ,aAAad,KAC1BoD,QAAU9C,EAAMQ,aAAaf,UAC7BsD,QAAU/C,EAAMQ,aAAab,SAGJ,SAACqD,GAC1B,MAAO,CACL8C,MAAO,SAACzF,GAAD,OAAa2C,ECvGF,SAAC3C,GAAD,OAAa,SAAA2C,GAE/B7C,QAAQC,IAAIC,GACZ,IAAM6C,EAAU,CACZC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUlD,IAGtB2C,EAAS,CACR9C,KPIkB,aOHlBT,WAAU,IAGd+D,MAAM,yDAAyDN,GAC9DO,MAAK,SAAAC,GACJvD,QAAQC,IAAIsD,GACSA,EAASC,OAAOF,MAAK,SAAA/D,GAE1C,GADAS,QAAQC,IAAIV,GACW,MAApBgE,EAASE,OAEVZ,EAAS,CACL9C,KPPiB,gBOQjBT,WAAU,EACVY,QAAUX,EACVC,KAAO,QAIb,CACI,IAAIkE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAIyD,GACZb,EAAS,CACP9C,KPrBc,aOsBdT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,WAKdoE,OAAM,SAAAC,GACgBA,EAAML,OAAOF,MAAK,SAAA/D,GACnCS,QAAQC,IAAIV,GACZ,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAI,QAAQyD,GACpBb,EAAS,CACP9C,KPvCc,aOwCdT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,WD6CcmG,CAAMzF,QAIxBwC,EA9Ff,SAAerB,GAAQ,IAAD,EACSuE,cADT,mBACJC,GADI,aAGevE,oBAAS,GAHxB,mBAGbwE,EAHa,KAGDC,EAHC,OAIazE,mBAAS,MAJtB,mBAIb0E,EAJa,KAIHC,EAJG,KAkCpB,SAASC,IACPH,GAAa,GAgBf,OA7CA5B,qBAAU,WACQ,MAAb6B,IAEDhG,QAAQC,IAAI+F,GACZ3E,EAAMsE,MAAMK,MAEd,CAACA,IAEH7B,qBAAU,WACL9C,EAAM9B,OAEc,IAAlB8B,EAAMuB,SAEPiD,EAAU,QAASxE,EAAM9B,KAAK4G,MAAO,CAAEC,KAAM,MAC7CP,EAAU,WAAYG,EAAUK,SAAU,CAAED,KAAM,OAIlDE,MAAM,2BAERL,EAAa,SAEf,CAAC5E,EAAM9B,OAwBP,yBAAK6E,UAAU,OACb,4BAAQC,QAvBZ,WACE0B,GAAa,IAsBiB3B,UAAU,SAAtC,SAGC/C,EAAMsB,QAAU,kBAAMuD,KAAe,GACpC,kBAAC,IAAD,CACE5B,OAAQwB,EACRvB,eAAgB2B,EAChB9B,UAAU,aACVI,aAAa,GAEZnD,EAAMsB,QAAU,kBAAC,EAAD,MACjB,6BACC,yBAAK8B,IAAKC,IAAMC,IAAI,OAAOC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,QAAQ,QAASC,OAAO,OAAOC,UAAU,UAC1G,0BAAMxC,GAAG,QAAQ2B,UAAU,YAAYpB,OAAO,QAC5C,2CACA,2BAAOkC,KAAK,WAAWnF,KAAK,SAC5B,2CACA,2BAAOmF,KAAK,WAAWnF,KAAK,aAC5B,4BAAQsE,QAAS,SAAAc,GAAC,OAjC5B,SAA2BA,GACzBA,EAAEC,iBACF,IAF2B,EAGvBC,EADSC,SAASC,eAAe,SACjBC,iBAAiB,SACjCC,EAAW,GAJY,cAKXJ,GALW,IAK3B,IAAI,EAAJ,qBACA,CAAC,IADO9F,EACR,QACEkG,EAASlG,EAAK2F,MAAQ3F,EAAK+C,OAPF,8BAS3BtC,QAAQC,IAAIwF,GACZQ,EAAaR,GAuBiBc,CAAkBpB,IAAIf,UAAU,YAAtD,gBE1DGoC,MAnBf,WAAkB,IAAD,EACgBZ,cADhB,mBACNa,EADM,KAEb,OAFa,KAGL,yBAAKrC,UAAU,UACf,yBAAKK,IAAKC,IAAMC,IAAI,OAAOC,MAAO,CAACC,OAAO,OAAQC,MAAM,UAE/B,OAArB2B,EAAQC,eAA0CC,IAArBF,EAAQC,SAAyB,yBAAKtC,UAAU,iBAAf,QAA0C,yBAAKA,UAAU,iBAAf,eAA4CqC,EAAQC,SAApD,KAInF,OAArBD,EAAQC,eAA0CC,IAArBF,EAAQC,SAA0B,kBAAC,EAAD,MAAY,GAGtD,OAArBD,EAAQC,eAA0CC,IAArBF,EAAQC,SAA0B,kBAAC,EAAD,MAAW,K,2DClB7EE,EAAkBzF,0BAwDhB0F,EAtDiB,SAAAxF,GAE5B,IAAMyF,EAAU,CACZC,SAAU,eACVnC,MAAO,CACLoC,gBAAiB,UACjBC,OAAQ,oBACRC,MAAO,QACPC,SAAU,OACVC,UAAW,SACXC,aAAc,OAEhBC,WAAY,CACVJ,MAAO,QACPC,SAAU,SAIRI,EAAe,CACjBR,SAAU,eACVnC,MAAO,CACLoC,gBAAiB,UACjBC,OAAQ,oBACRC,MAAO,QACPC,SAAU,OACVC,UAAW,SACXC,aAAc,OAEhBC,WAAY,CACVJ,MAAO,QACPC,SAAU,SA9BmB,EAkCKK,YAAYV,GAlCjB,mBAkC1BW,EAlC0B,KAkCZC,EAlCY,OAmCWF,YAAYD,GAnCvB,mBAmC1BI,EAnC0B,KAmCTC,EAnCS,KAsCvC,OACE,kBAAChB,EAAgBvE,SAAjB,CACEC,MAAO,CACHwE,UACAS,eACAE,eACAE,kBACAD,gBACAE,qBAGDvG,EAAMkB,WC4FAG,eAXS,SAAC7C,GAAD,MAAY,CAChC8C,QAAU9C,EAAMa,aAAapB,cAGN,SAACuD,GACxB,MAAO,CACLgF,YAAa,SAAC3H,GAAD,OAAa2C,ECZJ,SAAC3C,GAAD,OAAa,SAAA2C,GAErC7C,QAAQC,IAAIC,GACZ,IAAM6C,EAAU,CACZC,OAAQ,SACRC,QAAU,CAAC,cAAgB,SAAS/C,EAAQiG,QAGhDtD,EAAS,CACL9C,KXxFsB,iBWyFtBT,WAAU,IAGd+D,MAAM,4DAA4DnD,EAAQuC,GAAG,IAAIM,GAChFO,MAAK,SAAAC,GAEJ,GADAvD,QAAQC,IAAIsD,GACW,MAApBA,EAASE,OAEVZ,EAAS,CACL9C,KXjGqB,oBWkGrBT,WAAU,EACVY,QAAUqD,EACV/D,KAAO,QAIb,CACI,IAAIkE,EAAM,GACV,IAAI,IAAIC,KAAOJ,EAEXG,EAAIA,EAAIC,EAAI,IAAIJ,EAASI,GAAK,IAElC3D,QAAQC,IAAIyD,GACZb,EAAS,CACP9C,KX/GkB,iBWgHlBT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,QAIdoE,OAAM,SAAAC,GACgBA,EAAML,OAAOF,MAAK,SAAA/D,GACnCS,QAAQC,IAAIV,GACZ,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAI,QAAQyD,GACpBb,EAAS,CACP9C,KXhIkB,iBWiIlBT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,WD1CsBqI,CAAY3H,KAC/C4H,YAAa,SAAC5H,GAAD,OAAa2C,EC7EJ,SAAC3C,GAAD,OAAa,SAAA2C,GAErC7C,QAAQC,IAAIC,GACZ,IAAM6C,EAAU,CACZC,OAAQ,MACRC,QAAU,CAAC,cAAgB,SAAS/C,EAAQiG,MAAM,eAAgB,oBAClEjD,KAAMhD,EAAQgD,MAGlBL,EAAS,CACL9C,KX7BsB,iBW8BtBT,WAAU,IAGd+D,MAAM,4DAA4DnD,EAAQuC,GAAG,IAAIM,GAChFO,MAAK,SAAAC,GACJvD,QAAQC,IAAIsD,GACSA,EAASC,OAAOF,MAAK,SAAA/D,GAE1C,GADAS,QAAQC,IAAIV,GACW,MAApBgE,EAASE,OAEVZ,EAAS,CACL9C,KXxCqB,oBWyCrBT,WAAU,EACVY,QAAUX,EACVC,KAAO,QAIb,CACI,IAAIkE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAIyD,GACZb,EAAS,CACP9C,KXtDkB,iBWuDlBT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,WAKdoE,OAAM,SAAAC,GACgBA,EAAML,OAAOF,MAAK,SAAA/D,GACnCS,QAAQC,IAAIV,GACZ,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAI,QAAQyD,GACpBb,EAAS,CACP9C,KXxEkB,iBWyElBT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,WDmBsBsI,CAAY5H,QAItCwC,EApID,SAACrB,GAAW,IAAD,EAEQuE,cAFR,mBAEda,EAFc,KAIfsB,GAJe,KAIJC,iBAAO,OAJH,EAMoB1G,mBAAS,MAN7B,mBAMd2G,EANc,KAMAC,EANA,OAQE5G,mBAAS,MARX,mBAQd/B,EARc,KAQT4I,EARS,OASgB7G,mBAAS,MATzB,mBASd8G,EATc,KASFC,EATE,OAUE/G,oBAAS,GAVX,mBAUdgH,EAVc,KAUTC,EAVS,KAsCrBpE,qBAAU,WACNgE,EAAQ,CACJK,QAAUnH,EAAMmH,QAChBC,MAAQpH,EAAMoH,UAEpB,IASFtE,qBAAU,YACM,IAATmE,GAECP,EAASW,QAAQC,UAEvB,CAACL,IAEHnE,qBAAU,WACN,GAAqB,OAAlB8D,EACH,CACI,IAAI1I,EAAO,CACP4G,MAAQM,EAAQmC,MAChBnG,GAAGwF,GAEP5G,EAAMwG,YAAYtI,GAClB2I,EAAiB,SAEvB,CAACD,IAEH9D,qBAAU,cAER,CAAC5E,IAEH4E,qBAAU,WACN,GAAmB,OAAhBiE,EACH,CACI,IAAIS,EAAU,CACV1C,MAAQM,EAAQmC,MAChBnG,GAAG2F,EACHlF,KAAOC,KAAKC,UAAU7D,IAE1B8B,EAAMyG,YAAYe,GAClBR,EAAe,MACfE,GAAQ,MAEd,CAACH,IAGH,IAAIU,EAAOzH,EAAM0H,IACbC,EAAOF,EAAKG,MAAM,KAChBC,EAAc,IAAIC,KAAKH,EAAK,IAC9BI,EAAc,IAAID,KAAKL,GAC3B,OACI,yBAAK1E,UAAU,SACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,QAAQ,yBAAMK,IAAoB,MAAfpD,EAAMgI,MAAgB3J,IAAU2B,EAAMgI,MAAO1E,IAAI,UAAUC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,QAAQ,SAAUC,OAAO,OAAOqC,aAAa,MAAMiC,cAAe,YAAajI,EAAMkI,MACvN,yBAAKnF,UAAU,aAAcgF,EAAYI,mBAAmB,QAAS,CAAEC,KAAM,UAAUC,OAAO,UAAWC,QAAQ,IAAjH,KAA4HT,EAAYU,iBAExI,yBAAKxF,UAAU,cAEF,IAATkE,EACA,2BAAOuB,IAAK9B,EAAU+B,SAAU,SAAC3E,GAAD,OA1D5BxB,EA0D0C,UA1DtCrB,EA0DgD6C,EAAE4E,OAAOzH,WAzDzE6F,EAAQ,2BACD5I,GADA,kBAEFoE,EAAOrB,KAHD,IAACqB,EAAIrB,GA0DiE8B,UAAU,6BAA6B9B,MAAO/C,EAAKiJ,UAE5H,yBAAKpE,UAAU,gBAAgB/C,EAAMmH,SAGrCnH,EAAM2I,WAAa,yBAAMvF,IAAKpD,EAAM2I,WAAYrF,IAAI,QAAQP,UAAU,mBAAqB,IAG/F,yBAAKA,UAAU,SAAQ,yBAAMC,QAAS,kBA1F9C,SAAkB5B,GAEd,IAAIoG,EAAU,CACV1C,MAAQM,EAAQmC,MAChBnG,GAAGA,EACHS,KAAOC,KAAKC,UAAL,2BACA7D,GADA,IAEHkJ,MAAQpH,EAAMoH,MAAM,MAG5BN,EAAQ,2BACD5I,GADA,IAEHkJ,MAAQpH,EAAMoH,MAAM,KAExBpH,EAAMyG,YAAYe,GA4E8BoB,CAAS5I,EAAMoB,KAAMgC,IAAMpD,EAAMoH,MAAQ,EAAIyB,IAAOC,IAAQxF,IAAI,OAAOC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,QAAQ,SAAUC,OAAO,UAChL3D,EAAMoH,MAAQ,EAAIpH,EAAMoH,MAAM,mBAAqB,4BAEhDhC,EAAQC,WAAarF,EAAMkI,KAAO,8BAAM,0BAAMlF,QAAS,kBAtG/C5B,EAsGgEpB,EAAMoB,QArGtFyF,EAAiBzF,GADrB,IAAoBA,GAsG2E2B,UAAU,aAArD,UAAN,IAAqF,0BAAMC,SAAkB,IAATiE,EAAgB,kBAlGhJ7F,EAkG+JpB,EAAMoB,QAhGnL4F,EAAe5F,GAFnB,IAAkBA,GAkG2K,WAAO8F,GAAQ,IAAQnE,UAAU,cAAsB,IAATkE,EAAgB,OAAS,SAAwB,QEtEjR5F,eAZS,SAAC7C,GAAD,MAAY,CAChCuK,SAAWvK,EAAMU,gBAAgBhB,KACjCoD,QAAU9C,EAAMU,gBAAgBjB,UAChC+K,OAASxK,EAAMa,aAAapB,cAGL,SAACuD,GACxB,MAAO,CACLyH,cAAe,SAACpK,GAAD,OAAa2C,ECnDJ,SAAC3C,GAAD,OAAa,SAAA2C,GAEvC,IAAME,EAAU,CACZC,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAC3B,cAAgB,SAAS/C,EAAQiG,QAIrCtD,EAAS,CACL9C,KbHsB,iBaItBT,WAAU,IAGd+D,MAAM,qDAAqDN,GAC1DO,MAAK,SAAAC,GACJA,EAASC,OAAOF,MAAK,SAAA/D,GACrB,GAAuB,MAApBgE,EAASE,OAERZ,EAAS,CACL9C,KbZmB,oBaanBT,WAAU,EACVY,QAAUX,QAIlB,CACI,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9Bd,EAAS,CACP9C,KbxBkB,iBayBlBT,WAAU,EACVY,QAAUwD,WAKjBE,OAAM,SAAAC,GACDA,EAAML,OAAOF,MAAK,SAAA/D,GAClB,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEbmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE5Bd,EAAS,CACP9C,KbvCkB,iBawClBT,WAAU,EACVY,QAAUwD,WDCqB4G,CAAcpK,QAI1CwC,EAhDK,SAACrB,GAAW,IAAD,EAEAC,mBAAS,MAFT,mBAEpBiJ,EAFoB,KAEbC,EAFa,OAGE5E,cAHF,mBAGpBa,EAHoB,UAyB3B,OApBAtC,qBAAU,WACN,GAAG9C,EAAM+I,SACLI,EAAUnJ,EAAM+I,cAEhB,CACA,IAAM7K,EAAO,CACX4G,MAAQM,EAAQmC,OAElBvH,EAAMiJ,cAAc/K,GAExBS,QAAQC,IAAIoB,EAAM+I,YACpB,CAAC/I,EAAM+I,SAAS/I,EAAMsB,QAAQ4H,IAEhCpG,qBAAU,WACR,IAAM5E,EAAO,CACX4G,MAAQM,EAAQmC,OAElBvH,EAAMiJ,cAAc/K,KACpB,CAAC8B,EAAMgJ,SAGJ,8BACmB,IAAlBhJ,EAAMsB,QAAmB,kBAAC,EAAD,MAAuB,OAAX4H,EAAkB,GAAKA,EAAOE,MAAM,GAAGC,UAAUC,KAAI,SAAAC,GAC5F,OAAO,kBAAC,EAAD,CAAOjH,IAAKiH,EAAMnI,GAAIA,GAAImI,EAAMnI,GAAI+F,QAASoC,EAAMpC,QAASC,MAAOmC,EAAMnC,MAAOM,IAAK6B,EAAMC,cAAetB,KAAMqB,EAAMrB,KAAKlD,SAAUgD,MAAOuB,EAAME,cAAed,WAAYY,EAAMvB,eEpC5LtG,EAAU,CACZC,OAAQ,MACRC,QAAS,CAAE,eAAgB,qBC+ChBP,eAZS,SAAC7C,GAAD,MAAY,CAChCkL,UAAYlL,EAAMO,iBAAiBb,KACnCoD,QAAU9C,EAAMO,iBAAiBd,UACjC+K,OAASxK,EAAMa,aAAapB,cAGL,SAACuD,GACxB,MAAO,CACLmI,eAAgB,kBAAMnI,GDxCS,SAAAA,GAEjCA,EAAS,CACL9C,KdLuB,kBcMvBT,WAAU,IAGd+D,MAAM,uDAAuDN,GAC5DO,MAAK,SAAAC,GACJA,EAASC,OAAOF,MAAK,SAAA/D,GACrB,GAAuB,MAApBgE,EAASE,OAERZ,EAAS,CACL9C,KddoB,qBcepBT,WAAU,EACVY,QAAUX,QAIlB,CACI,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9Bd,EAAS,CACP9C,Kd1BmB,kBc2BnBT,WAAU,EACVY,QAAUwD,WAKjBE,OAAM,SAAAC,GACDA,EAAML,OAAOF,MAAK,SAAA/D,GAClB,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEbmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE5Bd,EAAS,CACP9C,KdzCmB,kBc0CnBT,WAAU,EACVY,QAAUwD,iBCCPhB,EA1CM,SAACrB,GAAW,IAAD,EAEDC,mBAAS,MAFR,mBAErBiJ,EAFqB,KAEdC,EAFc,KAmB5B,OAfArG,qBAAU,WACH9C,EAAM0J,WACLP,EAAUnJ,EAAM0J,WAChB/K,QAAQC,IAAIoB,EAAM0J,YAGlB1J,EAAM2J,mBAEZ,CAAC3J,EAAM0J,UAAU1J,EAAMsB,QAAQ4H,IAEjCpG,qBAAU,WACN9C,EAAM2J,mBACR,CAAC3J,EAAMgJ,SAIJ,8BACmB,IAAlBhJ,EAAMsB,QAAmB,kBAAC,EAAD,MAAuB,OAAX4H,EAAkB,GAAKA,EAAOE,MAAM,GAAGC,UAAUC,KAAI,SAAAC,GAC5F,OAAO,kBAAC,EAAD,CAAOjH,IAAKiH,EAAMnI,GAAIA,GAAImI,EAAMnI,GAAI+F,QAASoC,EAAMpC,QAASC,MAAOmC,EAAMnC,MAAOM,IAAK6B,EAAMC,cAAetB,KAAMqB,EAAMrB,KAAKlD,SAAUgD,MAAOuB,EAAME,cAAed,WAAYY,EAAMvB,eCvBpL4B,GAAc,SAACvL,GAAD,OAAa,SAAAmD,GACrCA,EAAS,CACF9C,KhBmBkB,gBgBlBlBG,SAAWR,MC0DPgD,gBAbS,SAAC7C,GAAD,MAAY,CAChCJ,KAAOI,EAAMW,kBAAkBf,KAC/BC,QAAUG,EAAMW,kBAAkBd,YAGX,SAACmD,GACxB,MAAO,CACLqI,OAAQ,kBAAMrI,GVEQ,SAAAA,GAC1BA,EAAS,CACP9C,KPhDkB,SOiDlBT,WAAU,QUJR6L,gBAAiB,SAACjL,GAAD,OAAa2C,GD/DHpD,EC+D4BS,ED/DnB,SAAA2C,GACrCA,EAAS,CACF9C,KhBwBqB,oBgBvBrBG,SAAWT,OAHS,IAACA,GCgE3BwL,YAAa,SAAC/K,GAAD,OAAa2C,EAASoI,GAAY/K,QAItCwC,EA7DC,SAACrB,GAAW,IAAD,EAEA+J,qBAAWlK,GAFX,KAEhBK,KAFgB,EAEXC,QAE8BoE,eAJnB,mBAIhBa,EAJgB,KAIG4E,GAJH,WA2BvB,OAhBAlH,qBAAU,cAGR,CAAC9C,EAAM5B,KAAK4B,EAAM3B,UAchB,yBAAK0E,UAAU,WACX,yBAAKA,UAAU,kBAAf,YAEyB,OAArBqC,EAAQC,eAA0CC,IAArBF,EAAQC,SAA0B,GAE/D,yBAAKtC,UAAU,aACf,yBAAKC,QAVjB,aAUoCD,UAAU,kBAAlC,aAEsB,IAAlB/C,EAAM3B,QACN,yBAAK2E,QArBrB,WACIhD,EAAM8J,gBAAgB9J,EAAM5B,OAoBa2E,UAAU,kBAAkB/C,EAAM5B,KAAO,YAAc,cAEpF,yBAAK4E,QAnBrB,WACIhD,EAAM4J,YAAY5J,EAAM3B,UAkBgB0E,UAAU,kBAAtC,QAEJ,yBAAKC,QAnCjB,WACIgH,EAAa,QAAQ,CAAEjF,KAAM,MAAO,GACpCiF,EAAa,WAAW,CAAEjF,KAAM,MAAO,GACvC/E,EAAM6J,UAgCwB9G,UAAU,kBAAhC,gBCnCDkH,GAXM,WAAO,IAAD,EACAF,qBAAWlK,GAA3BK,EADgB,EAChBA,KADgB,EACXC,QAEZ,OACI,yBAAK4C,UAAU,gBACX,2BAAOA,UAAU,cAAcmH,YAAY,WAC1ChK,EAAO,8BAAU6C,UAAU,UAAUoH,KAAK,MAAkB,KCG1DC,GARI,WACf,OACI,6BACI,yBAAKrH,UAAU,aAAaK,IAAK/E,Q,oBC6E9BgD,gBAXS,SAAC7C,GAAD,MAAY,CAChC8C,QAAU9C,EAAMa,aAAapB,cAGN,SAACuD,GACxB,MAAO,CACL6I,YAAa,SAACxL,GAAD,OAAa2C,ET9EJ,SAAC3C,GAAD,OAAa,SAAA2C,GAErC7C,QAAQC,IAAIC,GACZ,IAAM6C,EAAU,CACZC,OAAQ,OACRC,QAAU,CAAC,cAAgB,SAAS/C,EAAQiG,OAC5CjD,KAAMhD,EAAQX,MAGlBsD,EAAS,CACL9C,KX+ByB,oBW9BzBT,WAAU,IAGd+D,MAAM,qDAAqDN,GAC1DO,MAAK,SAAAC,GACJvD,QAAQC,IAAIsD,GACSA,EAASC,OAAOF,MAAK,SAAA/D,GAE1C,GADAS,QAAQC,IAAIV,GACW,MAApBgE,EAASE,OAEVZ,EAAS,CACL9C,KXoBwB,uBWnBxBT,WAAU,EACVY,QAAUX,EACVC,KAAO,QAIb,CACI,IAAIkE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAIyD,GACZb,EAAS,CACP9C,KXMqB,oBWLrBT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,WAKdoE,OAAM,SAAAC,GACgBA,EAAML,OAAOF,MAAK,SAAA/D,GACnCS,QAAQC,IAAIV,GACZ,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAI,QAAQyD,GACpBb,EAAS,CACP9C,KXZqB,oBWarBT,WAAU,EACVY,QAAUwD,EACVlE,KAAO,WSoBsBkM,CAAYxL,KAC/C+K,YAAa,SAAC/K,GAAD,OAAa2C,EAASoI,GAAY/K,QAItCwC,EAzEE,SAACrB,GAAW,IAAD,EAEDC,mBAAS,MAFR,mBAEjB/B,EAFiB,KAEZ4I,EAFY,OAGKvC,cAHL,mBAGjBa,EAHiB,UAKxBtC,qBAAU,cAER,CAAC5E,IAEH,IAeMoM,EAAS,SAAChI,EAAIrB,GAChB6F,EAAQ,2BACD5I,GADA,kBAEFoE,EAAOrB,MAQhB,OACI,yBAAK8B,UAAU,aACQ,IAAlB/C,EAAMsB,QACP,kBAAC,EAAD,MAEA,yBAAKiC,MAAO,CAACG,QAAQ,SACpB,yBAAKH,MAAO,CAACgH,OAAO,WAAYvH,QAAS,WAT9ChD,EAAM4J,YAAY5J,EAAM3B,WAUpB,kBAAC,GAAD,OAEA,0BAAMmM,MAAM,gBACZ,8BAAUpJ,GAAG,eAAeqH,SAAU,SAAC3E,GAAD,OAAOwG,EAAO,UAAUxG,EAAE4E,OAAOzH,QAAQ4C,KAAK,UAAUsG,KAAK,IAAIM,KAAK,KAAKP,YAAY,oBAAoBnH,UAAU,aAC3J,8BACA,2BAAOrE,KAAK,OACL0C,GAAG,YACH2B,UAAY,cACZ0F,SAAW,SAAC3E,GAAD,OAAOwG,EAAO,QAAQxG,EAAE4E,OAAOgC,MAAM,OAEvD,2BAAO3H,UAAU,cAAc4H,QAAQ,aAAY,yBAAKvH,IAAKwH,KAAYrH,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,QAAQ,SAAUC,OAAO,WACvI,2BAAOZ,UAAU,YAAYC,QAAS,SAAAc,GAAC,OA5C7B,SAACA,GACfA,EAAEC,iBACF,IAAI8G,EAAY,IAAIC,SACpB,IAAI,IAAIxI,KAAOpE,EAEX2M,EAAUE,OAAOzI,EAAKpE,EAAKoE,IAE/B3D,QAAQC,IAAIiM,GACZ,IAAIrD,EAAU,CACVtJ,KAAO2M,EACP/F,MAAQM,EAAQmC,OAEpBvH,EAAMqK,YAAY7C,GAgC6BwD,CAAUlH,IAAKpF,KAAK,SAASuC,MAAO,gB,oBC2D5EI,gBAZS,SAAC7C,GAAD,MAAY,CAChCH,QAAUG,EAAMY,eAAelB,KAC/BoD,QAAU9C,EAAMY,eAAenB,cAGR,SAACuD,GACxB,MAAO,CACLyJ,aAAc,SAACpM,GAAD,OAAa2C,ECpHJ,SAAC3C,GAAD,OAAa,SAAA2C,GAEtC7C,QAAQC,IAAIC,GAMZ2C,EAAS,CACL9C,KtBqBwB,mBsBpBxBT,WAAU,IAGd+D,MAAM,2DAA2DnD,EAAQmG,SAAS,IAVlE,CACZrD,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAS9BK,MAAK,SAAAC,GACJA,EAASC,OAAOF,MAAK,SAAA/D,GACrB,GAAuB,MAApBgE,EAASE,OAERzD,QAAQC,IAAIV,GACZsD,EAAS,CACL9C,KtBWqB,sBsBVrBT,WAAU,EACVY,QAAUX,QAIlB,CACI,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAIyD,GACZb,EAAS,CACP9C,KtBFoB,mBsBGpBT,WAAU,EACVY,QAAUwD,WAKjBE,OAAM,SAAAC,GACDA,EAAML,OAAOF,MAAK,SAAA/D,GAClB,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEbmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE5B3D,QAAQC,IAAIyD,GACZb,EAAS,CACP9C,KtBlBoB,mBsBmBpBT,WAAU,EACVY,QAAUwD,WDgEoB4I,CAAapM,KACjDqM,cAAe,SAACrM,GAAD,OAAa2C,EC3DJ,SAAC3C,GAAD,OAAa,SAAA2C,GAEzC7C,QAAQC,IAAIC,GACZ,IAAM6C,EAAU,CACZC,OAAQ,MACRC,QAAU,CAAC,cAAgB,SAAS/C,EAAQiG,OAC5CjD,KAAMhD,EAAQX,MAGlBsD,EAAS,CACL9C,KtBlC0B,mBsBmC1BT,WAAU,IAGd+D,MAAM,2DAA2DnD,EAAQmG,SAAS,IAAItD,GACrFO,MAAK,SAAAC,GACJA,EAASC,OAAOF,MAAK,SAAA/D,GACrB,GAAuB,MAApBgE,EAASE,OAERzD,QAAQC,IAAIV,GACZsD,EAAS,CACL9C,KtB5CuB,sBsB6CvBT,WAAU,EACVY,QAAUX,QAIlB,CACI,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEXmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE9B3D,QAAQC,IAAIyD,GACZb,EAAS,CACP9C,KtBzDsB,mBsB0DtBT,WAAU,EACVY,QAAUwD,WAKjBE,OAAM,SAAAC,GACDA,EAAML,OAAOF,MAAK,SAAA/D,GAClB,IAAImE,EAAM,GACV,IAAI,IAAIC,KAAOpE,EAEbmE,EAAIA,EAAIC,EAAI,IAAIpE,EAAKoE,GAAK,IAE5B3D,QAAQC,IAAIyD,GACZb,EAAS,CACP9C,KtBzEsB,mBsB0EtBT,WAAU,EACVY,QAAUwD,WDMuB6I,CAAcrM,QAI1CwC,EA/GK,SAACrB,GAAW,IAAD,EAEEC,mBAAS,MAFX,mBAEpB5B,EAFoB,KAEZ8M,EAFY,OAGJlL,oBAAS,GAHL,mBAGpBgH,EAHoB,KAGfC,EAHe,OAIJjH,mBAAS,MAJL,mBAIpB/B,EAJoB,KAIf4I,EAJe,OAKEvC,cALF,mBAKpBa,EALoB,UAO3BtC,qBAAU,WACN,GAAG9C,EAAM3B,QACL8M,EAAWnL,EAAM3B,SACjByI,EAAQ,2BACD5I,GADA,IAEHkN,IAAMpL,EAAM3B,QAAQ+M,WAGxB,CACA,IAAMlN,EAAO,CACX8G,SAAWI,EAAQC,UAErBrF,EAAMiL,aAAa/M,GAEvBS,QAAQC,IAAIoB,EAAM3B,WACpB,CAAC2B,EAAM3B,UAETyE,qBAAU,cAER,CAACmE,EAAK/I,IAER,IAoBMoM,EAAS,SAAChI,EAAIrB,GAChB6F,EAAQ,2BACD5I,GADA,kBAEFoE,EAAOrB,MAIhB,OACK,8BAEkB,IAAlBjB,EAAMsB,QAAmB,kBAAC,EAAD,MAAyB,OAAZjD,EAAmB,GAEtD,6BAEY,GAAR4I,EACA,yBAAKlE,UAAU,oBAAoBK,IAAK/E,EAAQ2J,QAEhD,6BACA,yBAAKjF,UAAU,oBAAoBK,IAAK/E,EAAQ2J,QAChD,2BAAOtJ,KAAK,OACL0C,GAAG,YACH2B,UAAY,cACZ0F,SAAW,SAAC3E,GAAD,OAAOwG,EAAO,QAAQxG,EAAE4E,OAAOgC,MAAM,OAEvD,2BAAO3H,UAAU,qBAAqB4H,QAAQ,aAAY,yBAAKvH,IAAKwH,KAAYrH,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,QAAQ,SAAUC,OAAO,YAGlJ,6BACA,yBAAKZ,UAAU,eAAe1E,EAAQ6J,KAAKmD,WAA3C,IAAwDhN,EAAQ6J,KAAKoD,WACrE,yBAAKvI,UAAU,mBAAf,IAAmC1E,EAAQ6J,KAAKlD,UAChD,yBAAKjC,UAAU,gBAAf,IAA+B,yBAAKK,IAAKmI,KAAOhI,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,QAAQ,SAAUC,OAAO,OAAOsE,cAAc,YAAnI,KAAmJ5J,EAAQ6J,KAAKqD,QAEnJ,IAATtE,EACA,6BAAsB,OAAhB5I,EAAQ+M,IAAe,yBAAKrI,UAAU,OAAf,2BAAqD,yBAAKA,UAAU,OAAQ1E,EAAQ+M,MAEjH,6BAAK,2BAAOrI,UAAU,WAAW0F,SAAU,SAAC3E,GAAD,OAAOwG,EAAO,MAAMxG,EAAE4E,OAAOzH,QAAQA,MAAgB,OAAT/C,EAAgB,GAAKA,EAAKkN,IAAK1M,KAAK,OAAOwL,YAAY,+BAElJ,yBAAKnH,UAAU,UACX,6BAAK,8BAAO1E,EAAQmN,WAApB,aACA,6BAAK,8BAAOnN,EAAQoN,WAApB,eAER,yBAAK1I,UAAU,UAAUC,QAAS,YAAgB,IAATiE,EA5DzCC,GAAQ,GAGQ,WAChB,IAAI2D,EAAY,IAAIC,SACpB,IAAI,IAAIxI,KAAOpE,EAEX2M,EAAUE,OAAOzI,EAAKpE,EAAKoE,IAE/B3D,QAAQC,IAAIiM,GACZ,IAAIrD,EAAU,CACVtJ,KAAO2M,EACP/F,MAAQM,EAAQmC,MAChBvC,SAAWI,EAAQC,UAEvBrF,EAAMkL,cAAc1D,GACpBN,GAAQ,GA4CkEwE,MAA4B,IAATzE,EAAiB,OAAS,cE1ChH5F,gBAZS,SAAC7C,GAAD,MAAY,CAChCJ,KAAOI,EAAMW,kBAAkBf,KAC/BC,QAAUG,EAAMW,kBAAkBd,QAClCiD,QAAU9C,EAAMa,aAAapB,cAGN,SAACuD,GACxB,MAAO,KAKIH,EAlDI,SAACrB,GAAW,IAAD,EAEDC,oBAAS,GAFR,mBAEd0L,GAFc,WAa1B,OATA7I,qBAAU,WACRnE,QAAQC,IAAI,QACZ+M,EAAU3L,EAAMsB,WAChB,CAACtB,EAAM5B,KAAK4B,EAAM3B,QAAQ2B,EAAMsB,UAElCwB,qBAAU,eAMN,yBAAKC,UAAU,aAEQ,IAAlB/C,EAAMsB,QACN,kBAAC,EAAD,OAEiB,IAAlBtB,EAAM3B,QACN,6BACA,kBAAC,GAAD,MACC2B,EAAM5B,KACP,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAEA,yBAAKmF,MAAO,CAACqI,QAAQ,WAGrB,kBAAC,GAAD,UCLGC,OArBf,WACI,OACI,6BACI,kBAAC,IAAD,KACA,kBAAC,EAAD,KACA,kBAAC,EAAD,KACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACA,yBAAK9I,UAAU,aACf,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,aCGG+I,OAnBf,WAEE,OACE,yBAAK/I,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QAAf,iBAEF,yBAAKA,UAAU,QACb,yBAAKK,IAAKC,IAAMC,IAAI,OAAOC,MAAO,CAACC,OAAO,QAASC,MAAM,WAD3D,0BAGA,kBAAC,IAAD,KACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCKSsI,OAlBf,WAEE,OACE,6BACE,kBAAC,IAAD,CAAUvM,MAAOA,GACjB,kBAACwM,EAAA,EAAD,KACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOjH,KAAK,SAASkH,OAAK,EAACC,UAAWJ,KACtC,kBAAC,IAAD,CAAO/G,KAAK,IAAIkH,OAAK,EAACC,UAAWL,WCLvBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFzI,SAASC,eAAe,SDyHpB,kBAAmByI,WACrBA,UAAUC,cAAcC,MACrB5K,MAAK,SAAA6K,GACJA,EAAaC,gBAEdxK,OAAM,SAAAC,GACL7D,QAAQ6D,MAAMA,EAAMwK,c","file":"static/js/main.983f8148.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter.91ee1ebe.svg\";","module.exports = __webpack_public_path__ + \"static/media/person.30351fcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.085a38eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.822330c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlikeheart.ea28a43c.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.f2103d04.svg\";","import {FETCH_POSTS,NEW_POST} from '../actions/types';\n\nconst initialState = {\n    items : [],\n    item : {}\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case FETCH_POSTS:\n            console.log('reducer..');\n            return{\n                ...state,\n                items : action.payload\n            }\n        default : \n        return state;\n    }\n}","import {INCREMENT} from '../actions/types';\n\nconst initialState = {\n    count : 1\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case INCREMENT:\n                console.log('reducer..');\n                return{\n                    ...state,\n                    count : action.payload\n                }\n        default : \n        return state;\n    }\n}","import {ALL_TWEETS_LOAD,ALL_TWEETS_SUCCESS,ALL_TWEETS_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case ALL_TWEETS_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case ALL_TWEETS_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case ALL_TWEETS_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        default : \n        return state;\n    }\n}","import {MY_TWEETS_LOAD,MY_TWEETS_SUCCESS,MY_TWEETS_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case MY_TWEETS_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case MY_TWEETS_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case MY_TWEETS_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        default : \n        return state;\n    }\n}","import {LOGIN_LOAD,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n    done : -1,\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case LOGIN_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case LOGIN_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case LOGIN_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case LOGOUT:\n            return{\n                ...state,\n                isLoading : false,\n                data : null,\n                done : -1,\n            }\n        default : \n        return state;\n    }\n}","import {SIGNUP_LOAD,SIGNUP_SUCCESS,SIGNUP_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n    done : -1,\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case SIGNUP_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case SIGNUP_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case SIGNUP_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        default : \n        return state;\n    }\n}","import {CHANGE_TWEET_PAGE,GO_TO_PROFILE} from '../actions/types';\n\nconst initialState = {\n    flag : true,\n    profile : false,\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case CHANGE_TWEET_PAGE:\n                return{\n                    ...state,\n                   flag : action.payload\n                }\n        case GO_TO_PROFILE:\n            return{\n                ...state,\n                profile : action.payload\n            }\n        default : \n        return state;\n    }\n}","import {GET_PROFILE_LOAD,GET_PROFILE_SUCCESS,GET_PROFILE_FAIL,UPD_PROFILE_LOAD,UPD_PROFILE_SUCCESS,UPD_PROFILE_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case GET_PROFILE_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case GET_PROFILE_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case GET_PROFILE_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case UPD_PROFILE_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                    }\n        case UPD_PROFILE_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        case UPD_PROFILE_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        default : \n        return state;\n    }\n}","import {CREATE_TWEET_LOAD,CREATE_TWEET_SUCCESS,CREATE_TWEET_FAIL,UPD_TWEET_LOAD,UPD_TWEET_SUCCESS,UPD_TWEET_FAIL,DEL_TWEET_LOAD,DEL_TWEET_SUCCESS,DEL_TWEET_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case CREATE_TWEET_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case CREATE_TWEET_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case CREATE_TWEET_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case UPD_TWEET_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                    }\n        case UPD_TWEET_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        case UPD_TWEET_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        case DEL_TWEET_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                    }\n        case DEL_TWEET_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        case DEL_TWEET_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        default : \n        return state;\n    }\n}","import {combineReducers} from 'redux';\nimport postReducer from './postReducer';\nimport incrementReducer from './incrementReducer';\nimport allTweetsReducer from './allTweetsListReducer';\nimport myTweetsReducer from './myTweetsListReducer';\nimport loginReducer from './loginReducer';\nimport signupReducer from './signupReducer';\nimport miscActionReducer from './miscActionReducer';\nimport profileReducer from './profileReducer'; \nimport tweetReducer from './tweetReducer';\n\nexport default combineReducers({\n   posts: postReducer, \n   counter : incrementReducer,\n   allTweetsReducer,\n   loginReducer,\n   signupReducer,\n   myTweetsReducer,\n   miscActionReducer,\n   profileReducer,\n   tweetReducer,\n});","export const FETCH_POSTS = 'FETCH_POSTS';\nexport const NEW_POST = 'NEW_POST';\nexport const INCREMENT = 'INCREMENT';\n\n/*Get all Tweets*/\nexport const ALL_TWEETS_LOAD = 'ALL_TWEETS_LOAD';\nexport const ALL_TWEETS_SUCCESS = 'ALL_TWEETS_SUCCESS';\nexport const ALL_TWEETS_FAIL = 'ALL_TWEETS_FAIL';\n\n/*Get my Tweets*/\nexport const MY_TWEETS_LOAD = 'MY_TWEETS_LOAD';\nexport const MY_TWEETS_SUCCESS = 'MY_TWEETS_SUCCESS';\nexport const MY_TWEETS_FAIL = 'MY_TWEETS_FAIL';\n\n/*Login*/\nexport const LOGIN_LOAD = 'LOGIN_LOAD';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\n/*Signup*/\nexport const SIGNUP_LOAD = 'SIGNUP_LOAD';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\n\n/*Switch tweets/my-tweets*/\nexport const CHANGE_TWEET_PAGE = 'CHANGE_TWEET_PAGE';\n/*profile*/\nexport const GO_TO_PROFILE = 'GO_TO_PROFILE';\n\n/*profile*/\nexport const GET_PROFILE_LOAD = 'GET_PROFILE_LOAD';\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\nexport const GET_PROFILE_FAIL = 'GET_PROFILE_FAIL';\n\nexport const UPD_PROFILE_LOAD = 'UPD_PROFILE_LOAD';\nexport const UPD_PROFILE_SUCCESS = 'UPD_PROFILE_SUCCESS';\nexport const UPD_PROFILE_FAIL = 'UPD_PROFILE_FAIL';\n\n\n/*Tweet*/\nexport const CREATE_TWEET_LOAD = 'CREATE_TWEET_LOAD';\nexport const CREATE_TWEET_SUCCESS = 'CREATE_TWEET_SUCCESS';\nexport const CREATE_TWEET_FAIL = 'CREATE_TWEET_FAIL';\n\nexport const UPD_TWEET_LOAD = 'UPD_TWEET_LOAD';\nexport const UPD_TWEET_SUCCESS = 'UPD_TWEET_SUCCESS';\nexport const UPD_TWEET_FAIL = 'UPD_TWEET_FAIL';\n\nexport const DEL_TWEET_LOAD = 'DEL_TWEET_LOAD';\nexport const DEL_TWEET_SUCCESS = 'DEL_TWEET_SUCCESS';\nexport const DEL_TWEET_FAIL = 'DEL_TWEET_FAIL';","import {createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer,initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React, { createContext, useState, useEffect } from 'react';\n\nexport const UtilsContext = createContext();\n\nconst UtilsContextProvider = props => {\n  \n    const [chat,setChat] = useState(false);\n    const [mytweet,setMytweet] = useState(false);\n    const [editTweet,setEditTweet] = useState(null);\n    const [editTweetContent,setEditTweetContent] = useState(null);\n    const [editTweetLikes,setEditTweetLikes] = useState(null);\n    const [loader,setLoader] = useState(false);\n    const [loader2,setLoader2] = useState(false);\n\n  return (\n    <UtilsContext.Provider\n      value={{\n          chat,\n          setChat,\n          mytweet,\n          setMytweet,\n          editTweet,\n          setEditTweet,\n          editTweetContent,\n          setEditTweetContent,\n          editTweetLikes,\n          setEditTweetLikes,\n          loader,\n          setLoader,\n          loader2,\n          setLoader2\n      }}\n    >\n        {props.children}                                                                                                                                                                                                        \n    </UtilsContext.Provider>\n  )\n}\n\nexport default UtilsContextProvider;","import React,{useContext,useState,useEffect} from 'react';\nimport {UtilsContext} from '../contexts/utils';\n\nconst Loader = () =>{\n    return (\n        <div id=\"loader\"></div>\n    );\n}\n\nexport default Loader;","import React,{useState,useEffect} from 'react';\nimport Modal from 'react-modal';\nimport {signup} from '../actions/signupAction';\nimport '../App.css';\nimport { connect } from 'react-redux';\nimport logo from '../assets/twitter.svg'; \nimport Loader from '../components/loader';\n\nfunction Signup(props) {\n\n  const [signupIsOpen,setSignupOpen] = useState(false);\n  const [signupdata,setSignupdata] = useState(null);\n\n  function openSignup (){\n    setSignupOpen(true);\n  }\n\n  function closeSignup(){\n    setSignupOpen(false);\n }\n\n  useEffect(() => {\n    if(signupdata != null)\n    {\n      console.log(signupdata);\n      props.signup(signupdata);\n    }\n  },[signupdata])\n\n  useEffect(() => {\n    if(props.success === 1)\n    {\n      console.log('success');\n    }\n    else\n    {\n      console.log('Profile creation unsuccessful');  \n    }\n  },[props.data]);\n\n  function handleSignupSubmit(e){\n    e.preventDefault();\n    let values = document.getElementById('signup');\n    let inputs = values.querySelectorAll(\"input\");\n    let userinfo = {};\n    for(let data of inputs)\n    {\n      userinfo[data.name] = data.value;\n    }\n    console.log(userinfo);\n    setSignupdata(userinfo);\n    closeSignup();\n  }\n\n  return (\n      <div className=\"App\">\n      <button onClick={openSignup} className=\"signup\">\n        Sign Up\n      </button>\n      <Modal\n          isOpen={signupIsOpen}\n          onRequestClose={closeSignup}\n          className=\"modalStyle\"\n          ariaHideApp={false}\n        >\n          {props.Loading ? <Loader/> : \n          <div>\n           <img src={logo} alt=\"logo\" style={{height:'30px', width:'30px', display:'block', margin:'auto',marginTop:'20px'}}/>\n          <form id=\"signup\" className=\"formStyle\" >\n            <label>First Name</label>\n            <input name=\"first_name\" type=\"text\" />\n            <label>Last Name</label>\n            <input name=\"last_name\" type=\"text\" />\n            <label>Username</label>\n            <input name=\"username\" type=\"text\" />\n            <label>Email</label>\n            <input name=\"email\" type=\"email\" />\n            <label>Password</label>\n            <input name=\"password\" type=\"password\" />\n            <button onClick={e => handleSignupSubmit(e)} className=\"smallbtn\">\n              submit\n            </button>\n          </form>\n          </div> }\n        </Modal>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => ({\n  data : state.signupReducer.data,\n  Loading : state.signupReducer.isLoading,\n  success : state.signupReducer.success,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: (payload) => dispatch(signup(payload)),\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup);","import {SIGNUP_LOAD,SIGNUP_SUCCESS,SIGNUP_FAIL} from './types';\nexport const  signup = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      };\n    \n       dispatch({\n        type:SIGNUP_LOAD,\n        isLoading:true,\n    });\n\n    fetch('https://twitter-clone-mukul.herokuapp.com/users/register/',request)\n    .then(response => {\n      console.log(response);\n      const responseJson = response.json().then(data => {\n      console.log(data); \n      if(response.status === 200)\n      {\n        dispatch({\n            type:SIGNUP_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })        \n      }\n      else\n      {\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log(res);\n          dispatch({\n            type:SIGNUP_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n      }\n    })   \n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          console.log(data);\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log('error'+res)\n          dispatch({\n            type:SIGNUP_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n        })\n    });\n}\n","import React,{useState,useEffect} from 'react';\nimport Modal from 'react-modal';\nimport { Redirect } from 'react-router';\nimport { useSnackbar } from 'react-simple-snackbar';\nimport {Link} from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport {login} from '../actions/loginAction';\n\nimport '../App.css';\nimport logo from '../assets/twitter.svg'; \nimport Loader from '../components/loader';\n\n\nfunction Login(props) {\n  const [cookies, setCookie] = useCookies();\n\n  const [loginIsOpen,setLoginOpen] = useState(false);\n  const [logindata,setLogindata] = useState(null);\n\n  useEffect(() => {\n    if(logindata != null)\n    {\n      console.log(logindata);\n      props.login(logindata);\n    }\n  },[logindata])\n\n  useEffect(() => {\n    if(props.data)\n    {\n      if(props.success === 1)\n      {\n        setCookie('Token', props.data.token, { path: '/' });\n        setCookie('Username', logindata.username, { path: '/' });\n      }\n      else\n      {\n        alert('something went wrong...');\n      }\n      setLogindata(null);\n    }\n  },[props.data])\n\n  function openLogin() {\n    setLoginOpen(true);\n  }\n\n  function closeLogin(){\n    setLoginOpen(false);\n  }\n\n  function handleLoginSubmit(e){\n    e.preventDefault();\n    let values = document.getElementById('login');\n    let inputs = values.querySelectorAll(\"input\");\n    let userinfo = {};\n    for(let data of inputs)\n    {\n      userinfo[data.name] = data.value;\n    }\n    console.log(userinfo);\n    setLogindata(userinfo);\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={openLogin} className=\"login\">\n        Login\n      </button>\n      {props.Loading ? () => closeLogin() : '' }\n        <Modal\n          isOpen={loginIsOpen}\n          onRequestClose={closeLogin}\n          className=\"modalStyle\"\n          ariaHideApp={false}\n        >\n          {props.Loading ? <Loader/> :\n          <div>\n           <img src={logo} alt=\"logo\" style={{height:'30px', width:'30px', display:'block', margin:'auto',marginTop:'20px'}}/>\n          <form id=\"login\" className=\"formStyle\" method=\"POST\">\n            <label>Username</label>\n            <input name=\"username\" type=\"text\" />\n            <label>Password</label>\n            <input name=\"password\" type=\"password\" />\n            <button onClick={e => handleLoginSubmit(e)} className=\"smallbtn\">\n              login\n            </button>\n          </form>\n          </div>\n          }\n        </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  data : state.loginReducer.data,\n  Loading : state.loginReducer.isLoading,  \n  success : state.loginReducer.done,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (payload) => dispatch(login(payload)),\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import {LOGIN_LOAD,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT} from './types';\nexport const  login = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      };\n    \n       dispatch({\n        type:LOGIN_LOAD,\n        isLoading:true,\n    });\n\n    fetch('https://twitter-clone-mukul.herokuapp.com/users/login/',request)\n    .then(response => {\n      console.log(response);\n      const responseJson = response.json().then(data => {\n      console.log(data); \n      if(response.status === 200)\n      {\n        dispatch({\n            type:LOGIN_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })        \n      }\n      else\n      {\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log(res);\n          dispatch({\n            type:LOGIN_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n      }\n    })   \n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          console.log(data);\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log('error'+res)\n          dispatch({\n            type:LOGIN_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n        })\n    });\n}\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type:LOGOUT,\n    isLoading:false,\n});\n}\n","import React from 'react';\nimport logo from '../assets/twitter.svg'; \nimport '../App.css';\nimport Signup from './signup';\nimport Login from './login';\n\nimport { useCookies } from 'react-cookie';\n\nfunction Header(){\n    const [cookies, setCookie] = useCookies();\n    return ( \n            <div className=\"header\">\n            <img src={logo} alt=\"logo\" style={{height:'48px', width:'48px'}}/>\n            {\n                cookies.Username === null || cookies.Username === undefined ? <div className=\"headerContent\">Home</div>:<div className=\"headerContent\">Hey Welcome {cookies.Username}!\n                </div>\n            }\n            {\n                cookies.Username === null || cookies.Username === undefined ?  <Signup/> : ''\n            }\n            {\n                cookies.Username === null || cookies.Username === undefined ?  <Login/> : ''\n            }\n            </div>\n    );\n}\n\nexport default Header;","import React, { createContext, useState, useEffect } from 'react';\nimport { useSnackbar } from 'react-simple-snackbar';\n\nexport const SnackbarContext = createContext();\n\nconst SnackbarContextProvider = props => {\n  \n    const options = {\n        position: 'bottom-right',\n        style: {\n          backgroundColor: '#336600',\n          border: '2px solid #408000',\n          color: 'white',\n          fontSize: '20px',\n          textAlign: 'center',\n          borderRadius: '5px',\n        },\n        closeStyle: {\n          color: 'white',\n          fontSize: '16px',\n        },\n      }\n      \n      const optionsError = {\n          position: 'bottom-right',\n          style: {\n            backgroundColor: '#cc3300',\n            border: '2px solid #e63900',\n            color: 'white',\n            fontSize: '20px',\n            textAlign: 'center',\n            borderRadius: '5px',\n          },\n          closeStyle: {\n            color: 'white',\n            fontSize: '16px',\n          },\n        }\n      \n        const [openSnackbar, closeSnackbar] = useSnackbar(options);\n        const [openErrSnackbar, closeErrSnackbar] = useSnackbar(optionsError);\n    \n\n  return (\n    <SnackbarContext.Provider\n      value={{\n          options,\n          optionsError,\n          openSnackbar,\n          openErrSnackbar,\n          closeSnackbar,\n          closeErrSnackbar,\n      }}\n    >\n        {props.children}                                                                                                                                                                                                        \n    </SnackbarContext.Provider>\n  )\n}\n\nexport default SnackbarContextProvider;\n","import React,{useEffect,useContext,useState,useRef} from 'react';\n\nimport like from '../assets/heart.svg'; \nimport profile from '../assets/person.svg'; \nimport unlike from '../assets/unlikeheart.svg'\nimport {SnackbarContext} from '../contexts/snackbar';\nimport { useCookies } from 'react-cookie';\nimport {UtilsContext} from '../contexts/utils';\n\nimport { connect } from 'react-redux';\nimport {deleteTweet,updateTweet} from '../actions/tweetAction';\n\nimport '../App.css';\n\nconst Tweet = (props) => {\n    \n    const [cookies, setCookie] = useCookies();\n\n    const inputRef = useRef(null);\n\n    const [deleteTweetid,setDeleteTweetid] = useState(null);\n\n    const [data,setData] = useState(null);\n    const [editTweetid,setEditTweetid] = useState(null);\n    const [edit,setEdit] = useState(false);\n\n    function deletePost(id){\n        setDeleteTweetid(id);\n    }\n\n    function editPost(id)\n    {\n        setEditTweetid(id);\n    }\n\n    function likePost(id)\n    {\n        let putdata = {\n            token : cookies.Token,\n            id:id,\n            body : JSON.stringify({\n                ...data,\n                likes : props.likes+1,\n            }),\n        }\n        setData({\n            ...data,\n            likes : props.likes+1,\n        })\n        props.updateTweet(putdata);\n    }\n\n    useEffect(()=>{\n        setData({\n            content : props.content,\n            likes : props.likes,\n        })\n    },[]);\n\n    const change = (key,value) => {\n        setData({\n            ...data,\n            [key] : value,\n        })\n    }\n\n    useEffect(()=>{\n        if(edit === true)\n        {\n            inputRef.current.focus();\n        }\n    },[edit]);\n    \n    useEffect(() => {\n        if(deleteTweetid !== null)\n        {\n            let data = {\n                token : cookies.Token,\n                id:deleteTweetid,\n            }\n            props.deleteTweet(data);   \n            setDeleteTweetid(null);\n        }\n    },[deleteTweetid]);\n\n    useEffect(() => {\n\n    },[data]);\n\n    useEffect(() => {\n        if(editTweetid !== null)\n        {\n            let putdata = {\n                token : cookies.Token,\n                id:editTweetid,\n                body : JSON.stringify(data),\n            }\n            props.updateTweet(putdata);   \n            setEditTweetid(null);\n            setEdit(false);\n        }\n    },[editTweetid]);\n\n\n    let time = props.upd;   \n    let date = time.split('T');\n    const Update_date = new Date(date[0]);\n    let Update_time = new Date(time);\n    return (\n        <div className=\"tweet\">\n          <div className=\"aboveTweet\">\n            <div className=\"user\" ><img  src={props.image == null ? profile : props.image} alt=\"profile\" style={{height:'30px', width:'30px', display:'inline', margin:'auto',borderRadius:'50%',verticalAlign: 'middle'}}/>{props.user}</div>\n            <div className=\"tweetTime\">{ Update_time.toLocaleTimeString('en-US', { hour: 'numeric',minute:'numeric', hour12: true })}, {Update_date.toDateString()}</div>\n            </div>\n            <div className=\"mainTweet\">\n            {\n                edit === true ?\n                <input ref={inputRef} onChange={(e) => change(\"content\",e.target.value)} className=\"mainTweet editTweetcontent\" value={data.content}/>\n                :\n                <div className=\"tweetContent\">{props.content}</div>\n            }\n            {\n                props.post_image ? <img  src={props.post_image} alt=\"image\" className=\"tweetPostImage\"/> : ''\n            }\n            </div>\n            <div className=\"likes\"><img  onClick={() => likePost(props.id)}  src={ props.likes > 0 ? like : unlike} alt=\"like\" style={{height:'30px', width:'30px', display:'inline', margin:'auto'}}/>\n            {props.likes > 0 ? props.likes+' people liked it' : 'Be the first to like this'}\n            {\n                cookies.Username === props.user ? <span><span onClick={() => deletePost(props.id)} className=\"deletebtn\">delete</span> <span onClick={edit === true ? () => editPost(props.id) : () => {setEdit(true)}} className=\"deletebtn\">{edit === true ? 'save' : 'edit'}</span></span> : ''\n            }\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    Loading : state.tweetReducer.isLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      deleteTweet: (payload) => dispatch(deleteTweet(payload)),\n      updateTweet: (payload) => dispatch(updateTweet(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Tweet);","import {CREATE_TWEET_LOAD,CREATE_TWEET_SUCCESS,CREATE_TWEET_FAIL,UPD_TWEET_LOAD,UPD_TWEET_SUCCESS,UPD_TWEET_FAIL,DEL_TWEET_LOAD,DEL_TWEET_SUCCESS,DEL_TWEET_FAIL} from './types';\nexport const  createTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'POST',\n        headers : {'Authorization':'Token '+payload.token},\n        body: payload.data,\n    };\n    \n    dispatch({\n        type:CREATE_TWEET_LOAD,\n        isLoading:true,\n    });\n\n    fetch('https://twitter-clone-mukul.herokuapp.com/mytweet/',request)\n    .then(response => {\n      console.log(response);\n      const responseJson = response.json().then(data => {\n      console.log(data); \n      if(response.status === 200)\n      {\n        dispatch({\n            type:CREATE_TWEET_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })        \n      }\n      else\n      {\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log(res);\n          dispatch({\n            type:CREATE_TWEET_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n      }\n    })   \n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          console.log(data);\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log('error'+res)\n          dispatch({\n            type:CREATE_TWEET_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n        })\n    });\n}\n\nexport const  updateTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'PUT',\n        headers : {'Authorization':'Token '+payload.token,'Content-Type': 'application/json'},\n        body: payload.body,\n    };\n    \n    dispatch({\n        type:UPD_TWEET_LOAD,\n        isLoading:true,\n    });\n\n    fetch('https://twitter-clone-mukul.herokuapp.com/mytweet/update/'+payload.id+'/',request)\n    .then(response => {\n      console.log(response);\n      const responseJson = response.json().then(data => {\n      console.log(data); \n      if(response.status === 200)\n      {\n        dispatch({\n            type:UPD_TWEET_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })        \n      }\n      else\n      {\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log(res);\n          dispatch({\n            type:UPD_TWEET_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n      }\n    })   \n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          console.log(data);\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log('error'+res)\n          dispatch({\n            type:UPD_TWEET_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n        })\n    });\n}\n\nexport const  deleteTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'DELETE',\n        headers : {'Authorization':'Token '+payload.token,},\n    };\n    \n    dispatch({\n        type:DEL_TWEET_LOAD,\n        isLoading:true,\n    });\n\n    fetch('https://twitter-clone-mukul.herokuapp.com/mytweet/delete/'+payload.id+'/',request)\n    .then(response => {\n      console.log(response);\n      if(response.status === 204)\n      {\n        dispatch({\n            type:DEL_TWEET_SUCCESS,\n            isLoading:false,\n            payload : response,\n            done : 1,\n        })        \n      }\n      else\n      {\n          let res = '';\n          for(let key in response)\n          {\n              res=res+key+','+response[key]+'.';\n          }\n          console.log(res);\n          dispatch({\n            type:DEL_TWEET_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n      }\n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          console.log(data);\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log('error'+res)\n          dispatch({\n            type:DEL_TWEET_FAIL,\n            isLoading:false,\n            payload : res,\n            done : 0,\n          })\n        })\n    });\n}\n\n\n","import React,{useEffect,useState} from 'react';\nimport {fetchMyTweets} from '../actions/myTweetsListAction';\nimport { connect } from 'react-redux'\n\nimport '../App.css';\n\nimport Tweet from '../components/tweet';\nimport Loader from '../components/loader';\nimport { useCookies } from 'react-cookie';\n\nconst MyTweetList = (props) => {\n   \n    const [tweets,setTweets] = useState(null);\n    const [cookies, setCookie] = useCookies();\n\n    useEffect(() => {\n        if(props.myTweets){\n            setTweets(props.myTweets)\n        }\n        else{\n            const data = {\n              token : cookies.Token,\n            }\n            props.fetchMyTweets(data);\n        }\n        console.log(props.myTweets);\n    },[props.myTweets,props.Loading,tweets]);\n\n    useEffect(() => {\n      const data = {\n        token : cookies.Token,\n      }\n      props.fetchMyTweets(data);\n    },[props.update]);\n\n    return(\n         <div>\n         {props.Loading === true ? <Loader/> : tweets === null ? '' : tweets.slice(0).reverse().map(tweet => {\n        return <Tweet key={tweet.id} id={tweet.id} content={tweet.content} likes={tweet.likes} upd={tweet.updation_date} user={tweet.user.username} image={tweet.profile_image} post_image={tweet.image}/>;\n      })}\n    </div>\n    );\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    myTweets : state.myTweetsReducer.data,\n    Loading : state.myTweetsReducer.isLoading,\n    update : state.tweetReducer.isLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchMyTweets: (payload) => dispatch(fetchMyTweets(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MyTweetList);\n","import { Cookies } from 'react-cookie';\nimport {MY_TWEETS_LOAD,MY_TWEETS_SUCCESS,MY_TWEETS_FAIL} from './types';\n\nexport const  fetchMyTweets = (payload) => dispatch => {\n    \n    const request = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json',\n        'Authorization':'Token '+payload.token,\n        },\n    };\n\n    dispatch({\n        type:MY_TWEETS_LOAD,\n        isLoading:true,\n    });\n\n    fetch('https://twitter-clone-mukul.herokuapp.com/mytweet/',request)\n    .then(response => {\n      response.json().then(data => {\n      if(response.status === 200)\n      {\n          dispatch({\n              type:MY_TWEETS_SUCCESS,\n              isLoading:false,\n              payload : data,\n          })\n      }\n      else\n      {\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          dispatch({\n            type:MY_TWEETS_FAIL,\n            isLoading:false,\n            payload : res,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(data => {\n          let res = '';\n          for(let key in data)\n          {\n            res=res+key+','+data[key]+'.';\n          }\n          dispatch({\n            type:MY_TWEETS_FAIL,\n            isLoading:false,\n            payload : res,\n          })\n        })\n    });\n}\n","import {ALL_TWEETS_LOAD,ALL_TWEETS_SUCCESS,ALL_TWEETS_FAIL} from './types';\n\nconst request = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json'},\n};\n\nexport const  fetchAllTweets = () => dispatch => {\n    \n    dispatch({\n        type:ALL_TWEETS_LOAD,\n        isLoading:true,\n    });\n\n    fetch('https://twitter-clone-mukul.herokuapp.com/alltweets/',request)\n    .then(response => {\n      response.json().then(data => {\n      if(response.status === 200)\n      {\n          dispatch({\n              type:ALL_TWEETS_SUCCESS,\n              isLoading:false,\n              payload : data,\n          })\n      }\n      else\n      {\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          dispatch({\n            type:ALL_TWEETS_FAIL,\n            isLoading:false,\n            payload : res,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(data => {\n          let res = '';\n          for(let key in data)\n          {\n            res=res+key+','+data[key]+'.';\n          }\n          dispatch({\n            type:ALL_TWEETS_FAIL,\n            isLoading:false,\n            payload : res,\n          })\n        })\n    });\n}\n","import React,{useEffect,useState} from 'react';\nimport {fetchAllTweets} from '../actions/allTweetsListAction';\nimport { connect } from 'react-redux'\n\nimport '../App.css';\n\nimport Tweet from '../components/tweet';\nimport Loader from '../components/loader';\n\nconst AllTweetList = (props) => {\n   \n    const [tweets,setTweets] = useState(null);\n\n    useEffect(() => {\n        if(props.allTweets){\n            setTweets(props.allTweets)\n            console.log(props.allTweets);\n        }\n        else{\n            props.fetchAllTweets();\n        }\n    },[props.allTweets,props.Loading,tweets]);\n\n    useEffect(() => {\n        props.fetchAllTweets();\n    },[props.update]);\n\n\n    return(\n         <div>\n         {props.Loading === true ? <Loader/> : tweets === null ? '' : tweets.slice(0).reverse().map(tweet => {\n        return <Tweet key={tweet.id} id={tweet.id} content={tweet.content} likes={tweet.likes} upd={tweet.updation_date} user={tweet.user.username} image={tweet.profile_image} post_image={tweet.image}/>;\n      })}\n    </div>\n    );\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    allTweets : state.allTweetsReducer.data,\n    Loading : state.allTweetsReducer.isLoading,\n    update : state.tweetReducer.isLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchAllTweets: () => dispatch(fetchAllTweets()),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AllTweetList);\n","import {CHANGE_TWEET_PAGE,GO_TO_PROFILE} from './types';\nexport const  changeTweetPage = (flag) => dispatch => {\n     dispatch({\n            type:CHANGE_TWEET_PAGE,\n            payload : !flag,\n        });\n}\n\nexport const  goToProfile = (profile) => dispatch => {\n    dispatch({\n           type:GO_TO_PROFILE,\n           payload : !profile,\n       });\n}","import React,{useContext,useEffect} from 'react';\nimport { useCookies } from 'react-cookie';\nimport {UtilsContext} from '../contexts/utils';\nimport {logout} from '../actions/loginAction';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { changeTweetPage, goToProfile } from '../actions/miscAction';\n\nconst Sidebar = (props) => {\n\n    const {chat,setChat} = useContext(UtilsContext);\n\n    const [cookies, setCookie,removeCookie] = useCookies();\n\n    function logout(){\n        removeCookie('Token',{ path: '/' },-1);\n        removeCookie('Username',{ path: '/' },-1);\n        props.logout();\n    }\n    useEffect(()=>{\n\n        \n    },[props.flag,props.profile])\n\n    function goTomytweets(){\n        props.changeTweetPage(props.flag);\n    }\n\n    function gotoProfile(){\n        props.goToProfile(props.profile);\n    }\n\n    function showChat(){\n        //setChat(!chat);\n    }\n    return(\n        <div className=\"sidebar\">\n            <div className=\"sidebarOptions\">#Explore</div>\n            {\n                cookies.Username === null || cookies.Username === undefined ?  '' \n                :\n                <div className=\"mobileSec\">\n                <div onClick={showChat} className=\"sidebarOptions\">Messages</div>\n                {\n                    props.profile === false ?\n                    <div onClick={goTomytweets}  className=\"sidebarOptions\">{props.flag ? 'My tweets' : 'All tweets'}</div>\n                    :\n                    <div onClick={gotoProfile}  className=\"sidebarOptions\">Home</div>\n                }\n                <div onClick={logout} className=\"sidebarOptions\">log out</div>\n                </div>\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    flag : state.miscActionReducer.flag,\n    profile : state.miscActionReducer.profile,\n  })\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      logout: () => dispatch(logout()),\n      changeTweetPage: (payload) => dispatch(changeTweetPage(payload)),\n      goToProfile: (payload) => dispatch(goToProfile(payload)),\n    };\n  };\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(Sidebar);","import React,{useContext} from 'react';\nimport {UtilsContext} from '../contexts/utils';\nimport '../App.css';\nconst RightSidebar = () => {\n    const {chat,setChat} = useContext(UtilsContext);\n\n    return(\n        <div className=\"rightSidebar\">\n            <input className=\"searchTweet\" placeholder=\"Search\"/>\n            {chat ? <textarea className=\"message\" rows=\"5\"></textarea> : ''}\n        </div>\n    );\n}\n\nexport default RightSidebar;\n","import React from 'react';\n\nimport profile from '../assets/person.svg'; \n\nconst ProfilePic = () =>{\n    return (\n        <div>\n            <img className=\"profilePic\" src={profile}/>\n        </div>\n    );\n}\n\nexport default ProfilePic;","import React,{useState,useEffect} from 'react';\nimport ProfilePic from '../components/profilePic'\nimport addPicture from '../assets/add.svg'\nimport { connect } from 'react-redux'\nimport Loader from '../components/loader';\nimport { useCookies } from 'react-cookie';\nimport {goToProfile} from '../actions/miscAction'\nimport '../App.css';\n\nimport {createTweet} from '../actions/tweetAction';\n\nconst TweetBox = (props) => {\n\n    const [data,setData] = useState(null);\n    const [cookies, setCookie] = useCookies();\n\n    useEffect(()=>{\n\n    },[data]);\n\n    const postTweet = (e) => {\n        e.preventDefault();\n        let form_data = new FormData();\n        for(let key in data)\n        {\n            form_data.append(key, data[key]);\n        }\n        console.log(form_data);\n        let putdata = {\n            data : form_data,\n            token : cookies.Token,\n        }\n        props.createTweet(putdata);\n    }\n\n    const change = (key,value) => {\n        setData({\n            ...data,\n            [key] : value,\n        })\n    }\n\n    const gotoprofile = () => {\n        props.goToProfile(props.profile);\n    }\n\n    return(\n        <div className=\"tweetbox\">\n            {props.Loading === true ? \n            <Loader/>\n            :\n            <div style={{display:'flex'}}>\n             <div style={{cursor:'pointer'}} onClick={() => gotoprofile()}>\n            <ProfilePic />\n            </div>\n            <form class=\"tweetboxform\">\n            <textarea id=\"tweetContent\" onChange={(e) => change(\"content\",e.target.value)} name=\"content\" rows=\"5\" cols=\"30\" placeholder=\"What's happening?\" className=\"textArea\"></textarea>\n            <div></div>\n            <input type=\"file\"\n                   id=\"postImage\"\n                   className = \"imageUpload\"\n                   onChange ={(e) => change(\"image\",e.target.files[0])}\n                    />\n            <label className=\"uploadImage\" htmlFor=\"postImage\"><img src={addPicture} style={{height:'30px', width:'30px', display:'inline', margin:'auto'}}/></label>\n            <input className=\"smallbtn2\" onClick={e => postTweet(e)}  type=\"submit\" value={'Tweet'}/>\n            </form>\n            </div>\n            }\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    Loading : state.tweetReducer.isLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      createTweet: (payload) => dispatch(createTweet(payload)),\n      goToProfile: (payload) => dispatch(goToProfile(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TweetBox);\n","\nimport React,{useEffect,useState} from 'react';\nimport {fetchProfile,updateProfile} from '../actions/profileAction';\nimport '../App.css';\n\nimport email from '../assets/email.svg'\nimport { connect } from 'react-redux'\nimport Loader from '../components/loader';\nimport { useCookies } from 'react-cookie';\nimport addPicture from '../assets/add.svg'\n\n\nconst ProfilePage = (props) => {\n   \n    const [profile,setProfile] = useState(null);\n    const [edit,setEdit] = useState(false);\n    const [data,setData] = useState(null);\n    const [cookies, setCookie] = useCookies();\n\n    useEffect(() => {\n        if(props.profile){\n            setProfile(props.profile)\n            setData({\n                ...data,\n                bio : props.profile.bio,\n            });\n        }\n        else{\n            const data = {\n              username : cookies.Username,\n            }\n            props.fetchProfile(data);\n        }\n        console.log(props.profile);\n    },[props.profile]);\n\n    useEffect(()=>{\n\n    },[edit,data]);\n\n    const editProfile = () => {\n        setEdit(true);\n    }\n\n    const saveProfile = () => {\n        let form_data = new FormData();\n        for(let key in data)\n        {\n            form_data.append(key, data[key]);\n        }\n        console.log(form_data);\n        let putdata = {\n            data : form_data,\n            token : cookies.Token,\n            username : cookies.Username,\n        }\n        props.updateProfile(putdata);\n        setEdit(false);\n    }\n\n    const change = (key,value) => {\n        setData({\n            ...data,\n            [key] : value,\n        })\n    }\n\n    return(\n         <div>\n         {\n         props.Loading === true ? <Loader/> :  profile === null ? '' : \n           \n            <div>\n            {\n                edit == false ?\n                <img className=\"profilePicProfile\" src={profile.image}/>\n                :\n                <div>\n                <img className=\"profilePicProfile\" src={profile.image}/>\n                <input type=\"file\"\n                       id=\"postImage\"\n                       className = \"imageUpload\"\n                       onChange ={(e) => change(\"image\",e.target.files[0])}\n                        />\n                <label className=\"uploadImageProfile\" htmlFor=\"postImage\"><img src={addPicture} style={{height:'30px', width:'30px', display:'inline', margin:'auto'}}/></label>\n                </div>\n            }\n            <div>\n            <div className=\"profileName\">{profile.user.first_name} {profile.user.last_name}</div>\n            <div className=\"profileUsername\">@{profile.user.username}</div>\n            <div className=\"profileEmail\"> <img src={email} style={{height:'20px', width:'20px', display:'inline', margin:'auto',verticalAlign:'middle'}} />  {profile.user.email}</div>\n            {\n                edit === false ?\n                <div>{profile.bio === null ? <div className=\"bio\"> Tell us about yourself</div> : <div className=\"bio\" >{profile.bio}</div>}</div>\n                :\n                <div><input className=\"bioInput\" onChange={(e) => change(\"bio\",e.target.value)} value={data === null ? '' : data.bio} type=\"text\" placeholder=\"Tell us about yourself...\"/></div>\n            }\n            <div className=\"follow\">\n                <div><span>{profile.following}</span>Following</div>\n                <div><span>{profile.followers}</span>Followers </div>\n            </div>\n        <div className=\"editbtn\" onClick={() => {edit === false ? editProfile() : saveProfile() }}>{ edit === false ? 'edit' : 'save'}</div>\n            </div>\n            </div>\n         }\n        </div>\n    );\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    profile : state.profileReducer.data,\n    Loading : state.profileReducer.isLoading\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchProfile: (payload) => dispatch(fetchProfile(payload)),\n      updateProfile: (payload) => dispatch(updateProfile(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ProfilePage);\n","import {GET_PROFILE_LOAD,GET_PROFILE_SUCCESS,GET_PROFILE_FAIL,UPD_PROFILE_LOAD,UPD_PROFILE_SUCCESS,UPD_PROFILE_FAIL} from './types';\n\nexport const  fetchProfile = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json'},\n    };\n    \n    dispatch({\n        type:GET_PROFILE_LOAD,\n        isLoading:true,\n    });\n\n    fetch('https://twitter-clone-mukul.herokuapp.com/users/profile/'+payload.username+'/',request)\n    .then(response => {\n      response.json().then(data => {\n      if(response.status === 200)\n      {\n          console.log(data);\n          dispatch({\n              type:GET_PROFILE_SUCCESS,\n              isLoading:false,\n              payload : data,\n          })\n      }\n      else\n      {\n          let res = '';\n          for(let key in data)\n          {\n              res=res+key+','+data[key]+'.';\n          }\n          console.log(res);\n          dispatch({\n            type:GET_PROFILE_FAIL,\n            isLoading:false,\n            payload : res,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(data => {\n          let res = '';\n          for(let key in data)\n          {\n            res=res+key+','+data[key]+'.';\n          }\n          console.log(res);\n          dispatch({\n            type:GET_PROFILE_FAIL,\n            isLoading:false,\n            payload : res,\n          })\n        })\n    });\n}\n\nexport const  updateProfile = (payload) => dispatch => {\n\n  console.log(payload);\n  const request = {\n      method: 'PUT',\n      headers : {'Authorization':'Token '+payload.token},\n      body: payload.data,\n  };\n  \n  dispatch({\n      type:UPD_PROFILE_LOAD,\n      isLoading:true,\n  });\n\n  fetch('https://twitter-clone-mukul.herokuapp.com/users/profile/'+payload.username+'/',request)\n  .then(response => {\n    response.json().then(data => {\n    if(response.status === 200)\n    {\n        console.log(data);\n        dispatch({\n            type:UPD_PROFILE_SUCCESS,\n            isLoading:false,\n            payload : data,\n        })\n    }\n    else\n    {\n        let res = '';\n        for(let key in data)\n        {\n            res=res+key+','+data[key]+'.';\n        }\n        console.log(res);\n        dispatch({\n          type:UPD_PROFILE_FAIL,\n          isLoading:false,\n          payload : res,\n      })\n    }\n  })   \n  })\n  .catch(error => {\n        error.json().then(data => {\n        let res = '';\n        for(let key in data)\n        {\n          res=res+key+','+data[key]+'.';\n        }\n        console.log(res);\n        dispatch({\n          type:UPD_PROFILE_FAIL,\n          isLoading:false,\n          payload : res,\n        })\n      })\n  });\n}\n","import React,{useEffect,useState} from 'react';\nimport '../App.css';\nimport TweetBox from './tweetbox';\nimport AllTweetList from './alltweetsList';\nimport { connect } from 'react-redux';\nimport MyTweetList from './mytweetList';\nimport ProfilePage from './profilePage';\nimport Loader from '../components/loader';\n\nconst MainLayout = (props) => {\n\n  const [update,setUpdate] = useState(false);\n\n    useEffect(()=>{\n      console.log('main');\n      setUpdate(props.Loading)\n    },[props.flag,props.profile,props.Loading]);\n\n    useEffect(() => {\n\n    });\n\n    return(\n\n        <div className=\"mainArea\">\n          {\n             props.Loading === true ?\n             <Loader/> \n             :\n            props.profile === false ?\n            <div>\n            <TweetBox/>\n            {props.flag ?\n            <AllTweetList/>\n            :\n            <MyTweetList/>\n            }\n            <div style={{padding:'50px'}}></div>\n            </div>\n            :\n            <ProfilePage/>\n          }\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    flag : state.miscActionReducer.flag,\n    profile : state.miscActionReducer.profile,\n    Loading : state.tweetReducer.isLoading,\n  })\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      \n    };\n  };\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(MainLayout);","import React from 'react';\nimport SnackbarProvider from 'react-simple-snackbar';\n\nimport Header from './header';\nimport MainArea from '../components/mainArea';\nimport AllTweetList from './alltweetsList';\nimport Sidebar from './sidebar';\nimport RightSidebar from '../components/rightSidebar';\nimport UtilsContextProvider from '../contexts/utils';\nimport SnackbarContextProvider from '../contexts/snackbar';\n\nimport '../App.css'; \nimport MainLayout from './mainLayout';\n\nfunction Home(){\n    return (\n        <div>\n            <SnackbarProvider>\n            <SnackbarContextProvider>\n            <UtilsContextProvider>\n            <Header/>\n            <SnackbarProvider>\n            <div className=\"dashboard\">\n            <Sidebar/>\n            <MainLayout/>\n            <RightSidebar/>\n            </div>\n            </SnackbarProvider>\n            </UtilsContextProvider>\n            </SnackbarContextProvider>\n            </SnackbarProvider>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport SnackbarProvider from 'react-simple-snackbar';\n\nimport './App.css';\nimport logo from './assets/twitter.svg'; \n\nimport Signup from './containers/signup';\nimport Login from './containers/login';\n\nfunction Newtwitter() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"AppInfo\">\n        <div className=\"Info\"> New Twitter</div>\n      </div>\n      <div className=\"Sign\">\n        <img src={logo} alt=\"logo\" style={{height:'180px', width:'180px'}}/>\n      Join New Twitter today!\n      <SnackbarProvider>\n      <Signup/>\n      <Login/>\n      </SnackbarProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default Newtwitter;","import React from 'react';\nimport { HashRouter as Router,Switch, Route } from \"react-router-dom\";\nimport { CookiesProvider } from 'react-cookie';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport Home from './containers/home';\nimport Newtwitter from './newtwitter';\n\nfunction App() {\n\n  return (\n    <div>\n      <Provider store={store}>\n      <CookiesProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/entry\" exact component={Newtwitter}/>\n          <Route path=\"/\" exact component={Home}/>\n        </Switch>\n      </Router>\n      </CookiesProvider>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}