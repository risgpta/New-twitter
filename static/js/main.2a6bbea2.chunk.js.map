{"version":3,"sources":["reducers/postReducer.js","reducers/incrementReducer.js","reducers/allTweetsListReducer.js","reducers/myTweetsListReducer.js","reducers/loginReducer.js","reducers/signupReducer.js","reducers/miscActionReducer.js","reducers/profileReducer.js","reducers/tweetReducer.js","reducers/likeReducer.js","reducers/index.js","actions/types.js","store.js","actions/baseurl.js","actions/miscAction.js","components/loader.js","containers/signup.js","actions/signupAction.js","containers/login.js","actions/loginAction.js","components/snackbar.js","containers/header.js","contexts/utils.js","components/tweet.js","actions/tweetAction.js","actions/likeAction.js","containers/mytweetList.js","actions/myTweetsListAction.js","containers/alltweetsList.js","actions/allTweetsListAction.js","containers/sidebar.js","firebase.js","components/rightSidebar.js","contexts/snackbar.js","components/profilePic.js","containers/tweetbox.js","containers/profilePage.js","actions/profileAction.js","containers/mainLayout.js","containers/home.js","newtwitter.js","App.js","serviceWorker.js","index.js","assets/twitter.svg","assets/person.svg","assets/target.svg","assets/heart.svg","assets/unlikeheart.svg","assets/screen-player.svg","assets/delete.svg","assets/email.svg"],"names":["initialState","items","item","count","isLoading","tweets","users","data","done","flag","profile","userData","load","open","usernameData","combineReducers","posts","state","action","type","console","log","payload","counter","allTweetsReducer","loginReducer","signupReducer","myTweetsReducer","miscActionReducer","profileReducer","tweetReducer","likeReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","BASE","goToProfile","dispatch","openSnackbar","Loader","id","connect","Loading","success","signup","request","method","headers","body","JSON","stringify","fetch","then","response","json","status","msg","message","catch","err","props","useState","signupIsOpen","setSignupOpen","signupdata","setSignupdata","closeSignup","useEffect","className","onClick","isOpen","onRequestClose","ariaHideApp","src","logo","alt","style","height","width","display","margin","marginTop","name","e","preventDefault","inputs","document","getElementById","querySelectorAll","userinfo","value","username","length","email","password","test","handleSignupSubmit","login","token","localStorage","setItem","user_info","_id","profilePic","loginIsOpen","setLoginOpen","logindata","setLogindata","closeLogin","handleLoginSubmit","Alert","elevation","variant","useStyles","makeStyles","theme","root","spacing","openData","classes","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","logout","getItem","UtilsContext","createContext","UtilsContextProvider","chat","setChat","mytweet","setMytweet","editTweet","setEditTweet","editTweetContent","setEditTweetContent","editTweetLikes","setEditTweetLikes","loader","setLoader","loader2","setLoader2","Provider","children","Likelist","deleteTweet","tweet_id","error","updateTweet","likeTweet","fetchLikeList","inputRef","useRef","deleteTweetid","setDeleteTweetid","setData","editTweetid","setEditTweetid","edit","setEdit","imgV","setImgV","showopt","setshowopt","content","current","focus","putdata","time","upd","date","split","Update_date","Date","Update_time","image_item","time_show","toLocaleTimeString","toLocaleDateString","post_day","distance","getTime","days","Math","floor","hours","minutes","push","parseInt","img","i","vid_item","vid","controls","Options","userid","pimg","user","ref","onChange","key","target","class","like_flag","likePost","like","unlike","cursor","likes","myTweets","Users","update","fetchMyTweets","setTweets","marginBottom","map","tweet","author","likescount","createdAt","comm","commentscount","videolinks","imagelinks","doneLike","fetchAllTweets","getUserData","getUsernameData","setUsers","usersname","page","setPage","user_data","username_data","changeTweetPage","removeItem","goTomytweets","gotoProfile","window","innerWidth","documentElement","clientWidth","show","setShow","undefined","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","imessage","setImessage","wc","setWC","omessage","setOmessage","setUsername","chatid","setChatId","fire","database","on","snapshot","m","val","timestamp","color","tem","includes","sort","a","b","off","textAlign","placeholder","my_id","another_id","alert","mix_id","set","chatbox","authorId","send","SnackbarContext","SnackbarContextProvider","options","position","backgroundColor","border","fontSize","borderRadius","closeStyle","optionsError","useSnackbar","closeSnackbar","openErrSnackbar","closeErrSnackbar","ProfilePic","image","LoginLoading","LoginData","createTweet","multi","setMulti","change","fontFamily","rows","cols","URL","createObjectURL","top","left","cut","files","multiple","pointerEvents","opacity","htmlFor","addPicture","addVideo","form_data","FormData","append","postTweet","fetchProfile","updateProfile","setProfile","bio","verticalAlign","following","followers","d","saveProfile","loadData","onScroll","scrollHeight","scrollTop","clientHeight","handleScroll","padding","Home","Newtwitter","App","CookiesProvider","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2a6bbea2.chunk.js","sourcesContent":["import {FETCH_POSTS,NEW_POST} from '../actions/types';\n\nconst initialState = {\n    items : [],\n    item : {}\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case FETCH_POSTS:\n            console.log('reducer..');\n            return{\n                ...state,\n                items : action.payload\n            }\n        default : \n        return state;\n    }\n}","import {INCREMENT} from '../actions/types';\n\nconst initialState = {\n    count : 1\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case INCREMENT:\n                console.log('reducer..');\n                return{\n                    ...state,\n                    count : action.payload\n                }\n        default : \n        return state;\n    }\n}","import {ALL_TWEETS_LOAD,ALL_TWEETS_SUCCESS,ALL_TWEETS_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    tweets : [],\n    users : [],\n    data : null, \n}\n\nexport default function(state = initialState,action){\n\n    switch(action.type){\n        case ALL_TWEETS_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case ALL_TWEETS_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    tweets : [...initialState.tweets,...action.tweets],\n                    users : [...initialState.users,...action.users],\n                }\n        case ALL_TWEETS_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        default : \n        return state;\n    }\n}","import {MY_TWEETS_LOAD,MY_TWEETS_SUCCESS,MY_TWEETS_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case MY_TWEETS_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case MY_TWEETS_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case MY_TWEETS_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        default : \n        return state;\n    }\n}","import {LOGIN_LOAD,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n    done : 0,\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case LOGIN_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case LOGIN_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case LOGIN_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case LOGOUT:\n            return{\n                ...state,\n                isLoading : false,\n                data : action.payload,\n                done : -1,\n            }\n        default : \n        return state;\n    }\n}","import {SIGNUP_LOAD,SIGNUP_SUCCESS,SIGNUP_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n    done : 0,\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case SIGNUP_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case SIGNUP_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case SIGNUP_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        default : \n        return state;\n    }\n}","import {CHANGE_TWEET_PAGE,GO_TO_PROFILE,USER_DATA,USERNAME_DATA,LOAD_DATA,SNACK_BAR} from '../actions/types';\n\nconst initialState = {\n    flag : true,\n    profile : false,\n    userData : {},\n    load : false,\n    open : {},\n    usernameData : {}\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case CHANGE_TWEET_PAGE:\n                return{\n                    ...state,\n                   flag : action.payload\n                }\n        case GO_TO_PROFILE:\n            return{\n                ...state,\n                profile : action.payload\n            }\n        case USER_DATA:\n            return{\n                ...state,\n                userData : action.payload \n            }\n        case USERNAME_DATA:\n                return{\n                    ...state,\n                    usernameData : action.payload \n                }\n        case LOAD_DATA:\n            return{\n                    ...state,\n                    load : action.payload \n            }\n        case SNACK_BAR:\n            return{\n                    ...state,\n                    open : action.payload \n            }\n        default : \n        return state;\n    }\n}","import {GET_PROFILE_LOAD,GET_PROFILE_SUCCESS,GET_PROFILE_FAIL,UPD_PROFILE_LOAD,UPD_PROFILE_SUCCESS,UPD_PROFILE_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case GET_PROFILE_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case GET_PROFILE_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case GET_PROFILE_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case UPD_PROFILE_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                    }\n        case UPD_PROFILE_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        case UPD_PROFILE_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                    }\n        default : \n        return state;\n    }\n}","import {CREATE_TWEET_LOAD,CREATE_TWEET_SUCCESS,CREATE_TWEET_FAIL,UPD_TWEET_LOAD,UPD_TWEET_SUCCESS,UPD_TWEET_FAIL,DEL_TWEET_LOAD,DEL_TWEET_SUCCESS,DEL_TWEET_FAIL} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null, \n    done: -1, \n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case CREATE_TWEET_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case CREATE_TWEET_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case CREATE_TWEET_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                    done:action.done,\n                }\n        case UPD_TWEET_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                        done:action.done,\n                    }\n        case UPD_TWEET_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        case UPD_TWEET_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        case DEL_TWEET_LOAD:\n                    return{\n                        ...state,\n                        isLoading : true,\n                    }\n        case DEL_TWEET_SUCCESS:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        case DEL_TWEET_FAIL:\n                    return{\n                        ...state,\n                        isLoading : false,\n                        data:action.payload,\n                        done:action.done,\n                    }\n        default : \n        return state;\n    }\n}","import {GET_LIKE_LIST_LOAD,GET_LIKE_LIST_SUCCESS,GET_LIKE_LIST_FAIL,LIKE_TWEET} from '../actions/types';\n\nconst initialState = {\n    isLoading : false,\n    data : null,  \n    flag: null,\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case GET_LIKE_LIST_LOAD:\n                return{\n                    ...state,\n                    isLoading : true,\n                }\n        case GET_LIKE_LIST_SUCCESS:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case GET_LIKE_LIST_FAIL:\n                return{\n                    ...state,\n                    isLoading : false,\n                    data:action.payload,\n                }\n        case LIKE_TWEET:\n                return{\n                    ...state,\n                    isLoading : false,\n                    flag:action.payload,\n                }\n        default : \n        return state;\n    }\n}","import {combineReducers} from 'redux';\nimport postReducer from './postReducer';\nimport incrementReducer from './incrementReducer';\nimport allTweetsReducer from './allTweetsListReducer';\nimport myTweetsReducer from './myTweetsListReducer';\nimport loginReducer from './loginReducer';\nimport signupReducer from './signupReducer';\nimport miscActionReducer from './miscActionReducer';\nimport profileReducer from './profileReducer'; \nimport tweetReducer from './tweetReducer';\nimport likeReducer from './likeReducer';\n\nexport default combineReducers({\n   posts: postReducer, \n   counter : incrementReducer,\n   allTweetsReducer,\n   loginReducer,\n   signupReducer,\n   myTweetsReducer,\n   miscActionReducer,\n   profileReducer,\n   tweetReducer,\n   likeReducer,\n});","export const FETCH_POSTS = 'FETCH_POSTS';\nexport const NEW_POST = 'NEW_POST';\nexport const INCREMENT = 'INCREMENT';\n\n/*Get all Tweets*/\nexport const ALL_TWEETS_LOAD = 'ALL_TWEETS_LOAD';\nexport const ALL_TWEETS_SUCCESS = 'ALL_TWEETS_SUCCESS';\nexport const ALL_TWEETS_FAIL = 'ALL_TWEETS_FAIL';\n\n/*Get my Tweets*/\nexport const MY_TWEETS_LOAD = 'MY_TWEETS_LOAD';\nexport const MY_TWEETS_SUCCESS = 'MY_TWEETS_SUCCESS';\nexport const MY_TWEETS_FAIL = 'MY_TWEETS_FAIL';\n\n/*Login*/\nexport const LOGIN_LOAD = 'LOGIN_LOAD';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\n/*Signup*/\nexport const SIGNUP_LOAD = 'SIGNUP_LOAD';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\n\n/*Switch tweets/my-tweets*/\nexport const CHANGE_TWEET_PAGE = 'CHANGE_TWEET_PAGE';\n/*profile*/\nexport const GO_TO_PROFILE = 'GO_TO_PROFILE';\n/*user data*/\nexport const USER_DATA = 'USER_DATA';\nexport const USERNAME_DATA = 'USERNAME_DATA';\n\n/*profile*/\nexport const GET_PROFILE_LOAD = 'GET_PROFILE_LOAD';\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\nexport const GET_PROFILE_FAIL = 'GET_PROFILE_FAIL';\n\nexport const UPD_PROFILE_LOAD = 'UPD_PROFILE_LOAD';\nexport const UPD_PROFILE_SUCCESS = 'UPD_PROFILE_SUCCESS';\nexport const UPD_PROFILE_FAIL = 'UPD_PROFILE_FAIL';\n\n\n/*Tweet*/\nexport const CREATE_TWEET_LOAD = 'CREATE_TWEET_LOAD';\nexport const CREATE_TWEET_SUCCESS = 'CREATE_TWEET_SUCCESS';\nexport const CREATE_TWEET_FAIL = 'CREATE_TWEET_FAIL';\n\nexport const UPD_TWEET_LOAD = 'UPD_TWEET_LOAD';\nexport const UPD_TWEET_SUCCESS = 'UPD_TWEET_SUCCESS';\nexport const UPD_TWEET_FAIL = 'UPD_TWEET_FAIL';\n\nexport const DEL_TWEET_LOAD = 'DEL_TWEET_LOAD';\nexport const DEL_TWEET_SUCCESS = 'DEL_TWEET_SUCCESS';\nexport const DEL_TWEET_FAIL = 'DEL_TWEET_FAIL';\n\n/*like*/\nexport const LIKE_TWEET = 'LIKE_TWEET';\n\n/*get like list*/\nexport const GET_LIKE_LIST_LOAD = 'GET_LIKE_LIST_LOAD';\nexport const GET_LIKE_LIST_SUCCESS = 'GET_LIKE_LIST_SUCCESS';\nexport const GET_LIKE_LIST_FAIL = 'GET_LIKE_LIST_FAIL';\n\n/*progressive load*/\nexport const LOAD_DATA = 'LOAD_DATA';\n\n/*snackbar*/\nexport const SNACK_BAR = 'SNACK_BAR';","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer,initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","//export const BASE = 'http://ec2-65-0-45-103.ap-south-1.compute.amazonaws.com:5000';\nexport const BASE = 'https://www.twitterbackend.tk';","import {CHANGE_TWEET_PAGE,GO_TO_PROFILE,USER_DATA,USERNAME_DATA,LOAD_DATA,SNACK_BAR} from './types';\nexport const  changeTweetPage = (flag) => dispatch => {\n     dispatch({\n            type:CHANGE_TWEET_PAGE,\n            payload : !flag,\n        });\n}\n\nexport const  goToProfile = (profile) => dispatch => {\n    dispatch({\n           type:GO_TO_PROFILE,\n           payload : !profile,\n       });\n}\n\nexport const  getUserData = (data) => dispatch => {\n    dispatch({\n           type:USER_DATA,\n           payload : data,\n       });\n}\n\nexport const  getUsernameData = (data) => dispatch => {\n    dispatch({\n           type:USERNAME_DATA,\n           payload : data,\n       });\n}\n\nexport const  loadData = (load) => dispatch => {\n    dispatch({\n           type:LOAD_DATA,\n           payload : !load,\n       });\n}\n\nexport const  openSnackbar = (data) => dispatch => {\n    dispatch({\n           type:SNACK_BAR,\n           payload : data,\n       });\n}","import React from 'react';\n\nconst Loader = () =>{\n    return (\n        <div id=\"loader\"></div>\n    );\n}\n\nexport default Loader;","import React,{useState,useEffect} from 'react';\nimport Modal from 'react-modal';\nimport {signup} from '../actions/signupAction';\nimport {openSnackbar} from '../actions/miscAction';\nimport '../App.css';\nimport { connect } from 'react-redux';\nimport logo from '../assets/twitter.svg'; \nimport Loader from '../components/loader';\n\nfunction Signup(props) {\n\n  const [signupIsOpen,setSignupOpen] = useState(false);\n  const [signupdata,setSignupdata] = useState(null);\n\n  function openSignup (){\n    setSignupOpen(true);\n  }\n\n  function closeSignup(){\n    setSignupOpen(false);\n }\n\n  useEffect(() => {\n    if(signupdata != null)\n    {\n      props.signup(signupdata);\n      if(props.success === 1)\n      {\n        console.log('success');\n      }\n      else\n      {\n        console.log('Profile creation unsuccessful');  \n      }\n    }\n  },[signupdata])\n\n  function handleSignupSubmit(e){\n    e.preventDefault();\n    let values = document.getElementById('signup');\n    let inputs = values.querySelectorAll(\"input\");\n    let userinfo = {};\n    for(let data of inputs)\n    {\n      userinfo[data.name] = data.value;\n    }\n    console.log(userinfo);\n    var regName = /^[a-zA-Z ]*$/;\n    var regNum = /[6789][0-9]{9}/;\n    var regEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(userinfo.username.length === 0)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Username cannot be empty',\n      })\n      return false;\n    }\n    if(userinfo.name.length === 0)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Name cannot be empty',\n      })\n      return false;\n    }\n    if(userinfo.email.length === 0)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Email cannot be empty',\n      })\n      return false;\n    }\n    if(userinfo.password.length < 8 || userinfo.password.length > 32)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Password must have length between 8 and 32',\n      })\n      return false;\n    }\n\n    if(regName.test(userinfo.name) === false)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Invalid Name',\n      })\n      return false;\n    }\n    if(regEmail.test(userinfo.email) === false)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Invalid Email',\n      })\n      return false;\n    }\n    setSignupdata(userinfo);\n    closeSignup();\n  }\n\n  return (\n      <div className=\"App\">\n      <button onClick={openSignup} className=\"signup\">\n        Sign Up\n      </button>\n      <Modal\n          isOpen={signupIsOpen}\n          onRequestClose={closeSignup}\n          className=\"modalStyle\"\n          ariaHideApp={false}\n        >\n          {props.Loading ? <Loader/> : \n          <div className=\"basediv\">\n           <img src={logo} alt=\"logo\" style={{height:'30px', width:'30px', display:'block', margin:'auto',marginTop:'20px'}}/>\n          <form id=\"signup\" className=\"formStyle\" >\n            <label>Name</label>\n            <input name=\"name\" type=\"text\" />\n            <label>Username</label>\n            <input name=\"username\" type=\"text\" />\n            <label>Email</label>\n            <input name=\"email\" type=\"email\" />\n            <label>Password</label>\n            <input name=\"password\" type=\"password\" />\n            <button onClick={e => handleSignupSubmit(e)} className=\"smallbtn\">\n              submit\n            </button>\n          </form>\n          </div> }\n        </Modal>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => ({\n  data : state.signupReducer.data,\n  Loading : state.signupReducer.isLoading,\n  success : state.signupReducer.done,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: (payload) => dispatch(signup(payload)),\n    openSnackbar : (payload) => dispatch(openSnackbar(payload))\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup);","import {SIGNUP_LOAD,SIGNUP_SUCCESS,SIGNUP_FAIL,SNACK_BAR} from './types';\nimport {BASE} from './baseurl';\nexport const  signup = (payload) => dispatch => {\n    const request = {\n        method: 'POST',\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         },\n        body: JSON.stringify(payload)\n      };\n    \n       dispatch({\n        type:SIGNUP_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/auth/register/`,request)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data); \n      if(data.status === 200)\n      {\n        dispatch({\n            type:SIGNUP_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        }) \n        dispatch({\n          type:SNACK_BAR,\n          payload : {\n            type:1,\n            msg:\"registered!\",\n          }\n        })        \n      }\n      else\n      {\n          dispatch({\n            type:SIGNUP_FAIL,\n            isLoading:false,\n            payload : data,\n            done : -1,\n          })\n          dispatch({\n            type:SNACK_BAR,\n            payload : {\n              type:0,\n              msg:data.message,\n            }\n          }) \n      }\n    })   \n    .catch(err => {\n          console.log(err);\n          dispatch({\n            type:SIGNUP_FAIL,\n            isLoading:false,\n            payload : err,\n            done : 0,\n          })\n          dispatch({\n            type:SNACK_BAR,\n            payload : {\n              type:0,\n              msg:err.message,\n            }\n          }) \n    });\n}\n","import React,{useState,useEffect} from 'react';\nimport Modal from 'react-modal';\nimport {Link} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport {login,gotInfo} from '../actions/loginAction';\nimport {openSnackbar} from '../actions/miscAction';\n\nimport '../App.css';\nimport logo from '../assets/twitter.svg'; \nimport Loader from '../components/loader';\n\n\nfunction Login(props) {\n  const [loginIsOpen,setLoginOpen] = useState(false);\n  const [logindata,setLogindata] = useState(null);\n\n  function openLogin() {\n    setLoginOpen(true);\n  }\n\n  function closeLogin(){\n    setLoginOpen(false);\n  }\n\n  useEffect(() => {\n    if(logindata != null)\n    {\n      props.login(logindata);\n      closeLogin();\n    }\n  },[logindata])\n\n  useEffect(() => {\n    if(props.data)\n    {\n      if(props.success === -1)\n      {\n        console.log('something went wrong...');\n      }\n      else\n      {\n        console.log('storing info...')\n      }\n    }\n  },[props.Loading]);\n\n  function handleLoginSubmit(e){\n    e.preventDefault();\n    let values = document.getElementById('login');\n    let inputs = values.querySelectorAll(\"input\");\n    let userinfo = {};\n    for(let data of inputs)\n    {\n      userinfo[data.name] = data.value;\n    }\n    console.log(userinfo);\n\n    if(userinfo.username.length === 0)\n    {\n      props.openSnackbar({\n        type : 0,\n        msg : 'Username cannot be empty',\n      })\n      return false;\n    }\n\n    setLogindata(userinfo);\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={openLogin} className=\"login\">\n        Login\n      </button>\n        <Modal\n          isOpen={loginIsOpen}\n          onRequestClose={closeLogin}\n          className=\"modalStyle\"\n          ariaHideApp={false}\n        >\n          {props.Loading ? <Loader/> :\n          <div className=\"basediv\">\n           <img src={logo} alt=\"logo\" style={{height:'30px', width:'30px', display:'block', margin:'auto',marginTop:'20px'}}/>\n          <form id=\"login\" className=\"formStyle\" method=\"POST\">\n            <label>Username</label>\n            <input name=\"username\" type=\"text\" />\n            <label>Password</label>\n            <input name=\"password\" type=\"password\" />\n            <button onClick={e => handleLoginSubmit(e)} className=\"smallbtn\">\n              login\n            </button>\n          </form>\n          </div>\n          }\n        </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  data : state.loginReducer.data,\n  Loading : state.loginReducer.isLoading,  \n  success : state.loginReducer.done,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (payload) => dispatch(login(payload)),\n    openSnackbar : (payload) => dispatch(openSnackbar(payload))\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import {LOGIN_LOAD,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT, SNACK_BAR} from './types';\nimport {BASE} from './baseurl';\nexport const  login = (payload) => dispatch => {\n    const request = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      };\n    \n       dispatch({\n        type:LOGIN_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/auth/login`,request)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      if(data.token)\n      { \n        localStorage.setItem('twitter-token',data.token);\n        localStorage.setItem('userid',data.user_info._id);\n        localStorage.setItem('name',data.user_info.name);\n        localStorage.setItem('username',data.user_info.username);\n        localStorage.setItem('email',data.user_info.email);\n        localStorage.setItem('userPic',data.user_info.profile.profilePic);\n        dispatch({\n            type:LOGIN_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        }) \n        dispatch({\n          type:SNACK_BAR,\n          payload : {\n            type:1,\n            msg:\"logged in!\"\n          }\n        }) \n      } \n      else\n      {\n        dispatch({\n          type:LOGIN_FAIL,\n          isLoading:false,\n          payload : data,\n          done : -1,\n        })\n        dispatch({\n          type:SNACK_BAR,\n          payload : {\n            type:0,\n            msg:data.message,\n          }\n        }) \n      }    \n    })   \n    .catch(err => {\n          console.log(err);\n          dispatch({\n            type:LOGIN_FAIL,\n            isLoading:false,\n            payload : err,\n            done : -1,\n          })\n          dispatch({\n            type:SNACK_BAR,\n            payload : {\n              type:0,\n              msg:err.message,\n            }\n          }) \n    });\n}\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type:LOGOUT,\n    isLoading:false,\n    payload:null,\n});\n}\n","import React,{useState,useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport {openSnackbar} from '../actions/miscAction';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '0%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction CustomizedSnackbars(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    console.log(props.openData);\n    if(props.openData.msg)\n    {\n      setOpen(true);\n    }\n  }, [props.openData])\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={2500} onClose={handleClose}>\n        {\n          props.openData.type === 0 ?\n          <Alert onClose={handleClose} severity=\"error\">\n          {props.openData.msg}\n          </Alert>\n          :\n          props.openData.type === 1 ?\n          <Alert onClose={handleClose} severity=\"success\">\n          {props.openData.msg}\n          </Alert>\n          :\n          props.openData.type === 2 ?\n          <Alert onClose={handleClose} severity=\"warning\">\n          {props.openData.msg}\n          </Alert>\n          :\n          props.openData.type === 3 ?\n          <Alert onClose={handleClose} severity=\"info\">\n          {props.openData.msg}\n          </Alert>\n          :\n          <Alert onClose={handleClose} severity=\"info\">\n          {'Loading...'}\n          </Alert>\n        }\n      </Snackbar>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  success : state.loginReducer.done, \n  openData : state.miscActionReducer.open,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      openSnackbar: (payload) => dispatch(openSnackbar(payload)),\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CustomizedSnackbars);","import React,{useState,useEffect} from 'react';\nimport logo from '../assets/twitter.svg'; \nimport { connect } from 'react-redux';\nimport '../App.css';\nimport Signup from './signup';\nimport Login from './login';\nimport CustomizedSnackbars from '../components/snackbar';\nimport { openSnackbar } from '../actions/miscAction';\n\nfunction Header(props){\n\n    console.log(localStorage.getItem('twitter-token'))\n    return ( \n            <div className=\"header\">\n            <img src={logo} alt=\"logo\" style={{height:'48px', width:'48px'}}/>\n            {\n                !localStorage.getItem('username')  ? <div className=\"headerContent\"></div>:<div className=\"headerContent\">Hey Welcome {localStorage.getItem('username')}! \n                </div>\n            }\n            {\n                !localStorage.getItem('username')  ?  <Signup/> : ''\n            }\n            {\n                !localStorage.getItem('username')  ? <Login/> : ''\n            }\n            <CustomizedSnackbars/>\n            </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.loginReducer.data,\n    logout : state.loginReducer.done, \n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        \n    };\n  };\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(Header);\n","import React, { createContext, useState, useEffect } from 'react';\n\nexport const UtilsContext = createContext();\n\nconst UtilsContextProvider = props => {\n  \n    const [chat,setChat] = useState(false);\n    const [mytweet,setMytweet] = useState(false);\n    const [editTweet,setEditTweet] = useState(null);\n    const [editTweetContent,setEditTweetContent] = useState(null);\n    const [editTweetLikes,setEditTweetLikes] = useState(null);\n    const [loader,setLoader] = useState(false);\n    const [loader2,setLoader2] = useState(false);\n\n  return (\n    <UtilsContext.Provider\n      value={{\n          chat,\n          setChat,\n          mytweet,\n          setMytweet,\n          editTweet,\n          setEditTweet,\n          editTweetContent,\n          setEditTweetContent,\n          editTweetLikes,\n          setEditTweetLikes,\n          loader,\n          setLoader,\n          loader2,\n          setLoader2\n      }}\n    >\n        {props.children}                                                                                                                                                                                                        \n    </UtilsContext.Provider>\n  )\n}\n\nexport default UtilsContextProvider;","import React,{useEffect,useState,useRef} from 'react';\n\nimport like from '../assets/heart.svg'; \nimport profile from '../assets/person.svg'; \nimport unlike from '../assets/unlikeheart.svg'\n\nimport { connect } from 'react-redux';\nimport {deleteTweet,updateTweet} from '../actions/tweetAction';\nimport {likeTweet,fetchLikeList} from '../actions/likeAction';\n\nimport '../App.css';\n\nconst Tweet = (props) => {\n    \n    \n\n    const inputRef = useRef(null);\n\n    const [deleteTweetid,setDeleteTweetid] = useState(null);\n\n    const [data,setData] = useState(null);\n    const [editTweetid,setEditTweetid] = useState(null);\n    const [edit,setEdit] = useState(false);\n\n    const [imgV,setImgV] = useState(0);\n\n    const [showopt,setshowopt] = useState(false);\n\n    function deletePost(id){\n        setDeleteTweetid(id);\n    }\n\n    function editPost(id)\n    {\n        setEditTweetid(id);\n    }\n\n    function likePost(id)\n    {\n        let putdata = {\n            id:id,\n            body : JSON.stringify({\n                flag: props.like_flag ? -1 : 1,\n                _id : id,\n            }),\n        }\n        props.likeTweet(putdata);\n    }\n\n    useEffect(()=>{\n        setData({\n            message : props.content,\n        })\n    },[]);\n\n    const change = (key,value) => {\n        setData({\n            ...data,\n            [key] : value,\n        })\n    }\n\n    useEffect(()=>{\n        if(edit === true)\n        {\n            inputRef.current.focus();\n        }\n    },[edit]);\n    \n    useEffect(() => {\n        if(deleteTweetid !== null)\n        {\n            let data = {\n                token : localStorage.getItem('twitter-token'),\n                tweet_id:deleteTweetid,\n            }\n            props.deleteTweet(data);   \n            setDeleteTweetid(null);\n        }\n    },[deleteTweetid]);\n\n    useEffect(() => {\n\n    },[data]);\n\n    useEffect(() => {\n        if(editTweetid !== null)\n        {\n            let putdata = {\n                token : localStorage.getItem('twitter-token'),\n                tweet_id:editTweetid,\n                body : JSON.stringify(data),\n            }\n            props.updateTweet(putdata);   \n            setEditTweetid(null);\n            setEdit(false);\n        }\n    },[editTweetid]);\n\n    useEffect(() => {\n        if(props.Likelist === null && localStorage.getItem('username'))\n        {\n            let data = {\n                tweet_id:props.id,\n            }\n            props.fetchLikeList(data);\n        }\n    },[props.Likelist])\n\n    let time = props.upd || '';   \n    let date = time.split('T');\n    const Update_date = new Date(date[0]);\n    let Update_time = new Date(time);\n\n    let image_item = [];\n\n    const time_show = [];\n\n    if(props.upd)\n    {\n        console.log(Update_time.toLocaleTimeString());\n        console.log(Update_date.toLocaleDateString('en-US'));\n        \n        let post_day = new Date(Update_date.toLocaleDateString('en-US')+' '+Update_time.toLocaleTimeString());\n        console.log(post_day);\n\n        let today = new Date();\n\n        let distance = today.getTime() - post_day.getTime();\n\n        console.log(distance);\n\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n        var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n        if(days > 0)\n        {\n            if(days > 365)\n            time_show.push(`About ${parseInt(days/365)} year ago`);\n            else if(days > 30)\n            time_show.push(`About ${parseInt(days/30)} month ago`);\n            else\n            time_show.push(`${days} days ago`);\n        }\n        else if(hours > 0)\n        {\n            time_show.push(`${hours}h ago`)\n        }\n        else if(minutes > 0)\n        {\n            time_show.push(`${minutes}m ago`)\n        }\n        else\n        {\n            time_show.push(`a few seconds ago`)\n        }\n        \n    }\n\n    if(props.img && props.img.length)\n    {\n        for(let i=0; i<props.img.length; i++)\n        {\n            image_item.push(\n                imgV === i ?\n                <img  src={props.img[i]} alt=\"image\" className=\"tweetPostImage\"/> \n                :\n                ''\n            );\n        }\n    }\n\n    let vid_item = [];\n\n    if(props.vid)\n    {\n        vid_item.push(<video className=\"videoDiv\"controls>\n        <source src={props.vid} />\n        </video>)\n    }\n\n    const Options = () => {\n        return (\n            <div>\n                <div className=\"dropdown\">\n                <button onClick={() => setshowopt(!showopt)} className=\"dropbtn\">...</button>\n                <div className=\"dropdown-content\">\n                {\n                    showopt === true ?\n                    <div>\n                    {\n                        localStorage.getItem('userid') === props.userid? \n                        <span><div onClick={() => deletePost(props.id)} className=\"deletebtn\">delete</div> <div onClick={edit === true ? () => editPost(props.id) : () => {setEdit(true)}} className=\"deletebtn\">{edit === true ? 'save' : 'edit'}</div></span> \n                        : \n                        <div className=\"deletebtn\">report</div>\n                    }\n                    </div>\n                    :\n                    ''\n                }\n                </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"tweet\">\n          <div className=\"aboveTweet\">\n            <div className=\"user\" ><img  src={props.pimg === null ? profile : props.pimg} alt=\"profile\" className=\"usertweetpic\" />{props.user}</div>\n            <div className=\"tweetTime\">{time_show}</div>\n            <Options/>\n            </div>\n            <div className=\"mainTweet\">\n            {\n                edit === true ?\n                <input ref={inputRef} onChange={(e) => change(\"message\",e.target.value)} className=\"mainTweet editTweetcontent\" value={data.message}/>\n                :\n                <div className=\"tweetContent\">{props.content}</div>\n            }\n            {\n                image_item\n            }\n            {\n                image_item.length > 1 ?\n                <span className=\"slideImage\">\n                {\n                    imgV === 1 || imgV === 2 ?\n                    <a onClick={() => setImgV(imgV-1)} class=\"prev\" >&#10094;</a>\n                    :\n                    ''\n                }\n                {\n                    imgV === 0 || imgV === 1 && image_item.length > 2 ?\n                    <a onClick={() => setImgV(imgV+1)} class=\"next\" >&#10095;</a>\n                    :\n                    ''\n                }\n                </span>\n                :\n                ''\n            }\n            {/*\n                image_item.length > 1?\n                <span>{imgV+1}/{image_item.length}</span>\n                :\n                ''\n            */\n            }\n            {\n                vid_item\n            }\n            </div>\n            <div className=\"likes\"><img  onClick={() => likePost(props.id)}  src={ props.like_flag === true ? like : unlike} alt=\"like\" style={{height:'30px', width:'30px', display:'inline', margin:'auto',cursor:'pointer'}}/>\n            {props.likes > 0 ? props.likes+' people liked it' : 'Be the first to like this'}\n            {/*props.comm > 0 ? props.comm+' people commented on it' : 'Be the first to comment on this'*/}\n            </div>\n        </div>\n    );\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    Loading : state.tweetReducer.isLoading,\n    Likelist : state.likeReducer.data,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      deleteTweet: (payload) => dispatch(deleteTweet(payload)),\n      updateTweet: (payload) => dispatch(updateTweet(payload)),\n      likeTweet: (payload) => dispatch(likeTweet(payload)),\n      fetchLikeList: (payload) => dispatch(fetchLikeList(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Tweet);","import {CREATE_TWEET_LOAD,CREATE_TWEET_SUCCESS,CREATE_TWEET_FAIL,UPD_TWEET_LOAD,UPD_TWEET_SUCCESS,UPD_TWEET_FAIL,DEL_TWEET_LOAD,DEL_TWEET_SUCCESS,DEL_TWEET_FAIL,SNACK_BAR} from './types';\nimport {BASE} from './baseurl';\nexport const  createTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'POST',\n        headers : {'Authorization':'Token '+payload.token},\n        body: payload.data,\n    };\n    \n    dispatch({\n        type:CREATE_TWEET_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet`,request)\n    .then(response => response.json()).then(data => {\n      console.log(data); \n      if(data.status === 200)\n      {\n        dispatch({\n            type:CREATE_TWEET_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })\n        dispatch({\n          type:SNACK_BAR,\n          payload : {\n            type:1,\n            msg:\"Posted!\"\n          }\n        })         \n      }\n      else\n      {\n          dispatch({\n            type:CREATE_TWEET_FAIL,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n          dispatch({\n            type:SNACK_BAR,\n            payload : {\n              type:0,\n              msg:\"Post unsuccessful!\"\n            }\n          }) \n      }\n    })   \n    .catch(err => {\n          dispatch({\n            type:CREATE_TWEET_FAIL,\n            isLoading:false,\n            payload : err,\n            done : 0,\n          })\n    })\n}\n\nexport const  updateTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'PUT',\n        headers : {'Authorization':'Token '+payload.token,'Content-Type': 'application/json'},\n        body: payload.body,\n    };\n    \n    dispatch({\n        type:UPD_TWEET_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet?tweet_id=${payload.tweet_id}`,request)\n    .then(response => {\n      console.log(response);\n      const responseJson = response.json().then(data => {\n      console.log(data); \n      if(response.status === 200)\n      {\n        dispatch({\n            type:UPD_TWEET_SUCCESS,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })        \n      }\n      else\n      {\n          dispatch({\n            type:UPD_TWEET_FAIL,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n      }\n    })   \n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          dispatch({\n            type:UPD_TWEET_FAIL,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n        })\n    });\n}\n\nexport const  deleteTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'DELETE',\n        headers : {'Authorization':'Token '+payload.token,},\n    };\n    \n    dispatch({\n        type:DEL_TWEET_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet?tweet_id=${payload.tweet_id}`,request)\n    .then(response => {\n      console.log(response);\n      if(response.status === 204)\n      {\n        dispatch({\n            type:DEL_TWEET_SUCCESS,\n            isLoading:false,\n            payload : response,\n            done : 1,\n        })        \n      }\n      else\n      {\n          dispatch({\n            type:DEL_TWEET_FAIL,\n            isLoading:false,\n            payload : response,\n            done : 0,\n          })\n      }\n    })\n    .catch(error => {\n      console.log(error);\n          dispatch({\n            type:DEL_TWEET_FAIL,\n            isLoading:false,\n            payload : error,\n            done : 0,\n          })\n    });\n}\n\n\n","import {GET_LIKE_LIST_LOAD,GET_LIKE_LIST_SUCCESS,GET_LIKE_LIST_FAIL,LIKE_TWEET} from './types';\nimport {BASE} from './baseurl';\n\nexport const  fetchLikeList = (payload) => dispatch => {\n\n  let request = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json',\n  },\n};\n\n    dispatch({\n        type:GET_LIKE_LIST_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/tweet-like?_id=${payload.tweet_id}`,request)\n    .then(response => {\n      response.json().then(data => {\n          //console.log(payload.tweet_id);\n          //console.log(data);\n      if(response.status === 200)\n      {\n          dispatch({\n              type:GET_LIKE_LIST_SUCCESS,\n              isLoading:false,\n              payload : data,\n          })\n      }\n      else\n      {\n          dispatch({\n            type:GET_LIKE_LIST_FAIL,\n            isLoading:false,\n            payload : data,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(error=> {\n          dispatch({\n            type:GET_LIKE_LIST_FAIL,\n            isLoading:false,\n            payload : error,\n          })\n        })\n    });\n}\n\nexport const  likeTweet = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json',\n        'Authorization' : 'token '+localStorage.getItem('twitter-token'),\n      },\n        body: payload.body,\n    };\n    \n    dispatch({\n        type:LIKE_TWEET,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/tweet-like`,request)\n    .then(response => {\n      console.log(response);\n      const responseJson = response.json().then(data => {\n      console.log(data); \n      if(response.status === 200)\n      {\n        dispatch({\n            type:LIKE_TWEET,\n            isLoading:false,\n            payload : data,\n            done : 1,\n        })        \n      }\n      else\n      {\n          dispatch({\n            type:LIKE_TWEET,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n      }\n    })   \n    })\n    .catch(error => {\n      const responseJson = error.json().then(data => {\n          dispatch({\n            type:LIKE_TWEET,\n            isLoading:false,\n            payload : data,\n            done : 0,\n          })\n        })\n    });\n}\n","import React,{useEffect,useState} from 'react';\nimport {fetchMyTweets} from '../actions/myTweetsListAction';\nimport { connect } from 'react-redux'\n\nimport '../App.css';\n\nimport Tweet from '../components/tweet';\nimport Loader from '../components/loader';\n\n\nconst MyTweetList = (props) => {\n   \n    const [tweets,setTweets] = useState(null);\n    \n\n    useEffect(() => {\n        if(props.myTweets){\n            setTweets(props.myTweets.message)\n            console.log(props.myTweets.message)\n        }\n        else{\n            props.fetchMyTweets();\n        }\n    },[props.myTweets]);\n\n    useEffect(() => {\n        props.fetchMyTweets();\n    },[props.update]);\n\n\n    return(\n        <div style={{marginBottom : '100px'}}>\n        {props.Loading === true ? <Loader/> : tweets ? tweets.map(tweet => {\n       return <Tweet key={tweet._id} id={tweet._id} userid={tweet.author} content={tweet.message} likes={tweet.likescount} like_flag={tweet.like_flag}  upd={tweet.createdAt} pimg={props.Users[tweet.author].profilePic} user={props.Users[tweet.author].name} comm={tweet.commentscount} vid={tweet.videolinks} img={tweet.imagelinks}/>;\n     }) : ''} \n   </div>\n    );\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    myTweets : state.myTweetsReducer.data,\n    Loading : state.myTweetsReducer.isLoading,\n    Users : state.miscActionReducer.userData,\n    update : state.tweetReducer.isLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchMyTweets: () => dispatch(fetchMyTweets()),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MyTweetList);\n","\nimport {MY_TWEETS_LOAD,MY_TWEETS_SUCCESS,MY_TWEETS_FAIL} from './types';\nimport {BASE} from './baseurl';\n\nexport const  fetchMyTweets = () => dispatch => {\n    \n    console.log('token-',localStorage.getItem('twitter-token'));\n    console.log('userid-',localStorage.getItem('userid'));\n    const request = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json',\n        'Authorization' : 'token '+localStorage.getItem('twitter-token'),\n        },\n    };\n\n    dispatch({\n        type:MY_TWEETS_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/?page=1&userid=${localStorage.getItem('userid')}`,request)\n    .then(response => {\n      response.json().then(data => {\n        console.log(data);\n      if(response.status === 200)\n      {\n          dispatch({\n              type:MY_TWEETS_SUCCESS,\n              isLoading:false,\n              payload : data,\n          })\n      }\n      else\n      {\n          dispatch({\n            type:MY_TWEETS_FAIL,\n            isLoading:false,\n            payload : data,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(error => {\n          dispatch({\n            type:MY_TWEETS_FAIL,\n            isLoading:false,\n            payload : error,\n          })\n        })\n    });\n}\n","import React,{useEffect,useState,useRef} from 'react';\nimport {fetchAllTweets} from '../actions/allTweetsListAction';\nimport { connect } from 'react-redux'\nimport {getUserData,getUsernameData} from '../actions/miscAction'\nimport '../App.css';\n\nimport Tweet from '../components/tweet';\nimport Loader from '../components/loader';\n\nconst AllTweetList = (props) => {\n   \n    const [tweets,setTweets] = useState([]);\n    const [atweets,setaTweets] = useState([]);\n\n    const [users,setUsers] = useState({});\n    const [usersname,setUsersname] = useState({});\n\n    const [page,setPage] = useState(1);\n\n    useEffect(() => {\n        if(props.tweets){\n                    console.log(props.tweets.length);\n                setTweets([...tweets,...props.tweets]);\n                console.log([...tweets,...props.tweets]);\n                //taking data from users\n                let userData = props.users || [];\n                let user_data = {...users};\n                let username_data = {...usersname};\n                for(let item of userData)\n                {\n                    user_data[item._id] = {\n                        \"name\" : item.name,\n                        \"username\" : item.username,\n                        \"profilePic\" : item.profile.profilePic,\n                    }\n\n                    username_data[item.username] = item._id;\n\n                }\n                console.log(user_data);\n                setUsers(user_data);\n                props.getUserData(user_data);\n                props.getUsernameData(username_data);\n        }\n    \n    },[props.tweets]);\n\n    useEffect(() => {\n        //console.log(props.success)\n            if(props.success === 1)\n            props.fetchAllTweets(1);\n    },[props.success]);\n\n    useEffect(() => {\n        setTweets([]);\n        props.fetchAllTweets(1);\n        console.log('upadting...')\n        console.log(props.update)\n    },[props.update,props.doneLike]);\n\n    useEffect(() => {\n        if(props.load === true)\n        {\n            setPage(page+1);\n            props.fetchAllTweets(page+1);\n            \n        }\n    },[props.load]);\n\n\n    return(\n         <div style={{marginBottom : '100px'}} >\n         { tweets ? tweets.map(tweet => {\n        return <div key={tweet._id}> \n        <Tweet key={tweet._id} id={tweet._id} userid={tweet.author} content={tweet.message} like_flag={tweet.like_flag} likes={tweet.likescount} upd={tweet.createdAt} pimg={users[tweet.author] ? users[tweet.author].profilePic : ''} user={users[tweet.author] ? users[tweet.author].name : ''} comm={tweet.commentscount} vid={tweet.videolinks} img={tweet.imagelinks}/>\n        </div>;\n        }) : <Loader/>}\n        {props.Loading  && <Loader/>} \n        </div>\n    );\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    tweets : state.allTweetsReducer.tweets,\n    users : state.allTweetsReducer.users,\n    Loading : state.allTweetsReducer.isLoading,\n    success : state.loginReducer.done, \n    update : state.tweetReducer.done,\n    load : state.miscActionReducer.load,\n    doneLike : state.likeReducer.flag,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchAllTweets: (payload) => dispatch(fetchAllTweets(payload)),\n      getUserData: (payload) => dispatch(getUserData(payload)),\n      getUsernameData: (payload) => dispatch(getUsernameData(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AllTweetList);\n","import {ALL_TWEETS_LOAD,ALL_TWEETS_SUCCESS,ALL_TWEETS_FAIL} from './types';\nimport {BASE} from './baseurl';\nimport { connect } from 'react-redux';\n\nexport const  fetchAllTweets = (payload) => dispatch => {\n\n  let request = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json',\n  },\n};\n\n    if(localStorage.getItem('twitter-token'))\n    {\n        request = {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json',\n          'Authorization' : 'token '+localStorage.getItem('twitter-token'),\n        },\n      };\n    }\n\n    console.log('id',localStorage.getItem('twitter-token'));\n    console.log(request);\n\n    dispatch({\n        type:ALL_TWEETS_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/tweet/alltweets?page=${payload}`,request)\n    .then(response => {\n      response.json().then(data => {\n        console.log(payload);\n        console.log(data);\n      if(response.status === 200)\n      {\n          dispatch({\n              type:ALL_TWEETS_SUCCESS,\n              isLoading:false,\n              tweets : data.message.tweets,\n              users : data.message.users,\n          })\n      }\n      else\n      {\n          dispatch({\n            type:ALL_TWEETS_FAIL,\n            isLoading:false,\n            payload : data,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(error=> {\n          dispatch({\n            type:ALL_TWEETS_FAIL,\n            isLoading:false,\n            payload : error,\n          })\n        })\n    });\n}\n\n\n","import React,{useEffect,useState} from 'react';\nimport {logout} from '../actions/loginAction';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { changeTweetPage, goToProfile } from '../actions/miscAction';\n\n\nconst Sidebar = (props) => {\n\n\n    function logout(){\n        localStorage.removeItem('twitter-token');\n        localStorage.removeItem('userid');\n        localStorage.removeItem('name');\n        localStorage.removeItem('username');\n        localStorage.removeItem('email');\n        localStorage.removeItem('userPic');\n        props.logout();\n    }\n\n    function goTomytweets(){\n        props.changeTweetPage(props.flag);\n    }\n\n    function gotoProfile(){\n        props.goToProfile(props.profile);\n    }\n\n    function message(){\n       console.log('wip');\n    }\n\n    let width = window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth;\n\n    const [show,setShow] = useState(width > 996 ? true : false);\n    const Show = () => {\n        setShow(!show);\n        console.log('sow');\n    }\n\n    return(\n        width < 996 ?\n        <div className=\"sidebarMobile\" onClick={() => Show()}>\n            . . .\n            {\n                show ? \n                <div className=\"sidebarDiv\">\n                <div className=\"sidebarOptions\">#Explore</div>\n                {\n                    localStorage.getItem('username') === null || localStorage.getItem('username') === undefined ?  '' \n                    :\n                    <div className=\"mobileSec\">\n                    <div className=\"sidebarOptions\" onClick={() => message()}>Messages</div>\n                    {\n                        props.profile === false ?\n                        <div onClick={goTomytweets}  className=\"sidebarOptions\">{props.flag ? 'My tweets' : 'All tweets'}</div>\n                        :\n                        <div onClick={gotoProfile}  className=\"sidebarOptions\">Home</div>\n                    }\n                    <div onClick={logout} className=\"sidebarOptions\">log out</div>\n                    </div>\n                }\n                </div>\n            :\n            ''\n            }\n        </div>\n        :\n        <div className=\"sidebar\">\n            <div className=\"sidebarDiv\">\n            <div className=\"sidebarOptions\">#Explore</div>\n            {\n                localStorage.getItem('username') === null || localStorage.getItem('username') === undefined ?  '' \n                :\n                <div className=\"mobileSec\">\n                <div className=\"sidebarOptions\" onClick={() => message()}>Messages</div>\n                {\n                    props.profile === false ?\n                    <div onClick={goTomytweets}  className=\"sidebarOptions\">{props.flag ? 'My tweets' : 'All tweets'}</div>\n                    :\n                    <div onClick={gotoProfile}  className=\"sidebarOptions\">Home</div>\n                }\n                <div onClick={logout} className=\"sidebarOptions\">log out</div>\n                </div>\n            }\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    flag : state.miscActionReducer.flag,\n    profile : state.miscActionReducer.profile,\n    success : state.loginReducer.done, \n    data: state.loginReducer.data, \n    logout : state.loginReducer.done,\n  })\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      logout: () => dispatch(logout()),\n      changeTweetPage: (payload) => dispatch(changeTweetPage(payload)),\n      goToProfile: (payload) => dispatch(goToProfile(payload)),\n    };\n  };\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(Sidebar);","import firebase from 'firebase/app';\nimport 'firebase/database'; \n\nconst config = {\n    apiKey: \"AIzaSyA_Q8j3cYRSgSWO8PvU4OSJ4Kd9n5nqg24\",\n    authDomain: \"testing-speakup.firebaseapp.com\",\n    projectId: \"testing-speakup\",\n    storageBucket: \"testing-speakup.appspot.com\",\n    messagingSenderId: \"630260348505\",\n    appId: \"1:630260348505:web:772c7527762ada2791a348\"\n};\n\nconst app= firebase.initializeApp(config);\n\nexport default app;\n","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux'\nimport '../App.css';\nimport app from '../firebase';\n\nconst RightSidebar = (props) => {\n    const [chat,setChat] = useState(false);\n\n    const [imessage,setImessage] = useState([]);\n    const [wc,setWC] = useState([]);\n    const [omessage,setOmessage] = useState('');\n\n    const [username,setUsername] = useState(null);\n\n    const [chatid,setChatId] = useState(null);\n\n    const bottomRef = useRef(null);\n\n    useEffect(() => {\n\n        console.log(chatid);\n        if(chatid)\n        {\n        const ref = chatid;\n        const fire = app.database().ref(ref);\n        console.log('listening...')\n        let  item = [];\n        fire.on(\"child_added\",function(snapshot){\n            //console.log(wc);\n            const m =snapshot;\n            console.log(m.key+' '+m.val().message);\n            item.push(<div key={m.val().timestamp}><span style={{color:'white'}}>{m.val().author}:  </span>{m.val().message}</div>)\n            let tem = [];\n            if(!wc.includes(m.key))\n            {\n                tem.push(...wc,m.key);\n                setWC(tem);\n                console.log(tem);\n                item.sort(function(a,b){\n                    return a.key - b.key;\n                })\n                console.log(item);\n                setImessage(item);\n                //bottomRef.current.scrollIntoView({ block:'start' })\n                //<div ref={bottomRef} style={{height:'20px'}}></div>\n            }\n        });\n            return () => fire.off(\"child_added\");\n    }\n    },[imessage,chatid]);\n \n    const change = (msg) => {\n        setOmessage(msg);\n    }\n\n    const userchange = (msg) => {\n        setUsername(msg);\n    }\n\n    const send = () => {\n        let chatbox = app.database().ref(chatid);\n        let time = new Date().getTime();\n        console.log(omessage);\n        chatbox.push().set({\n            authorId : localStorage.getItem('userid'),\n            author : localStorage.getItem('username'),\n            message : omessage,\n            timestamp : time\n        })\n        setOmessage('');\n    }\n\n    const set = () => {\n        const my_id = localStorage.getItem('userid');\n        const another_id = props.user[username];\n        if(!props.user[username])\n        {\n            alert('invalid username');\n            return false;\n        }\n        const mix_id = my_id < another_id ? my_id+another_id : another_id+my_id;\n        console.log(my_id);\n        console.log(another_id);\n        console.log(mix_id);\n        setChatId(mix_id);\n        setChat(true);\n    }\n\n    return(\n        localStorage.getItem('twitter-token') && <div style={{textAlign:'center'}} className=\"rightSidebar\">\n            {\n            !chat && <div>\n           <div>Chat Box</div>\n            <input className=\"usernameChat\"onChange={(e) => userchange(e.target.value)} placeholder=\"username\"/>\n                {username && <div className=\"searchTweet\" onClick={()=>set()}>Open Chat for {username}</div>}\n            </div>\n            }\n            {chat && \n            <div>\n                <div>Chat box</div>\n                <div className=\"chatspace\">\n                {imessage}\n                </div>\n                <input className=\"msg\" placeholder=\"message\" value={omessage} onChange={(e) => change(e.target.value)}/>\n                <div className=\"smallbtn\" onClick={() => send()}>send</div>\n            </div>\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    user : state.miscActionReducer.usernameData,\n    logout : state.loginReducer.done,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(RightSidebar);\n\n","import React, { createContext } from 'react';\nimport { useSnackbar } from 'react-simple-snackbar';\n\nexport const SnackbarContext = createContext();\n\nconst SnackbarContextProvider = props => {\n  \n    const options = {\n        position: 'bottom-right',\n        style: {\n          backgroundColor: '#336600',\n          border: '2px solid #408000',\n          color: 'white',\n          fontSize: '20px',\n          textAlign: 'center',\n          borderRadius: '5px',\n        },\n        closeStyle: {\n          color: 'white',\n          fontSize: '16px',\n        },\n      }\n      \n      const optionsError = {\n          position: 'bottom-right',\n          style: {\n            backgroundColor: '#cc3300',\n            border: '2px solid #e63900',\n            color: 'white',\n            fontSize: '20px',\n            textAlign: 'center',\n            borderRadius: '5px',\n          },\n          closeStyle: {\n            color: 'white',\n            fontSize: '16px',\n          },\n        }\n      \n        const [openSnackbar, closeSnackbar] = useSnackbar(options);\n        const [openErrSnackbar, closeErrSnackbar] = useSnackbar(optionsError);\n    \n\n  return (\n    <SnackbarContext.Provider\n      value={{\n          options,\n          optionsError,\n          openSnackbar,\n          openErrSnackbar,\n          closeSnackbar,\n          closeErrSnackbar,\n      }}\n    >\n        {props.children}                                                                                                                                                                                                        \n    </SnackbarContext.Provider>\n  )\n}\n\nexport default SnackbarContextProvider;\n","import React from 'react';\n\nimport profile from '../assets/person.svg'; \n\nconst ProfilePic = (props) =>{\n    return (\n        <div>\n            {\n                props.image ? \n                <img className=\"profilePic\" src={props.image}/>\n                :\n                <img className=\"profilePic\" src={profile}/>\n            }\n        </div>\n    );\n}\n\nexport default ProfilePic;","import React,{useState,useEffect} from 'react';\nimport ProfilePic from '../components/profilePic'\nimport addPicture from '../assets/target.svg'\nimport addVideo from '../assets/screen-player.svg'\nimport cut from '../assets/delete.svg'\nimport { connect } from 'react-redux'\nimport Loader from '../components/loader';\nimport {goToProfile} from '../actions/miscAction'\nimport '../App.css';\n\nimport {createTweet} from '../actions/tweetAction';\nimport {fetchProfile} from '../actions/profileAction';\n\nconst TweetBox = (props) => {\n\n    const [data,setData] = useState(null);\n\n    const [multi,setMulti] = useState(null);\n\n    const [rtdb,setRtdb] = useState(null);\n\n    const postTweet = (e) => {\n        e.preventDefault();\n        let form_data = new FormData();\n\n        form_data.append('message', data['message']);\n\n        if(multi === 'img')\n        {\n            console.log(data['imagelinks'])\n            for(let i=0;i< data['imagelinks'].length;i++)\n            {\n                console.log(data['imagelinks'][i])\n                form_data.append('imagelinks',data['imagelinks'][i]);\n            }\n        }\n        else if(multi === 'vid')\n        {\n            form_data.append('videolinks', data['videolinks']);\n        }\n        \n        console.log(form_data);\n        let putdata = {\n            data : form_data,\n            token : localStorage.getItem('twitter-token'),\n        }\n        props.createTweet(putdata);\n    }\n\n    const change = (key,value) => {\n        console.log(key);\n        console.log(value);\n        setData({\n            ...data,\n            [key] : value,\n        })\n    }\n\n    const gotoprofile = () => {\n        props.goToProfile(props.profile);\n    }\n\n    console.log(data);\n\n    return(\n        <div className=\"tweetbox\">\n            {props.Loading === true ? \n            <Loader/>\n            :\n            localStorage.getItem('username') === null || localStorage.getItem('username') === undefined  ? \n            <h3 style={{fontFamily: 'Avenir-Medium',margin: 'auto',color: '#073f63'}}>Login to start tweeting!</h3>\n            :\n            <div>\n            <div style={{display:'flex'}}>\n             <div style={{cursor:'pointer'}} onClick={() => gotoprofile()}>\n            <ProfilePic image={localStorage.getItem('userPic')}/>\n            </div>\n            <form class=\"tweetboxform\">\n            <textarea id=\"tweetContent\" onChange={(e) => change(\"message\",e.target.value)} name=\"content\" rows=\"5\" cols=\"30\" placeholder=\"What's happening?\" className=\"textArea\"></textarea>\n            </form>\n            </div>\n            {\n                data && data.imagelinks && data.imagelinks.length > 0 && multi === 'img'?\n                <img className=\"tweetPostImage\" src={URL.createObjectURL(data.imagelinks[0])} />\n                :\n                ''\n            }\n            {\n                data && data.imagelinks && data.imagelinks.length > 1 && multi === 'img'?\n                <img className=\"tweetPostImage\" src={URL.createObjectURL(data.imagelinks[1])} />\n                :\n                ''\n            }\n            {\n                data && data.imagelinks && data.imagelinks.length > 2 && multi === 'img'?\n                <img className=\"tweetPostImage\" src={URL.createObjectURL(data.imagelinks[2])} />\n                :\n                ''\n            }\n            {\n                data && data.videolinks &&  multi === 'vid'?\n                <video className=\"videoDiv\"controls>\n                <source src={URL.createObjectURL(data.videolinks)} />\n                </video>\n                :\n                ''\n            }\n            <div>\n                <div onClick={() => setMulti(null)} style={{position:'relative',top:'60px',left:'400px'}}>\n                {\n                    multi ?\n                    <img src={cut} className=\"multibtn\"/>\n                    :\n                    ''\n                }\n                </div>\n            <input type=\"file\"\n                   id=\"postImage\"\n                   className = \"imageUpload\"\n                   onChange ={(e) => change(\"imagelinks\",e.target.files)}\n                   multiple\n                    />\n            <label onClick={() => setMulti('img')} style={multi === 'vid' ? {pointerEvents: 'none',opacity: '0.35'} : {}} className=\"uploadImage\" htmlFor=\"postImage\"><img src={addPicture} className=\"multibtn\"/></label>\n            <input type=\"file\"\n                   id=\"postVideo\"\n                   className = \"imageUpload\"\n                   onChange ={(e) => change(\"videolinks\",e.target.files[0])}\n                    />\n            <label onClick={() => setMulti('vid')}  style={multi === 'img' ? {pointerEvents: 'none',opacity: '0.35'} : {}}  className=\"uploadImage\" htmlFor=\"postVideo\"><img src={addVideo}  className=\"multibtn\"/></label>\n            <input className=\"smallbtn2\" onClick={e => postTweet(e)}  type=\"submit\" value={'Tweet'}/>\n            </div>\n            </div>\n             }\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    Loading : state.tweetReducer.isLoading,\n    LoginLoading : state.loginReducer.isLoading,\n    success : state.loginReducer.done,\n    LoginData : state.loginReducer.data, \n    profile : state.miscActionReducer.profile,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      createTweet: (payload) => dispatch(createTweet(payload)),\n      goToProfile: (payload) => dispatch(goToProfile(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TweetBox);\n","\nimport React,{useEffect,useState} from 'react';\nimport {fetchProfile,updateProfile} from '../actions/profileAction';\nimport '../App.css';\n\nimport email from '../assets/email.svg'\nimport { connect } from 'react-redux'\nimport Loader from '../components/loader';\nimport MyTweetList from './mytweetList';\n\nimport addPicture from '../assets/target.svg'\n\n\nconst ProfilePage = (props) => {\n   \n    const [profile,setProfile] = useState(null);\n    const [edit,setEdit] = useState(false);\n    const [data,setData] = useState(null);\n    \n\n    useEffect(() => {\n        if(props.profile){\n            setProfile(props.profile.profile)\n            setData({\n                ...data,\n                bio : props.profile.profile? props.profile.profile.bio : '',\n            });\n            console.log(props.profile);\n        }\n        else{\n            const data = {\n              username : localStorage.getItem('username'),\n            }\n            props.fetchProfile(data);\n        }\n    },[props.profile]);\n\n    useEffect(()=>{\n\n    },[edit,data]);\n\n    const editProfile = () => {\n        setEdit(true);\n    }\n\n    const saveProfile = () => {\n        let form_data = new FormData();\n        for(let key in data)\n        {\n            form_data.append(key, data[key]);\n        }\n        console.log(form_data);\n        let putdata = {\n            data : form_data,\n            token : localStorage.getItem('twitter-token'),\n            username : localStorage.getItem('username'),\n        }\n        props.updateProfile(putdata);\n        setEdit(false);\n        const d = {\n            username : localStorage.getItem('username'),\n          }\n          props.fetchProfile(d);\n    }\n\n    const change = (key,value) => {\n        setData({\n            ...data,\n            [key] : value,\n        })\n    }\n\n    return(\n         <div>\n         {\n         props.Loading === true ? <Loader/> :  profile === null ? '' : \n           \n            <div className=\"profileDiv\">\n            {\n                edit == false ?\n                <img className=\"profilePicProfile\" src={profile ? profile.profilePic : ''}/>\n                :\n                <div>\n                <img className=\"profilePicProfile\" src={profile ? profile.profilePic : ''}/>\n                <input type=\"file\"\n                       id=\"postImage\"\n                       className = \"imageUpload\"\n                       onChange ={(e) => change(\"profilePic\",e.target.files[0])}\n                        />\n                <label className=\"uploadImageProfile\" htmlFor=\"postImage\"><img src={addPicture} style={{height:'30px', width:'30px', display:'inline', margin:'auto'}}/></label>\n                </div>\n            }\n            <div>\n            <div className=\"profileName\">{localStorage.getItem('name')}</div>\n            <div className=\"profileUsername\">@{localStorage.getItem('username')}</div>\n            <div className=\"profileEmail\"> <img src={email} style={{height:'20px', width:'20px', display:'inline', margin:'auto',verticalAlign:'middle'}} />  {localStorage.getItem('email')}</div>\n            {\n                edit === false ?\n                <div>{profile === null ? <div className=\"bio\"> Tell us about yourself</div> : <div className=\"bio\" >{profile.bio}</div>}</div>\n                :\n                <div><input className=\"bioInput\" onChange={(e) => change(\"bio\",e.target.value)} value={data === null ? '' : data.bio} type=\"text\" placeholder=\"Tell us about yourself...\"/></div>\n            }\n            <div className=\"follow\">\n                <div><span>{profile.following}</span>Following</div>\n                <div><span>{profile.followers}</span>Followers </div>\n            </div>\n        <div className=\"editbtn\" onClick={() => {edit === false ? editProfile() : saveProfile() }}>{ edit === false ? 'edit' : 'save'}</div>\n            </div>\n            </div>\n         }\n         <MyTweetList/>\n        </div>\n    );\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    profile : state.profileReducer.data,\n    Loading : state.profileReducer.isLoading\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchProfile: (payload) => dispatch(fetchProfile(payload)),\n      updateProfile: (payload) => dispatch(updateProfile(payload)),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ProfilePage);\n","import {GET_PROFILE_LOAD,GET_PROFILE_SUCCESS,GET_PROFILE_FAIL,UPD_PROFILE_LOAD,UPD_PROFILE_SUCCESS,UPD_PROFILE_FAIL} from './types';\nimport {BASE} from './baseurl';\n\nexport const  fetchProfile = (payload) => dispatch => {\n\n    console.log(payload);\n    const request = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json'},\n    };\n    \n    dispatch({\n        type:GET_PROFILE_LOAD,\n        isLoading:true,\n    });\n\n    fetch(`${BASE}/profile?username=${payload.username}`,request)\n    .then(response => {\n      response.json().then(data => {\n      if(response.status === 200)\n      {\n          console.log(data);\n          dispatch({\n              type:GET_PROFILE_SUCCESS,\n              isLoading:false,\n              payload : data,\n          })\n      }\n      else\n      {\n          dispatch({\n            type:GET_PROFILE_FAIL,\n            isLoading:false,\n            payload : data,\n        })\n      }\n    })   \n    })\n    .catch(error => {\n          error.json().then(data => {\n          dispatch({\n            type:GET_PROFILE_FAIL,\n            isLoading:false,\n            payload : data,\n          })\n        })\n    });\n}\n\nexport const  updateProfile = (payload) => dispatch => {\n\n  console.log(payload);\n  const request = {\n      method: 'PUT',\n      headers : {'Authorization':'Token '+payload.token},\n      body: payload.data,\n  };\n  \n  dispatch({\n      type:UPD_PROFILE_LOAD,\n      isLoading:true,\n  });\n\n  fetch(`${BASE}/profile/update?username=${payload.username}`,request)\n  .then(response => {\n    response.json().then(data => {\n    if(response.status === 200)\n    {\n        console.log(data);\n        dispatch({\n            type:UPD_PROFILE_SUCCESS,\n            isLoading:false,\n        })\n    }\n    else\n    {\n        dispatch({\n          type:UPD_PROFILE_FAIL,\n          isLoading:false,\n      })\n    }\n  })   \n  })\n  .catch(error => {\n        error.json().then(data => {\n        dispatch({\n          type:UPD_PROFILE_FAIL,\n          isLoading:false,\n        })\n      })\n  });\n}\n","import React from 'react';\nimport '../App.css';\nimport TweetBox from './tweetbox';\nimport AllTweetList from './alltweetsList';\nimport { connect } from 'react-redux';\nimport MyTweetList from './mytweetList';\nimport ProfilePage from './profilePage';\nimport Loader from '../components/loader';\nimport { loadData } from '../actions/miscAction';\n\nconst MainLayout = (props) => {\n\n  const handleScroll = (e) => {\n    if(e.target.scrollHeight - e.target.scrollTop <= e.target.clientHeight && props.tweets.length > 0)\n    {\n      console.log('end');\n      props.loadData(props.load);\n    }\n}\n\n  return(\n\n        <div className=\"mainArea\" onScroll={(e) => handleScroll(e)}>\n          {\n             props.Loading === true ?\n             <Loader/> \n             :\n            props.profile === false ?\n            <div>\n            <TweetBox/>\n            {props.flag ?\n            <AllTweetList/>\n            :\n            <MyTweetList/>\n            }\n            <div style={{padding:'50px'}}></div>\n            </div>\n            :\n            <ProfilePage/>\n          }\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    flag : state.miscActionReducer.flag,\n    profile : state.miscActionReducer.profile,\n    Loading : state.tweetReducer.isLoading, \n    success : state.loginReducer.done, \n    load : state.miscActionReducer.load,\n    tweets : state.allTweetsReducer.tweets,\n    update : state.tweetReducer.done, \n    data: state.loginReducer.data, \n});\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadData: (payload) => dispatch(loadData(payload)),\n    };\n  };\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(MainLayout);","import React from 'react';\nimport SnackbarProvider from 'react-simple-snackbar';\n\nimport Header from './header';\nimport MainArea from '../components/mainArea';\nimport AllTweetList from './alltweetsList';\nimport Sidebar from './sidebar';\nimport RightSidebar from '../components/rightSidebar';\nimport UtilsContextProvider from '../contexts/utils';\nimport SnackbarContextProvider from '../contexts/snackbar';\n\nimport '../App.css'; \nimport MainLayout from './mainLayout';\n\nfunction Home(){\n    return (\n        <div>\n            <SnackbarProvider>\n            <SnackbarContextProvider>\n            <UtilsContextProvider>\n            <Header/>\n            <SnackbarProvider>\n            <div className=\"dashboard\">\n            <Sidebar/>\n            <MainLayout/>\n            <RightSidebar/>\n            </div>\n            </SnackbarProvider>\n            </UtilsContextProvider>\n            </SnackbarContextProvider>\n            </SnackbarProvider>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport SnackbarProvider from 'react-simple-snackbar';\n\nimport './App.css';\nimport logo from './assets/twitter.svg'; \n\nimport Signup from './containers/signup';\nimport Login from './containers/login';\n\nfunction Newtwitter() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"AppInfo\">\n        <div className=\"Info\"> New Twitter</div>\n      </div>\n      <div className=\"Sign\">\n        <img src={logo} alt=\"logo\" style={{height:'180px', width:'180px'}}/>\n      Join New Twitter today!\n      <SnackbarProvider>\n      <Signup/>\n      <Login/>\n      </SnackbarProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default Newtwitter;","import React from 'react';\nimport { HashRouter as Router,Switch, Route } from \"react-router-dom\";\nimport { CookiesProvider } from 'react-cookie';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport Home from './containers/home';\nimport Newtwitter from './newtwitter';\n\nfunction App() {\n\n  return (\n    <div>\n      <Provider store={store}>\n      <CookiesProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/entry\" exact component={Newtwitter}/>\n          <Route path=\"/\" exact component={Home}/>\n        </Switch>\n      </Router>\n      </CookiesProvider>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/twitter.33f06ef7.svg\";","module.exports = __webpack_public_path__ + \"static/media/person.6c017a1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/target.48d54fde.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.8aa66e9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlikeheart.5211ae2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/screen-player.66a2810f.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.99cfb475.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.f2103d04.svg\";"],"sourceRoot":""}